 AS V1.42 Beta [Bld 102] - source file fel.asm - page 1 - 7/13/2016 16:31:08


       1/       0 :                     ;****************************************************************************************************************
       2/       0 :                     ;                                                        
       3/       0 :                     ;                                                FEL-1 Disassembly
       4/       0 :                     ;                                                =================
       5/       0 :                     ;                                                        
       6/       0 :                     ;     Original version by RCA 1974, from the Billie Jo Call papers from Hagley. Recommented and converted by
       7/       0 :                     ;                                        Paul Robson (paul@robsons.org.uk)
       8/       0 :                     ;                                                        
       9/       0 :                     ;            EF1 is 1 when a keypad byte is available. It is read from INP 0. There is a shift switch.
      10/       0 :                     ;            I think this is set manually. (Implied). Horizontal resolution is set by a toggle switch.
      11/       0 :                     ;                                                        
      12/       0 :                     ;                     EF2 and EF3 are external tests. EF2 detects tape stop. EF4 In ? Error ?
      13/       0 :                     ;                                                        
      14/       0 :                     ;                           Port 1 is a device selector. 1 Keypad, 2 TV, 3 Tape Device
      15/       0 :                     ;                     Port 2 for keypad it is set to 0/1 for TV to 0/3, for Tape $20 is read.
      16/       0 :                     ;                   Port 3 is some flags bit 2 (4) is the audio/tape out and bit 0 (1) is run.
      17/       0 :                     ;                                    Port 4 is the external control register.
      18/       0 :                     ;                                    Port 6 is an extension port (in and out)
      19/       0 :                     ;                                                        
      20/       0 :                     ;      Clock Frequency can be derived from the tone code. In BJC notes 04 is 360us. This is 160 + 40 + 40 *4
      21/       0 :                     ;            cycles. Hence it is clocked at 1Mhz. All the products in the table (kc x us) come to 1000
      22/       0 :                     ;                                                        
      23/       0 :                     ;****************************************************************************************************************
      24/       0 :                     
      25/       0 :                                include felinclude.inc
(1)    1/       0 :                     ;****************************************************************************************************************
(1)    2/       0 :                     ;
(1)    3/       0 :                     ;													1802 Includes
(1)    4/       0 :                     ;
(1)    5/       0 :                     ;****************************************************************************************************************
(1)    6/       0 :                     
(1)    7/       0 :                     	cpu 1802
(1)    8/       0 :                     
(1)    9/       0 : =0H                 r0 = 0 															; register definitions
(1)   10/       0 : =1H                 r1 = 1
(1)   11/       0 : =2H                 r2 = 2
(1)   12/       0 : =3H                 r3 = 3
(1)   13/       0 : =4H                 r4 = 4
(1)   14/       0 : =5H                 r5 = 5
(1)   15/       0 : =6H                 r6 = 6
(1)   16/       0 : =7H                 r7 = 7
(1)   17/       0 : =8H                 r8 = 8
(1)   18/       0 : =9H                 r9 = 9
(1)   19/       0 : =AH                 ra = 10
(1)   20/       0 : =BH                 rb = 11
(1)   21/       0 : =CH                 rc = 12
(1)   22/       0 : =DH                 rd = 13
(1)   23/       0 : =EH                 re = 14
(1)   24/       0 : =FH                 rf = 15
(1)   25/       0 :                     
(1)   26/       0 : =0H                 keypadPort = 0 													; keypad read (in only)
(1)   27/       0 : =1H                 selectDevice = 1 												; select DMA device (tape 3 tv 2 keypad 1)
(1)   28/       0 : =2H                 controlDevice = 2 												; control of selected device
(1)   29/       0 : =3H                 audioControl = 3  												; control tape/audio
(1)   30/       0 : =4H                 externalControl = 4 											; external control register (used in monitor)
(1)   31/       0 :                     
(1)   32/       0 : =6H                 externalBus = 6 												; external bus (in/out)
(1)   33/       0 :                     
(1)   34/       0 : =700H               screen = 0700h													; screen RAM is here.
(1)   35/       0 :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm(felinclude.inc) - page 2 - 7/13/2016 16:31:08


(1)   36/       0 : =1H                 devKeypad = 1 													; device IDs for port 1
(1)   37/       0 : =2H                 devTV = 2
(1)   38/       0 : =3H                 devTape = 3
(1)   39/       0 :                     
(1)   40/       0 : =0H                 cKeyOff = 0 													; controls for keyboard, TV and Tape
(1)   41/       0 : =1H                 cKeyOn = 1 														; for port 2.
(1)   42/       0 : =3H                 cTVOn = 3
(1)   43/       0 : =0H                 cTVOff = 0
(1)   44/       0 : =20H                cTapeRead = 20h
(1)   45/       0 :                     
(1)   46/       0 : =4H                 aSpeakerBit = 4 												; bit 2 is speaker out
(1)   47/       0 : =2H                 aTapeBit = 2 													; bit 1 is tape out
(1)   48/       0 : =1H                 aConnect = 1 													; bit 0 seems to be 1 to connect it.
(1)   49/       0 :                     
(1)   50/       0 :                     fel macro 	fw 													; compile FEL-1 instruction in Hi-Low order
(1)   51/       0 :                     	db 	(fw) / 256
(1)   52/       0 :                     	db 	(fw) & 255
(1)   53/       0 :                     	endm
(1)   54/       0 :                     
      26/       0 :                     
      27/       0 :                     start:
      28/       0 : 00                          idl                                                              
      29/       1 : F8 01                       ldi     1                                                        ; Set interrupt, stack
      30/       3 : B1                          phi     r1                                                       ; they are all in Page 1
      31/       4 : B2                          phi     r2                                                       
      32/       5 : B4                          phi     r4                                                       
      33/       6 : B8                          phi     r8                                                       
      34/       7 : F8 19                       ldi     interrupt & 255                                          ; R1 = $119 Interrupt routine
      35/       9 : A1                          plo     r1                                                       
      36/       A : F8 FF                       ldi     stacktop & 255                                           ; R2 = $1FF Stack top
      37/       C : A2                          plo     r2                                                       
      38/       D : F8 3B                       ldi     nextinstruction & 255                                    
      39/       F : A4                          plo     r4                                                       ; R4 = $13B Execute next instruction
      40/      10 : F8 66                       ldi     call02 & 255                                             
      41/      12 : A8                          plo     r8                                                       ; R8 = $166 Call $1nn where nn is next byte
      42/      13 : 90                          ghi     r0                                                       
      43/      14 : A5                          plo     r5                                                       
      44/      15 : F8 84                       ldi     monitor & 255                                            ; R5 = $0B4 "Macro PC"
      45/      17 : B5                          phi     r5                                                       
      46/      18 : D4                          sep     r4                                                       ; go to "Util" in R4
      47/      19 :                     
      48/      19 :                     ;****************************************************************************************************************
      49/      19 :                     ;                                                        
      50/      19 :                     ;                                                7xxx Instructions
      51/      19 :                     ;                                                        
      52/      19 :                     ;****************************************************************************************************************
      53/      19 :                     
      54/      19 :                     opcode7:
      55/      19 : D8                          sep     r8                                                       ; Fetch A and B from memory
      56/      1A : 73                          db      readabregs & 255                                         
      57/      1B : E6                          sex     r6                                                       ; X points to register X
      58/      1C : 45                          lda     r5                                                       ; fetch low byte
      59/      1D : A3                          plo     r3                                                       ; go there.
      60/      1E :                     ;   
      61/      1E :                     ;   7x1E M(A)->Vx
      62/      1E :                     ;   
      63/      1E : 4A                          lda     ra                                                       ; read M(RA)
      64/      1F : 56                          str     r6                                                       ; save in X
      65/      20 : D4                          sep     r4                                                       
      66/      21 :                     ;   
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 3 - 7/13/2016 16:31:08


      67/      21 :                     ;   7x21 M(B)->Vx
      68/      21 :                     ;   
      69/      21 : 4B                          lda     rb                                                       ; read M(RB)
      70/      22 : 56                          str     r6                                                       ; save in X
      71/      23 : D4                          sep     r4                                                       
      72/      24 :                     ;   
      73/      24 :                     ;   7x24 Vx->M(A)
      74/      24 :                     ;   
      75/      24 : 46                          lda     r6                                                       ; get Vx
      76/      25 : 5A                          str     ra                                                       ; write to M(RA)
      77/      26 : D4                          sep     r4                                                       
      78/      27 :                     ;   
      79/      27 :                     ;   7x27 Vx->M(B)
      80/      27 :                     ;   
      81/      27 : 46                          lda     r6                                                       ; get Vx
      82/      28 : 5B                          str     rb                                                       ; write to M(RB)
      83/      29 : D4                          sep     r4                                                       
      84/      2A :                     ;   
      85/      2A :                     ;   7x2A Vx -> A.0
      86/      2A :                     ;   
      87/      2A : F8 11                       ldi     (areg+1) & 255                                           ; point R7 to RA.0
      88/      2C :                     setaddrreg:
      89/      2C : A7                          plo     r7                                                       
      90/      2D : 46                          lda     r6                                                       ; get Vx
      91/      2E : 57                          str     r7                                                       ; write it there.
      92/      2F : D4                          sep     r4                                                       
      93/      30 :                     ;   
      94/      30 :                     ;   7x30 Vx -> A.1
      95/      30 :                     ;   
      96/      30 : F8 10                       ldi     areg & 255                                               ; RA.1 address
      97/      32 : 30 2C                       br      setaddrreg                                               
      98/      34 :                     ;   
      99/      34 :                     ;   7x30 Vx -> B.0
     100/      34 :                     ;   
     101/      34 : F8 13                       ldi     (breg+1) & 255                                           ; RB.0 address
     102/      36 : 30 2C                       br      setaddrreg                                               
     103/      38 :                     ;   
     104/      38 :                     ;   7x38 A.0 -> Vx
     105/      38 :                     ;   
     106/      38 : 8A                          glo     ra                                                       ; RA.0 value
     107/      39 : 56                          str     r6                                                       ; put in X
     108/      3A : D4                          sep     r4                                                       
     109/      3B :                     ;   
     110/      3B :                     ;   7x3B A.1 -> Vx
     111/      3B :                     ;   
     112/      3B : 9A                          ghi     ra                                                       ; RA.1 value
     113/      3C : 56                          str     r6                                                       ; put in X
     114/      3D : D4                          sep     r4                                                       
     115/      3E :                     ;   
     116/      3E :                     ;   7x3E Shift X left 4
     117/      3E :                     ;   
     118/      3E : D8                          sep     r8                                                       ; Do Vx << 4
     119/      3F : 4D                          db      shiftvxleft4 & 255                                       
     120/      40 : D4                          sep     r4                                                       
     121/      41 :                     ;   
     122/      41 :                     ;   7x41 Shift X Right 4
     123/      41 :                     ;   
     124/      41 : F0                          ldx                                                              ; Read R(X)
     125/      42 : F6                          shr                                                              
     126/      43 : F6                          shr                                                              
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 4 - 7/13/2016 16:31:08


     127/      44 : F6                          shr                                                              
     128/      45 : F6                          shr                                                              
     129/      46 : 56                          str     r6                                                       ; write it back
     130/      47 : F6                          shr                                                              
     131/      48 :                     ;   
     132/      48 :                     ;   7x4B Vx Delay (Tape On, Speaker off)
     133/      48 :                     ;   
     134/      48 : E3                          sex     r3                                                       ; X = P = R3
     135/      49 : 46                          lda     r6                                                       ; read R(X)
     136/      4A : BF                          phi     rf                                                       ; put in RF.0
     137/      4B :                     tapedelayloop:
     138/      4B : 63                          out     audiocontrol                                             ; tape on, speaker off.
     139/      4C : 03                          db      atapebit+aconnect                                        
     140/      4D : 2F                          dec     rf                                                       ; dec counter
     141/      4E : 9F                          ghi     rf                                                       ; timed out
     142/      4F : 3A 4B                       bnz     tapedelayloop                                            ; keep going.
     143/      51 : D4                          sep     r4                                                       
     144/      52 :                     ;   
     145/      52 :                     ;   7x52 Convert Vx to 3 digit decimal at A,A+1,A+2
     146/      52 :                     ;   
     147/      52 : F0                          ldx                                                              ; get R(X)
     148/      53 : BF                          phi     rf                                                       ; save in RF.1
     149/      54 : F8 14                       ldi     dectable & 255                                           ; point R7 to the 100,10,1
     150/      56 : A7                          plo     r7                                                       
     151/      57 : 2A                          dec     ra                                                       ; predec RA
     152/      58 :                     nextdigit:
     153/      58 : 1A                          inc     ra                                                       ; A to next cell.
     154/      59 : 93                          ghi     r3                                                       ; D = 0
     155/      5A : 5A                          str     ra                                                       ; clear counter
     156/      5B :                     subtractunit:
     157/      5B : 47                          lda     r7                                                       ; read divisor
     158/      5C : 27                          dec     r7                                                       ; unpick it
     159/      5D : F5                          sd                                                               ; subtract from R(X)
     160/      5E : 3B 68                       bnf     borrowoccurred                                           ; if no borrow then division complete
     161/      60 : 56                          str     r6                                                       ; write it back to R(X)
     162/      61 : 4A                          lda     ra                                                       ; read counter of divisions
     163/      62 : 2A                          dec     ra                                                       ; undo inc
     164/      63 : FC 01                       adi     01                                                       ; inc counter
     165/      65 : 5A                          str     ra                                                       ; write back
     166/      66 : 30 5B                       br      subtractunit                                             ; try to deduct it again.
     167/      68 :                     borrowoccurred:
     168/      68 : 47                          lda     r7                                                       ; get R7 - divider just done and inc R7 to next
     169/      69 : F6                          shr                                                              ; shift it right
     170/      6A : 3B 58                       bnf     nextdigit                                                ; until found the 1, i.e. have done 1
     171/      6C : 9F                          ghi     rf                                                       ; fix up R6 back
     172/      6D : 56                          str     r6                                                       
     173/      6E : D4                          sep     r4                                                       
     174/      6F :                     ;   
     175/      6F :                     ;   7F6F INC A. Must use 7F6F so R6 points to VF, the byte before A
     176/      6F :                     ;   
     177/      6F : 1A                          inc     ra                                                       ; increment RA
     178/      70 : 16                          inc     r6                                                       ; R6 now points to RA
     179/      71 : 9A                          ghi     ra                                                       ; write it back.
     180/      72 : 56                          str     r6                                                       
     181/      73 : 16                          inc     r6                                                       
     182/      74 : 8A                          glo     ra                                                       
     183/      75 : 56                          str     r6                                                       
     184/      76 : D4                          sep     r4                                                       
     185/      77 : 00                          db      00                                                       
     186/      78 :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 5 - 7/13/2016 16:31:08


     187/      78 :                     ;****************************************************************************************************************
     188/      78 :                     ;                                                        
     189/      78 :                     ;                                              Clear Screen Routine
     190/      78 :                     ;                                                        
     191/      78 :                     ;****************************************************************************************************************
     192/      78 :                     
     193/      78 : 93                          ghi     r3                                                       ; RA = $800 (R3.1 = 0)
     194/      79 : AA                          plo     ra                                                       
     195/      7A : F8 08                       ldi     (screen / 256) + 1                                       
     196/      7C : BA                          phi     ra                                                       
     197/      7D :                     clsloop:
     198/      7D : 2A                          dec     ra                                                       ; dec RA
     199/      7E : 93                          ghi     r3                                                       ; D = 0
     200/      7F : 5A                          str     ra                                                       ; clear screen space
     201/      80 : 8A                          glo     ra                                                       ; check RA.0
     202/      81 : 3A 7D                       bnz     clsloop                                                  ; go back if not finished
     203/      83 : D4                          sep     r4                                                       ; next instruction.
     204/      84 :                     
     205/      84 :                     ;****************************************************************************************************************
     206/      84 :                     ;                                                        
     207/      84 :                     ;                                  This is the FEL-1 Boot Code / Micro monitor.
     208/      84 :                     ;                                                        
     209/      84 :                     ;****************************************************************************************************************
     210/      84 :                     
     211/      84 :                     monitor:
     212/      84 : (MACRO)                     fel     06000h                                                   ; stop tape
     212/      84 : 60                          db      (06000H) / 256
     212/      85 : 00                          db      (06000H) & 255
     213/      86 : (MACRO)                     fel     0022fh                                                   ; copy registers to stack space.
     213/      86 : 02                          db      (0022FH) / 256
     213/      87 : 2F                          db      (0022FH) & 255
     214/      88 :                     ;   
     215/      88 :                     ;   Read key 0 for Run, C for Write, A for Read Mem, B for Write Mem
     216/      88 :                     ;   
     217/      88 : (MACRO)                     fel     0e17ah                                                   ; read Byte into V1
     217/      88 : E1                          db      (0E17AH) / 256
     217/      89 : 7A                          db      (0E17AH) & 255
     218/      8A : (MACRO)                     fel     03100h                                                   ; skip next instruction if not 00
     218/      8A : 31                          db      (03100H) / 256
     218/      8B : 00                          db      (03100H) & 255
     219/      8C : (MACRO)                     fel     0f400h                                                   ; if was 00, then run program from 400
     219/      8C : F4                          db      (0F400H) / 256
     219/      8D : 00                          db      (0F400H) & 255
     220/      8E : (MACRO)                     fel     0310ch                                                   ; if was 0C, then go to write code
     220/      8E : 31                          db      (0310CH) / 256
     220/      8F : 0C                          db      (0310CH) & 255
     221/      90 : (MACRO)                     fel     0f000h+felwritetape                                      
     221/      90 : F0                          db      (0F000H+FELWRITETAPE) / 256
     221/      91 : CA                          db      (0F000H+FELWRITETAPE) & 255
     222/      92 :                     ;   
     223/      92 :                     ;   Read three keystrokes into A
     224/      92 :                     ;   
     225/      92 : (MACRO)                     fel     0025ch                                                   ; turn television on.
     225/      92 : 02                          db      (0025CH) / 256
     225/      93 : 5C                          db      (0025CH) & 255
     226/      94 : (MACRO)                     fel     0007bh                                                   ; clear screen memory
     226/      94 : 00                          db      (0007BH) / 256
     226/      95 : 7B                          db      (0007BH) & 255
     227/      96 : (MACRO)                     fel     0e27ah                                                   ; read byte to V2 (high address nibble)
     227/      96 : E2                          db      (0E27AH) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 6 - 7/13/2016 16:31:08


     227/      97 : 7A                          db      (0E27AH) & 255
     228/      98 : (MACRO)                     fel     07230h                                                   ; write to MSB of A
     228/      98 : 72                          db      (07230H) / 256
     228/      99 : 30                          db      (07230H) & 255
     229/      9A : (MACRO)                     fel     0e27ah                                                   ; read byte to V2 (middle address nibble)
     229/      9A : E2                          db      (0E27AH) / 256
     229/      9B : 7A                          db      (0E27AH) & 255
     230/      9C : (MACRO)                     fel     0e37ah                                                   ; read byte to V3 (low address nibble)
     230/      9C : E3                          db      (0E37AH) / 256
     230/      9D : 7A                          db      (0E37AH) & 255
     231/      9E : (MACRO)                     fel     01000h+felpack                                           ; call pack V2/V3 to V2
     231/      9E : 10                          db      (01000H+FELPACK) / 256
     231/      9F : E2                          db      (01000H+FELPACK) & 255
     232/      A0 : (MACRO)                     fel     0722ah                                                   ; write to LSB of A
     232/      A0 : 72                          db      (0722AH) / 256
     232/      A1 : 2A                          db      (0722AH) & 255
     233/      A2 : (MACRO)                     fel     02900h                                                   ; Clear V9
     233/      A2 : 29                          db      (02900H) / 256
     233/      A3 : 00                          db      (02900H) & 255
     234/      A4 :                     ;   
     235/      A4 :                     ;   Display Address
     236/      A4 :                     ;   
     237/      A4 :                     feldisplay:
     238/      A4 : (MACRO)                     fel     0723bh                                                   ; MSB of A to V2
     238/      A4 : 72                          db      (0723BH) / 256
     238/      A5 : 3B                          db      (0723BH) & 255
     239/      A6 : (MACRO)                     fel     02409h                                                   ; Set V4 = (1,1)
     239/      A6 : 24                          db      (02409H) / 256
     239/      A7 : 09                          db      (02409H) & 255
     240/      A8 : (MACRO)                     fel     01000h+felshow                                           ; unpack and show V2
     240/      A8 : 10                          db      (01000H+FELSHOW) / 256
     240/      A9 : E8                          db      (01000H+FELSHOW) & 255
     241/      AA : (MACRO)                     fel     07238h                                                   ; LSB of A to V2
     241/      AA : 72                          db      (07238H) / 256
     241/      AB : 38                          db      (07238H) & 255
     242/      AC : (MACRO)                     fel     0240bh                                                   ; Set V4 = (3,1)
     242/      AC : 24                          db      (0240BH) / 256
     242/      AD : 0B                          db      (0240BH) & 255
     243/      AE : (MACRO)                     fel     01000h+felshow                                           ; unpack and show V2
     243/      AE : 10                          db      (01000H+FELSHOW) / 256
     243/      AF : E8                          db      (01000H+FELSHOW) & 255
     244/      B0 :                     ;   
     245/      B0 :                     ;   Display Data
     246/      B0 :                     ;   
     247/      B0 : (MACRO)                     fel     0721eh                                                   ; read contents of Memory(A) to V2
     247/      B0 : 72                          db      (0721EH) / 256
     247/      B1 : 1E                          db      (0721EH) & 255
     248/      B2 : (MACRO)                     fel     02416h                                                   ; Set V4 = (6,2)
     248/      B2 : 24                          db      (02416H) / 256
     248/      B3 : 16                          db      (02416H) & 255
     249/      B4 : (MACRO)                     fel     010ebh                                                   ; unpack and show V2
     249/      B4 : 10                          db      (010EBH) / 256
     249/      B5 : EB                          db      (010EBH) & 255
     250/      B6 :                     ;   
     251/      B6 :                     ;   First time around, increment A to point to next cell, second time around go back to the display address code.
     252/      B6 :                     ;   
     253/      B6 : (MACRO)                     fel     03901h                                                   ; increment A if V9 != 0 (not first time)
     253/      B6 : 39                          db      (03901H) / 256
     253/      B7 : 01                          db      (03901H) & 255
     254/      B8 : (MACRO)                     fel     07f6fh                                                   
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 7 - 7/13/2016 16:31:08


     254/      B8 : 7F                          db      (07F6FH) / 256
     254/      B9 : 6F                          db      (07F6FH) & 255
     255/      BA : (MACRO)                     fel     0e27ah                                                   ; get hex key (upper nibble)
     255/      BA : E2                          db      (0E27AH) / 256
     255/      BB : 7A                          db      (0E27AH) & 255
     256/      BC : (MACRO)                     fel     02901h                                                   ; set V9 = 1 so increments next time
     256/      BC : 29                          db      (02901H) / 256
     256/      BD : 01                          db      (02901H) & 255
     257/      BE : (MACRO)                     fel     0310ah                                                   ; been round twice ?
     257/      BE : 31                          db      (0310AH) / 256
     257/      BF : 0A                          db      (0310AH) & 255
     258/      C0 : (MACRO)                     fel     0f000h+feldisplay                                        ; if command was A (read) do next w/o update
     258/      C0 : F0                          db      (0F000H+FELDISPLAY) / 256
     258/      C1 : A4                          db      (0F000H+FELDISPLAY) & 255
     259/      C2 : (MACRO)                     fel     0e37ah                                                   ; get the low nibble
     259/      C2 : E3                          db      (0E37AH) / 256
     259/      C3 : 7A                          db      (0E37AH) & 255
     260/      C4 : (MACRO)                     fel     010e2h                                                   ; call pack V2/V3 to V2
     260/      C4 : 10                          db      (010E2H) / 256
     260/      C5 : E2                          db      (010E2H) & 255
     261/      C6 : (MACRO)                     fel     07224h                                                   ; store V(2) at M->A (e.g. new address)
     261/      C6 : 72                          db      (07224H) / 256
     261/      C7 : 24                          db      (07224H) & 255
     262/      C8 : (MACRO)                     fel     0f000h+feldisplay                                        ; redisplay address and data.
     262/      C8 : F0                          db      (0F000H+FELDISPLAY) / 256
     262/      C9 : A4                          db      (0F000H+FELDISPLAY) & 255
     263/      CA :                     ;   
     264/      CA :                     ;   Write code to tape
     265/      CA :                     ;   
     266/      CA :                     felwritetape:
     267/      CA : (MACRO)                     fel     00268h                                                   ; disable hex keyboard input
     267/      CA : 02                          db      (00268H) / 256
     267/      CB : 68                          db      (00268H) & 255
     268/      CC : (MACRO)                     fel     021ffh                                                   ; set V1 = $FF (5 sec approx)
     268/      CC : 21                          db      (021FFH) / 256
     268/      CD : FF                          db      (021FFH) & 255
     269/      CE : (MACRO)                     fel     07148h                                                   ; delay of this length so stabilises
     269/      CE : 71                          db      (07148H) / 256
     269/      CF : 48                          db      (07148H) & 255
     270/      D0 : (MACRO)                     fel     02140h                                                   ; set V1 = $40 (1 sec approx)
     270/      D0 : 21                          db      (02140H) / 256
     270/      D1 : 40                          db      (02140H) & 255
     271/      D2 : (MACRO)                     fel     07148h                                                   ; more delay
     271/      D2 : 71                          db      (07148H) / 256
     271/      D3 : 48                          db      (07148H) & 255
     272/      D4 : (MACRO)                     fel     0d210h                                                   ; tone and delay
     272/      D4 : D2                          db      (0D210H) / 256
     272/      D5 : 10                          db      (0D210H) & 255
     273/      D6 : (MACRO)                     fel     07148h                                                   ; delay with that tone (start tone ?)
     273/      D6 : 71                          db      (07148H) / 256
     273/      D7 : 48                          db      (07148H) & 255
     274/      D8 : (MACRO)                     fel     0a000h                                                   ; A = 0
     274/      D8 : A0                          db      (0A000H) / 256
     274/      D9 : 00                          db      (0A000H) & 255
     275/      DA : (MACRO)                     fel     0f000h+felnext                                           ; (patched out)
     275/      DA : F0                          db      (0F000H+FELNEXT) / 256
     275/      DB : DC                          db      (0F000H+FELNEXT) & 255
     276/      DC :                     felnext:
     277/      DC : (MACRO)                     fel     0e3a0h                                                   ; write tape M(A) to end
     277/      DC : E3                          db      (0E3A0H) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 8 - 7/13/2016 16:31:08


     277/      DD : A0                          db      (0E3A0H) & 255
     278/      DE : (MACRO)                     fel     0d210h                                                   ; tone and delay
     278/      DE : D2                          db      (0D210H) / 256
     278/      DF : 10                          db      (0D210H) & 255
     279/      E0 :                     felstop:
     280/      E0 : (MACRO)                     fel     0f000h+felstop                                           ; stop
     280/      E0 : F0                          db      (0F000H+FELSTOP) / 256
     280/      E1 : E0                          db      (0F000H+FELSTOP) & 255
     281/      E2 :                     ;   
     282/      E2 :                     ;   Pack V2/V3 nibbles into a single byte (subroutine)
     283/      E2 :                     ;   
     284/      E2 :                     felpack:
     285/      E2 : (MACRO)                     fel     0723eh                                                   ; Shift V2 left 4 bits
     285/      E2 : 72                          db      (0723EH) / 256
     285/      E3 : 3E                          db      (0723EH) & 255
     286/      E4 : (MACRO)                     fel     08231h                                                   ; V2 = V2 or V3
     286/      E4 : 82                          db      (08231H) / 256
     286/      E5 : 31                          db      (08231H) & 255
     287/      E6 : (MACRO)                     fel     0026eh                                                   ; return
     287/      E6 : 02                          db      (0026EH) / 256
     287/      E7 : 6E                          db      (0026EH) & 255
     288/      E8 :                     ;   
     289/      E8 :                     ;   Unpack V2 into 2 digits and display at V4 (subroutine)
     290/      E8 :                     ;   
     291/      E8 :                     felshow:
     292/      E8 : (MACRO)                     fel     0b300h                                                   ; point B to $300
     292/      E8 : B3                          db      (0B300H) / 256
     292/      E9 : 00                          db      (0B300H) & 255
     293/      EA : (MACRO)                     fel     0230fh                                                   ; V3 = 0Fh
     293/      EA : 23                          db      (0230FH) / 256
     293/      EB : 0F                          db      (0230FH) & 255
     294/      EC : (MACRO)                     fel     08322h                                                   ; And out lowest nibble into V3
     294/      EC : 83                          db      (08322H) / 256
     294/      ED : 22                          db      (08322H) & 255
     295/      EE : (MACRO)                     fel     07241h                                                   ; Shift V2 right 4, now has highest nibble
     295/      EE : 72                          db      (07241H) / 256
     295/      EF : 41                          db      (07241H) & 255
     296/      F0 : (MACRO)                     fel     07334h                                                   ; B = $03<low>
     296/      F0 : 73                          db      (07334H) / 256
     296/      F1 : 34                          db      (07334H) & 255
     297/      F2 : (MACRO)                     fel     07321h                                                   ; Read Mem(B) -> V3, addr of gfx data
     297/      F2 : 73                          db      (07321H) / 256
     297/      F3 : 21                          db      (07321H) & 255
     298/      F4 : (MACRO)                     fel     09345h                                                   ; Draw V3 pattern at cell V4
     298/      F4 : 93                          db      (09345H) / 256
     298/      F5 : 45                          db      (09345H) & 255
     299/      F6 : (MACRO)                     fel     054ffh                                                   ; point to previous cell
     299/      F6 : 54                          db      (054FFH) / 256
     299/      F7 : FF                          db      (054FFH) & 255
     300/      F8 : (MACRO)                     fel     07234h                                                   ; B = $03<high>
     300/      F8 : 72                          db      (07234H) / 256
     300/      F9 : 34                          db      (07234H) & 255
     301/      FA : (MACRO)                     fel     07221h                                                   ; Read Mem(B) -> V2, addr of gfx data
     301/      FA : 72                          db      (07221H) / 256
     301/      FB : 21                          db      (07221H) & 255
     302/      FC : (MACRO)                     fel     09245h                                                   ; Draw V2 pattern at cell V4
     302/      FC : 92                          db      (09245H) / 256
     302/      FD : 45                          db      (09245H) & 255
     303/      FE : (MACRO)                     fel     0026eh                                                   ; return
     303/      FE : 02                          db      (0026EH) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 9 - 7/13/2016 16:31:08


     303/      FF : 6E                          db      (0026EH) & 255
     304/     100 :                     
     305/     100 :                     ;****************************************************************************************************************
     306/     100 :                     ;                                                        
     307/     100 :                     ;                                       Register Area and Conversion table
     308/     100 :                     ;                                                        
     309/     100 :                     ;****************************************************************************************************************
     310/     100 :                     
     311/     100 :                     registers:
     312/     100 : 00 00 00 00                 db      0,0,0,0                                                  ; V0-VF
     313/     104 : 00 00 00 00                 db      0,0,0,0                                                  
     314/     108 : 00 00 00 00                 db      0,0,0,0                                                  
     315/     10C : 00 00 00 00                 db      0,0,0,0                                                  
     316/     110 :                     areg:
     317/     110 : 00 00                       db      0,0                                                      ; A
     318/     112 :                     breg:
     319/     112 : 00 00                       db      0,0                                                      ; B
     320/     114 :                     
     321/     114 :                     dectable:
     322/     114 : 64                          db      100                                                      ; dividers.
     323/     115 : 0A                          db      10                                                       
     324/     116 : 01                          db      1                                                        
     325/     117 :                     
     326/     117 :                     ;****************************************************************************************************************
     327/     117 :                     ;                                                        
     328/     117 :                     ;                                               Interrupt Routine.
     329/     117 :                     ;                   Sets up R0 to point to display at $700 and decrements VD,VE,VF if non-zero.
     330/     117 :                     ;                                                        
     331/     117 :                     ;****************************************************************************************************************
     332/     117 :                     
     333/     117 :                     exitinterrupt:
     334/     117 : 42                          lda     r2                                                       ; pop D off the stack
     335/     118 : 70                          ret                                                              ; return re-enabling interrupts.
     336/     119 :                     interrupt:
     337/     119 : 22                          dec     r2                                                       ; save T on Stack
     338/     11A : 78                          sav                                                              
     339/     11B : 22                          dec     r2                                                       ; save D on Stack
     340/     11C : 52                          str     r2                                                       ; Save on stack.
     341/     11D :                     
     342/     11D : F8 07                       ldi     screen/256                                               ; set R0 (display pointer) to $700
     343/     11F : B0                          phi     r0                                                       
     344/     120 : F8 00                       ldi     screen&255                                               
     345/     122 : A0                          plo     r0                                                       
     346/     123 :                     
     347/     123 : 19                          inc     r9                                                       ; increment R9 (timer ?)
     348/     124 :                     
     349/     124 : 86                          glo     r6                                                       ; get R6
     350/     125 : BD                          phi     rd                                                       ; save in RD.1
     351/     126 :                     
     352/     126 : F8 0D                       ldi     (registers + 0dh) & 255                                  ; point to Vd
     353/     128 : A6                          plo     r6                                                       
     354/     129 :                     timerupdateloop:
     355/     129 : 46                          lda     r6                                                       ; read R6 (VD Timer first time around)
     356/     12A : 26                          dec     r6                                                       ; fix up R6
     357/     12B : 32 31                       bz      nexttimer                                                
     358/     12D : AD                          plo     rd                                                       ; save in RD.0
     359/     12E : 2D                          dec     rd                                                       ; decrement it (so we don't change DF)
     360/     12F : 8D                          glo     rd                                                       ; recover it
     361/     130 : 56                          str     r6                                                       ; save timer now updated
     362/     131 :                     nexttimer:
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 10 - 7/13/2016 16:31:08


     363/     131 : 16                          inc     r6                                                       ; point to next timer
     364/     132 : 86                          glo     r6                                                       ; get low byte
     365/     133 : FB 10                       xri     (registers+10h) & 255                                    ; done all timers
     366/     135 : 3A 29                       bnz     timerupdateloop                                          ; if not, go back round again.
     367/     137 : 9D                          ghi     rd                                                       ; get RD.1, fix R6 back up again.
     368/     138 : A6                          plo     r6                                                       
     369/     139 : 30 17                       br      exitinterrupt                                            ; and go back to exit the routine.
     370/     13B :                     
     371/     13B :                     ;****************************************************************************************************************
     372/     13B :                     ;                                                        
     373/     13B :                     ;            Main execution loop, run in R4. Sets up R6 (X) R7 (Y) and calls code from table at 01C0h
     374/     13B :                     ;                                                        
     375/     13B :                     ;****************************************************************************************************************
     376/     13B :                     
     377/     13B :                     nextinstruction:
     378/     13B : 94                          ghi     r4                                                       ; D = 1
     379/     13C : B6                          phi     r6                                                       ; Set R6,R7,RC High to Page 1.
     380/     13D : B7                          phi     r7                                                       
     381/     13E : BC                          phi     rc                                                       
     382/     13F :                     
     383/     13F : 45                          lda     r5                                                       ; Read R5 (instruction High)
     384/     140 : AC                          plo     rc                                                       ; Save in RC.0
     385/     141 : FA 0F                       ani     0fh                                                      ; get the X register number
     386/     143 : A6                          plo     r6                                                       ; R6 now points to Register X.
     387/     144 :                     
     388/     144 : 8C                          glo     rc                                                       ; get the instruction High
     389/     145 : F6                          shr                                                              ; shift right four times.
     390/     146 : F6                          shr                                                              
     391/     147 : F6                          shr                                                              
     392/     148 : F6                          shr                                                              ; instruction code in D
     393/     149 : 32 60                       bz      opcode0                                                  ; if zero, its a machine language
     394/     14B : F9 C0                       ori     instructionvector & 255                                  ; OR with $C0
     395/     14D : AC                          plo     rc                                                       ; Put in RC.0  now points to vector table
     396/     14E :                     
     397/     14E : 45                          lda     r5                                                       ; Read low byte of instruction
     398/     14F : 25                          dec     r5                                                       ; Point it back to R5
     399/     150 : F6                          shr                                                              ; shift right four times
     400/     151 : F6                          shr                                                              
     401/     152 : F6                          shr                                                              
     402/     153 : F6                          shr                                                              ; D now contains the Y register number
     403/     154 : A7                          plo     r7                                                       ; R7 now points to Register Y.
     404/     155 :                     
     405/     155 : 4C                          lda     rc                                                       ; Read High byte of program
     406/     156 : B3                          phi     r3                                                       ; save in R3.1
     407/     157 : 8C                          glo     rc                                                       ; get low byte of RC
     408/     158 : FC 0F                       adi     0fh                                                      ; point to low address (+1 already)
     409/     15A : AC                          plo     rc                                                       ; write it back
     410/     15B : 4C                          lda     rc                                                       ; get low byte of address
     411/     15C :                     execr3:
     412/     15C : A3                          plo     r3                                                       ; save in R3.0, now has code address
     413/     15D : D3                          sep     r3                                                       ; and call it
     414/     15E : 30 3B                       br      nextinstruction                                          ; make re-entrant
     415/     160 :                     
     416/     160 :                     ;****************************************************************************************************************
     417/     160 :                     ;                                                        
     418/     160 :                     ;                                       0aaa run machine code at aaa in P3.
     419/     160 :                     ;                                                        
     420/     160 :                     ;****************************************************************************************************************
     421/     160 :                     
     422/     160 :                     opcode0:
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 11 - 7/13/2016 16:31:08


     423/     160 : 96                          ghi     r6                                                       ; get R6.1 (1)
     424/     161 : B3                          phi     r3                                                       ; put in R3.1
     425/     162 : 45                          lda     r5                                                       ; read instruction second byte.
     426/     163 : 30 5C                       br      execr3                                                   
     427/     165 :                     ;   
     428/     165 :                     ;   R8 points here. Calls the $02 <next byte> running in RC.
     429/     165 :                     ;   
     430/     165 :                     exit02call:
     431/     165 : DC                          sep     rc                                                       ; return.
     432/     166 :                     call02:
     433/     166 : 43                          lda     r3                                                       ; read next byte in code
     434/     167 : AC                          plo     rc                                                       ; save in RC.0
     435/     168 : F8 02                       ldi     02                                                       ; put 2xx in RC
     436/     16A : BC                          phi     rc                                                       
     437/     16B : 30 65                       br      exit02call                                               ; and call it, making it re-entrant
     438/     16D :                     ;   
     439/     16D :                     ;   R8 routines to return RF.1, RF.0.
     440/     16D :                     ;   
     441/     16D :                     exitghirf:
     442/     16D : DC                          sep     rc                                                       ; get RF.1
     443/     16E :                     ghirf:
     444/     16E : 9F                          ghi     rf                                                       
     445/     16F : 30 6D                       br      exitghirf                                                
     446/     171 :                     ;   
     447/     171 :                     exitglorf:
     448/     171 : DC                          sep     rc                                                       ; get RF.0
     449/     172 :                     glorf:
     450/     172 : 8F                          glo     rf                                                       
     451/     173 : 30 71                       br      exitglorf                                                
     452/     175 :                     
     453/     175 :                     ;****************************************************************************************************************
     454/     175 :                     ;                                                        
     455/     175 :                     ;                                     Exaa - execute code at 01aa with X = 6
     456/     175 :                     ;                                                        
     457/     175 :                     ;****************************************************************************************************************
     458/     175 :                     
     459/     175 :                     instructione:
     460/     175 : D8                          sep     r8                                                       ; load A and B into RA and RB
     461/     176 : 73                          db      readabregs & 255                                         
     462/     177 : E6                          sex     r6                                                       ; index is Vx
     463/     178 : 45                          lda     r5                                                       ; get the 2nd instruction byte
     464/     179 : A3                          plo     r3                                                       ; and go there, jump indirect.
     465/     17A :                     ;   
     466/     17A :                     ;   Ex7A . Hex keypad on, wait for byte
     467/     17A :                     ;   
     468/     17A : D8                          sep     r8                                                       ; call hex keypad on at $0246
     469/     17B : 46                          db      keypadon & 255                                           
     470/     17C :                     waitkeypress:
     471/     17C : 3C 7C                       bn1     waitkeypress                                             ; wait for EF1 (byte ready)
     472/     17E :                     readkeyinput:
     473/     17E : 68                          db      68h+keypadport                                           ; read to M(X) (AS Cannot assemble INP0)
     474/     17F : D4                          sep     r4                                                       
     475/     180 :                     ;   
     476/     180 :                     ;   Ex80 . Hex keypad on, byte ready input else skip
     477/     180 :                     ;   
     478/     180 : D8                          sep     r8                                                       ; call hex keypad on at $0246
     479/     181 : 46                          db      keypadon & 255                                           
     480/     182 : 34 7E                       b1      readkeyinput                                             ; if byte ready get it.
     481/     184 :                     skipinstruction:
     482/     184 : 15                          inc     r5                                                       ; skip instruction
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 12 - 7/13/2016 16:31:08


     483/     185 : 15                          inc     r5                                                       
     484/     186 : D4                          sep     r4                                                       
     485/     187 :                     ;   
     486/     187 :                     ;   Ex87 - EF2 Skip
     487/     187 :                     ;   
     488/     187 : 35 84                       b2      skipinstruction                                          ; skip if  EF2
     489/     189 : D4                          sep     r4                                                       
     490/     18A :                     ;   
     491/     18A :                     ;   Ex8A - EF3 Skip
     492/     18A :                     ;   
     493/     18A : 36 84                       b3      skipinstruction                                          ; skip if EF3
     494/     18C : D4                          sep     r4                                                       
     495/     18D :                     ;   
     496/     18D :                     ;   Ex8D - Ext Bus to Vx
     497/     18D :                     ;   
     498/     18D : 6E                          inp     externalbus                                              ; read port 6 input.
     499/     18E : D4                          sep     r4                                                       
     500/     18F :                     ;   
     501/     18F :                     ;   Ex8F - Vx to Ext Bus
     502/     18F :                     ;   
     503/     18F : 66                          out     externalbus                                              ; out to port 6
     504/     190 : D4                          sep     r4                                                       
     505/     191 :                     ;   
     506/     191 :                     ;   Ex91 - Write Vx to External Control Register
     507/     191 :                     ;   
     508/     191 : 64                          out     externalcontrol                                          ; external control register
     509/     192 : D4                          sep     r4                                                       
     510/     193 :                     ;   
     511/     193 :                     ;   E093 - Read tape -> M(A) concurrent using DMA Off. Need to turn TV off and Start tape before.
     512/     193 :                     ;   to check tape end read check EF2.
     513/     193 :                     ;   
     514/     193 : 9A                          ghi     ra                                                       ; put RA in R0
     515/     194 : B0                          phi     r0                                                       
     516/     195 : 8A                          glo     ra                                                       
     517/     196 : A0                          plo     r0                                                       
     518/     197 : E3                          sex     r3                                                       ; X = P = 3
     519/     198 : 61                          out     selectdevice                                             ; select tape
     520/     199 : 03                          db      devtape                                                  
     521/     19A : 62                          out     controldevice                                            ; tape read
     522/     19B : 20                          db      ctaperead                                                
     523/     19C : D4                          sep     r4                                                       
     524/     19D :                     ;   
     525/     19D :                     ;   R1(0)  -> Vx
     526/     19D :                     ;   
     527/     19D : 90                          ghi     r0                                                       
     528/     19E : 56                          str     r6                                                       
     529/     19F : D4                          sep     r4                                                       
     530/     1A0 :                     ;   
     531/     1A0 :                     ;   E3A0 - Write tape from M(A) to M(06FF). Need to turn TV off and start tape before.
     532/     1A0 :                     ;   
     533/     1A0 : 86                          glo     r6                                                       ; read 3  (why E3A0)
     534/     1A1 : BE                          phi     re                                                       
     535/     1A2 :                     tapebyteoutloop:
     536/     1A2 : 93                          ghi     r3                                                       ; get R3.1 which is 1 (we are in R3)
     537/     1A3 : F6                          shr                                                              ; set DF = 1 D = 0. DF set for writing start
     538/     1A4 : AB                          plo     rb                                                       ; save in RB.0 (parity)
     539/     1A5 : F8 08                       ldi     8                                                        ; bits to do.
     540/     1A7 : AE                          plo     re                                                       ; save in RE.0
     541/     1A8 : 4A                          lda     ra                                                       ; read next byte
     542/     1A9 : BB                          phi     rb                                                       ; save in RB.0
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 13 - 7/13/2016 16:31:08


     543/     1AA : D8                          sep     r8                                                       ; write start bit
     544/     1AB : 85                          db      writetapedelay & 255                                     
     545/     1AC :                     tapebitoutloop:
     546/     1AC : 9B                          ghi     rb                                                       ; get the byte value
     547/     1AD : F6                          shr                                                              ; put LSB in DF
     548/     1AE : BB                          phi     rb                                                       ; write it back
     549/     1AF : DC                          sep     rc                                                       ; write out DF 0/1.
     550/     1B0 : 2E                          dec     re                                                       ; decrement bit counter
     551/     1B1 : 8E                          glo     re                                                       ; if non zero go back and do next bit.
     552/     1B2 : 3A AC                       bnz     tapebitoutloop                                           
     553/     1B4 : 8B                          glo     rb                                                       ; get the parity count
     554/     1B5 : F6                          shr                                                              ; shift into DF
     555/     1B6 : DC                          sep     rc                                                       ; write that parity bit out
     556/     1B7 : 8A                          glo     ra                                                       ; check done whole page
     557/     1B8 : 3A A2                       bnz     tapebyteoutloop                                          ; if not keep going
     558/     1BA : 9A                          ghi     ra                                                       ; done to $0700 ($06FF last)
     559/     1BB : FB 07                       xri     7                                                        ; (700 is video ram)
     560/     1BD : 3A A2                       bnz     tapebyteoutloop                                          ; if not keep going
     561/     1BF : D4                          sep     r4                                                       
     562/     1C0 :                     
     563/     1C0 :                     ;****************************************************************************************************************
     564/     1C0 :                     ;                                                        
     565/     1C0 :                     ;                                            Instruction vector tables
     566/     1C0 :                     ;                                                        
     567/     1C0 :                     ;****************************************************************************************************************
     568/     1C0 :                     
     569/     1C0 :                     instructionvector:
     570/     1C0 : 00                          db      0                                                        ; 0xxx not decoded here
     571/     1C1 : 02                          db      opcode1 / 256                                            ; 1mmm Do program at mmm (subroutine call)
     572/     1C2 : 02                          db      opcode2 / 256                                            ; 2xkk Load kk into Vx
     573/     1C3 : 02                          db      opcode3 / 256                                            ; 3xkk Skip if Vx != kk
     574/     1C4 : 02                          db      opcode4 / 256                                            ; 4xkk Vx = Random Number & kk
     575/     1C5 : 02                          db      opcode5 / 256                                            ; 5xkk Vx = Vx + kk,skip if vx = 0
     576/     1C6 : 02                          db      opcode6 / 256                                            ; 6xxx Assorted
     577/     1C7 : 00                          db      opcode7 / 256                                            ; 7xnn Assorted
     578/     1C8 : 02                          db      opcode8 / 256                                            ; 8xyf Arithmetic
     579/     1C9 : 02                          db      opcode9 / 256                                            ; 9xys Display pattern
     580/     1CA : 02                          db      instructiona / 256                                       ; Ammm Load A immediate
     581/     1CB : 02                          db      instructionb / 256                                       ; Bmmm Load B immediate
     582/     1CC : 02                          db      instructionc / 256                                       ; Cxy0 Skip if vx != vy
     583/     1CD : 02                          db      instructiond / 256                                       ; Dxy0 Vx Tone, Vy Delay (Tape on spk off)
     584/     1CE : 01                          db      instructione / 256                                       ; Exxx Assorted
     585/     1CF : 02                          db      instructionf / 256                                       ; Fmmm Jump to mmm
     586/     1D0 :                     
     587/     1D0 : 00                          db      0                                                        ; 0aaa is not dispatched this way.
     588/     1D1 :                     
     589/     1D1 : 0D                          db      opcode1 & 255                                            ; instruction tables (low address)
     590/     1D2 : 81                          db      opcode2 & 255                                            
     591/     1D3 : 23                          db      opcode3 & 255                                            
     592/     1D4 : CA                          db      opcode4 & 255                                            
     593/     1D5 : 1A                          db      opcode5 & 255                                            
     594/     1D6 : 58                          db      opcode6 & 255                                            
     595/     1D7 : 19                          db      opcode7 & 255                                            
     596/     1D8 : 99                          db      opcode8 & 255                                            
     597/     1D9 : DD                          db      opcode9 & 255                                            
     598/     1DA : 00                          db      instructiona & 255                                       
     599/     1DB : 09                          db      instructionb & 255                                       
     600/     1DC : 2B                          db      instructionc & 255                                       
     601/     1DD : BE                          db      instructiond & 255                                       
     602/     1DE : 75                          db      instructione & 255                                       
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 14 - 7/13/2016 16:31:08


     603/     1DF : 15                          db      instructionf & 255                                       
     604/     1E0 :                     
     605/     1E0 :                     stack:
     606/     1E0 : 00 00 00 00                 db      0,0,0,0                                                  ; stack space
     607/     1E4 : 00 00 00 00                 db      0,0,0,0                                                  
     608/     1E8 : 00 00 00 00                 db      0,0,0,0                                                  
     609/     1EC : 00 00 00 00                 db      0,0,0,0                                                  
     610/     1F0 : 00 00 00 00                 db      0,0,0,0                                                  
     611/     1F4 : 00 00 00 00                 db      0,0,0,0                                                  
     612/     1F8 : 00 00 00 00                 db      0,0,0,0                                                  
     613/     1FC : 00 00 00                    db      0,0,0                                                    
     614/     1FF :                     stacktop:
     615/     1FF : 00                          db      0                                                        
     616/     200 :                     
     617/     200 :                     ;****************************************************************************************************************
     618/     200 :                     ;                                                        
     619/     200 :                     ;                                              Ammm  Load A with mmm
     620/     200 :                     ;                                                        
     621/     200 :                     ;****************************************************************************************************************
     622/     200 :                     
     623/     200 :                     instructiona:
     624/     200 : F8 10                       ldi     areg & 255                                               ; point R7 to A
     625/     202 :                     loadaddrconst:
     626/     202 : A7                          plo     r7                                                       
     627/     203 : 86                          glo     r6                                                       ; get X address $10X so its $0X
     628/     204 : 57                          str     r7                                                       ; write to A high and point to low
     629/     205 : 17                          inc     r7                                                       
     630/     206 : 45                          lda     r5                                                       ; get second byte of instruction
     631/     207 : 57                          str     r7                                                       ; write to low byte
     632/     208 : D4                          sep     r4                                                       
     633/     209 :                     
     634/     209 :                     ;****************************************************************************************************************
     635/     209 :                     ;                                                        
     636/     209 :                     ;                                              Bmmm  Load B with mmm
     637/     209 :                     ;                                                        
     638/     209 :                     ;****************************************************************************************************************
     639/     209 :                     
     640/     209 :                     instructionb:
     641/     209 : F8 12                       ldi     breg & 255                                               ; point R7 to B and reuse code above
     642/     20B : 30 02                       br      loadaddrconst                                            
     643/     20D :                     
     644/     20D :                     ;****************************************************************************************************************
     645/     20D :                     ;                                                        
     646/     20D :                     ;                                      1mmm Do Program (Subroutine) at mmmm
     647/     20D :                     ;                                                        
     648/     20D :                     ;****************************************************************************************************************
     649/     20D :                     
     650/     20D :                     opcode1:
     651/     20D : 15                          inc     r5                                                       ; r5 point sto next instruction
     652/     20E : 85                          glo     r5                                                       ; get return address low
     653/     20F : 22                          dec     r2                                                       ; push on stack
     654/     210 : 52                          str     r2                                                       
     655/     211 : 95                          ghi     r5                                                       ; get return address high
     656/     212 : 22                          dec     r2                                                       ; push on stack
     657/     213 : 52                          str     r2                                                       
     658/     214 : 25                          dec     r5                                                       ; point R5 to low byte and fall through.
     659/     215 :                     
     660/     215 :                     ;****************************************************************************************************************
     661/     215 :                     ;                                                        
     662/     215 :                     ;                                           Fmmm Go to program at mmmm
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 15 - 7/13/2016 16:31:08


     663/     215 :                     ;                                                        
     664/     215 :                     ;****************************************************************************************************************
     665/     215 :                     
     666/     215 :                     instructionf:
     667/     215 : 45                          lda     r5                                                       ; get low byte
     668/     216 : A5                          plo     r5                                                       ; put in FEL PC Low
     669/     217 : 86                          glo     r6                                                       ; get X address $10X so this is $0X
     670/     218 : B5                          phi     r5                                                       ; put in FEL PC hight
     671/     219 : D4                          sep     r4                                                       
     672/     21A :                     
     673/     21A :                     ;****************************************************************************************************************
     674/     21A :                     ;                                                        
     675/     21A :                     ;                                         5xkk add kk to vx, skip if zero
     676/     21A :                     ;                                                        
     677/     21A :                     ;****************************************************************************************************************
     678/     21A :                     
     679/     21A :                     opcode5:
     680/     21A : E6                          sex     r6                                                       ; access VX
     681/     21B : 45                          lda     r5                                                       ; read 2nd byte
     682/     21C : F4                          add                                                              ; add to VX
     683/     21D : 56                          str     r6                                                       ; write back
     684/     21E : 32 28                       bz      skipinstruction2                                         ; if zero skip
     685/     220 : D4                          sep     r4                                                       
     686/     221 : 15                          inc     r5                                                       ; unused
     687/     222 : D4                          sep     r4                                                       ; unused
     688/     223 :                     
     689/     223 :                     ;****************************************************************************************************************
     690/     223 :                     ;                                                        
     691/     223 :                     ;                                       3xkk  Skip instruction if vx != kk
     692/     223 :                     ;                                                        
     693/     223 :                     ;****************************************************************************************************************
     694/     223 :                     
     695/     223 :                     opcode3:
     696/     223 : 45                          lda     r5                                                       ; get kk value
     697/     224 :                     skipifvxnotd:
     698/     224 : E6                          sex     r6                                                       ; R[X] points to Vx
     699/     225 : F3                          xor                                                              ; compare the values
     700/     226 : 32 2A                       bz      dontskip                                                 ; exit if same
     701/     228 :                     skipinstruction2:
     702/     228 : 15                          inc     r5                                                       ; skip
     703/     229 : 15                          inc     r5                                                       
     704/     22A :                     dontskip:
     705/     22A : D4                          sep     r4                                                       
     706/     22B :                     
     707/     22B :                     ;****************************************************************************************************************
     708/     22B :                     ;                                                        
     709/     22B :                     ;                                             Cxy0  Skip if vx != vy
     710/     22B :                     ;                                                        
     711/     22B :                     ;****************************************************************************************************************
     712/     22B :                     
     713/     22B :                     instructionc:
     714/     22B : 15                          inc     r5                                                       ; ignore second byte
     715/     22C : 47                          lda     r7                                                       ; read Vy
     716/     22D : 30 24                       br      skipifvxnotd                                             ; so now its same as 3xkk
     717/     22F :                     
     718/     22F :                     ;****************************************************************************************************************
     719/     22F :                     ;                                                        
     720/     22F :                     ;                                            Copy Registers onto Stack
     721/     22F :                     ;                                                        
     722/     22F :                     ;****************************************************************************************************************
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 16 - 7/13/2016 16:31:08


     723/     22F :                     
     724/     22F : F8 00                       ldi     0                                                        ; point R6 to $100
     725/     231 : A6                          plo     r6                                                       
     726/     232 : 96                          ghi     r6                                                       ; set R7 to $1E0 stack space bottom.
     727/     233 : B7                          phi     r7                                                       
     728/     234 : F8 E0                       ldi     stack & 255                                              
     729/     236 : A7                          plo     r7                                                       
     730/     237 :                     copyregloop:
     731/     237 : 46                          lda     r6                                                       ; read variable data
     732/     238 : 57                          str     r7                                                       ; copy it out.
     733/     239 : 17                          inc     r7                                                       ; next byte
     734/     23A : 87                          glo     r7                                                       
     735/     23B : FB F4                       xri     0f4h                                                     ; copied all 20 bytes of data ?
     736/     23D : 3A 37                       bnz     copyregloop                                              
     737/     23F : D4                          sep     r4                                                       
     738/     240 :                     
     739/     240 :                     ;****************************************************************************************************************
     740/     240 :                     ;                                                        
     741/     240 :                     ;                                            Turn the television off.
     742/     240 :                     ;                                                        
     743/     240 :                     ;****************************************************************************************************************
     744/     240 :                     
     745/     240 : E3                          sex     r3                                                       ; X = 3 (same as P)
     746/     241 : 61                          out     selectdevice                                             ; select TV device (2)
     747/     242 : 02                          db      devtv                                                    
     748/     243 : 62                          out     controldevice                                            ; turn it off
     749/     244 : 00                          db      ctvoff                                                   
     750/     245 : D4                          sep     r4                                                       
     751/     246 :                     
     752/     246 :                     ;****************************************************************************************************************
     753/     246 :                     ;                                                        
     754/     246 :                     ;                                     Turn hex keypad on (probably run in RC)
     755/     246 :                     ;                                                        
     756/     246 :                     ;****************************************************************************************************************
     757/     246 :                     
     758/     246 :                     keypadon:
     759/     246 : EC                          sex     rc                                                       ; X = C
     760/     247 : 61                          out     selectdevice                                             ; select Keypad device (1)
     761/     248 : 01                          db      devkeypad                                                
     762/     249 : 62                          out     controldevice                                            ; turn it on.
     763/     24A : 01                          db      ckeyon                                                   
     764/     24B : E6                          sex     r6                                                       ; set X back and return.
     765/     24C : D3                          sep     r3                                                       
     766/     24D :                     
     767/     24D :                     ;****************************************************************************************************************
     768/     24D :                     ;                                                        
     769/     24D :                     ;                                                 Shift Vx left 4
     770/     24D :                     ;                                                        
     771/     24D :                     ;****************************************************************************************************************
     772/     24D :                     
     773/     24D :                     shiftvxleft4:
     774/     24D : E6                          sex     r6                                                       ; R(X) now points to Vx
     775/     24E : F0                          ldx                                                              ; get Vx
     776/     24F : F4                          add                                                              ; add it
     777/     250 : 56                          str     r6                                                       ; write back << 1
     778/     251 : F4                          add                                                              ; add it
     779/     252 : 56                          str     r6                                                       ; write back << 2
     780/     253 : F4                          add                                                              ; add it
     781/     254 : 56                          str     r6                                                       ; write back << 3
     782/     255 : F4                          add                                                              ; add it, now << 4
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 17 - 7/13/2016 16:31:08


     783/     256 : 56                          str     r6                                                       ; write back to Vx
     784/     257 : D3                          sep     r3                                                       
     785/     258 :                     ;   
     786/     258 :                     ;   Tape Controller - code to write in low part of instruction
     787/     258 :                     ;   
     788/     258 :                     opcode6:
     789/     258 : E5                          sex     r5                                                       ; use R5 as X
     790/     259 : 63                          out     audiocontrol                                             ; write low byte of instruction to port 3
     791/     25A : D4                          sep     r4                                                       ; return
     792/     25B : 00                          db      0                                                        ; unused
     793/     25C :                     
     794/     25C :                     ;****************************************************************************************************************
     795/     25C :                     ;                                                        
     796/     25C :                     ;                                             Turn the television on
     797/     25C :                     ;                                                        
     798/     25C :                     ;****************************************************************************************************************
     799/     25C :                     
     800/     25C : F8 00                       ldi     0                                                        ; set display address to $700
     801/     25E : A0                          plo     r0                                                       
     802/     25F : F8 07                       ldi     screen / 256                                             
     803/     261 : B0                          phi     r0                                                       
     804/     262 : E3                          sex     r3                                                       ; X = 3 (same as P)
     805/     263 : 61                          out     selectdevice                                             ; select TV device (2)
     806/     264 : 02                          db      devtv                                                    
     807/     265 : 62                          out     controldevice                                            ; turn TV on (why 3 ?)
     808/     266 : 03                          db      ctvon                                                    
     809/     267 : D4                          sep     r4                                                       
     810/     268 :                     
     811/     268 :                     ;****************************************************************************************************************
     812/     268 :                     ;                                                        
     813/     268 :                     ;                                               Turn hex keypad off
     814/     268 :                     ;                                                        
     815/     268 :                     ;****************************************************************************************************************
     816/     268 :                     
     817/     268 : E3                          sex     r3                                                       ; X = 3 (Same as P)
     818/     269 : 61                          out     selectdevice                                             ; select keypad device (1)
     819/     26A : 01                          db      devkeypad                                                
     820/     26B : 62                          out     controldevice                                            ; and turn it off
     821/     26C : 00                          db      ckeyoff                                                  
     822/     26D : D4                          sep     r4                                                       
     823/     26E :                     
     824/     26E :                     ;****************************************************************************************************************
     825/     26E :                     ;                                                        
     826/     26E :                     ;                                             Return from subroutine
     827/     26E :                     ;                                                        
     828/     26E :                     ;****************************************************************************************************************
     829/     26E :                     
     830/     26E : 42                          lda     r2                                                       ; pop high return
     831/     26F : B5                          phi     r5                                                       ; into R5
     832/     270 : 42                          lda     r2                                                       ; same with low
     833/     271 : A5                          plo     r5                                                       
     834/     272 : D4                          sep     r4                                                       ; return.
     835/     273 :                     ;   
     836/     273 :                     ;   Load A and B into RA and RB
     837/     273 :                     ;   
     838/     273 :                     readabregs:
     839/     273 : 96                          ghi     r6                                                       ; RF = $110
     840/     274 : BF                          phi     rf                                                       
     841/     275 : F8 10                       ldi     areg & 255                                               
     842/     277 : AF                          plo     rf                                                       
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 18 - 7/13/2016 16:31:08


     843/     278 : 4F                          lda     rf                                                       ; load in A
     844/     279 : BA                          phi     ra                                                       
     845/     27A : 4F                          lda     rf                                                       
     846/     27B : AA                          plo     ra                                                       
     847/     27C : 4F                          lda     rf                                                       ; load in B
     848/     27D : BB                          phi     rb                                                       
     849/     27E : 4F                          lda     rf                                                       
     850/     27F : AB                          plo     rb                                                       
     851/     280 : D3                          sep     r3                                                       
     852/     281 :                     
     853/     281 :                     ;****************************************************************************************************************
     854/     281 :                     ;                                                        
     855/     281 :                     ;                                               2xkk write kk to vX
     856/     281 :                     ;                                                        
     857/     281 :                     ;****************************************************************************************************************
     858/     281 :                     
     859/     281 :                     opcode2:
     860/     281 : 45                          lda     r5                                                       ; read 2nd instruction byte
     861/     282 : 56                          str     r6                                                       ; save in Vx
     862/     283 : D4                          sep     r4                                                       
     863/     284 :                     ;   
     864/     284 :                     ;   Write to tape - delay
     865/     284 :                     ;   
     866/     284 :                     exitwritetape:
     867/     284 : D3                          sep     r3                                                       
     868/     285 :                     writetapedelay:
     869/     285 : F8 14                       ldi     14h                                                      ; set timer counter
     870/     287 : AF                          plo     rf                                                       
     871/     288 :                     writetapedelayloop:
     872/     288 : 2F                          dec     rf                                                       
     873/     289 : 8F                          glo     rf                                                       
     874/     28A : 3A 88                       bnz     writetapedelayloop                                       
     875/     28C : 30 B0                       br      writedfbittape                                           ; next time, it will write 0/1
     876/     28E :                     
     877/     28E :                     ;   
     878/     28E :                     ;   Do tone Vx = Tone VY = Delay
     879/     28E :                     ;   
     880/     28E :                     playtone:
     881/     28E : 46                          lda     r6                                                       ; read X (tone)
     882/     28F : BE                          phi     re                                                       ; store in tone register
     883/     290 : F8 6E                       ldi     ghirf & 255                                              ; set to identify return.
     884/     292 : A6                          plo     r6                                                       
     885/     293 : 47                          lda     r7                                                       ; read delay time.
     886/     294 : BF                          phi     rf                                                       ; set RF counter.
     887/     295 : D8                          sep     r8                                                       ; call the tone routine.
     888/     296 : BA                          db      tonegeneration & 255                                     
     889/     297 : 15                          inc     r5                                                       ; fetch the 2nd byte
     890/     298 : D4                          sep     r4                                                       
     891/     299 :                     
     892/     299 :                     ;****************************************************************************************************************
     893/     299 :                     ;                                                        
     894/     299 :                     ;                    8xyn  x = x or y (1) x and y (2) x+y(4) x-y (5), V0 is carry / not borrow
     895/     299 :                     ;                                                        
     896/     299 :                     ;****************************************************************************************************************
     897/     299 :                     
     898/     299 :                     opcode8:
     899/     299 : 22                          dec     r2                                                       ; push $D3 on the stack
     900/     29A : F8 D3                       ldi     0d3h                                                     ; (SEP R3)
     901/     29C : 52                          str     r2                                                       
     902/     29D : 22                          dec     r2                                                       
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 19 - 7/13/2016 16:31:08


     903/     29E : 45                          lda     r5                                                       ; get the low byte
     904/     29F : F9 F0                       ori     0f0h                                                     ; F1 F2 F4 F5 which are or and + -
     905/     2A1 : 52                          str     r2                                                       ; save on stack
     906/     2A2 : E6                          sex     r6                                                       ; RX points to the Rx value
     907/     2A3 : 47                          lda     r7                                                       ; get the RY value
     908/     2A4 : D2                          sep     r2                                                       ; call the code pushed on the stack
     909/     2A5 : 56                          str     r6                                                       ; save at R6 (Vx)
     910/     2A6 : F8 00                       ldi     0                                                        ; set R6 to point to $100 V0
     911/     2A8 : A6                          plo     r6                                                       
     912/     2A9 : 96                          ghi     r6                                                       ; D = 1
     913/     2AA : 33 AD                       bdf     writedf                                                  ; if DF clear then
     914/     2AC : F6                          shr                                                              ; D = 0
     915/     2AD :                     writedf:
     916/     2AD : 56                          str     r6                                                       ; write DF out to V0
     917/     2AE : D4                          sep     r4                                                       
     918/     2AF :                     
     919/     2AF :                     ;****************************************************************************************************************
     920/     2AF :                     ;                                                        
     921/     2AF :                     ;       Write DF to tape. Sets up R6 to return to tape code, and writes for 2 or 3 cycles depending on DF.
     922/     2AF :                     ;                                                        
     923/     2AF :                     ;****************************************************************************************************************
     924/     2AF :                     
     925/     2AF :                     exitwritebit:
     926/     2AF : D3                          sep     r3                                                       
     927/     2B0 :                     writedfbittape:
     928/     2B0 : F8 72                       ldi     glorf & 255                                              
     929/     2B2 : A6                          plo     r6                                                       
     930/     2B3 : 9C                          ghi     rc                                                       ; D = 2 (write cycles)
     931/     2B4 : 3B B9                       bnf     savecyclesize                                            ; if bit to write zero, skip
     932/     2B6 : 1B                          inc     rb                                                       ; inc parity value in RB.0
     933/     2B7 : FC 03                       adi     3                                                        ; D = 5
     934/     2B9 :                     savecyclesize:
     935/     2B9 : AF                          plo     rf                                                       ; put write value in RF
     936/     2BA :                     
     937/     2BA :                     ;****************************************************************************************************************
     938/     2BA :                     ;                                                        
     939/     2BA :                     ;                        Tone Generate (P = C), RE.1 = Pitch, RF.0 = Cycles to do it for.
     940/     2BA :                     ;                   R6 is set to 72 for read tape and 6E for make tone, which is how it figures
     941/     2BA :                     ;                        out what to do afterwards,this is used for tape and cassette out.
     942/     2BA :                     ;                                                        
     943/     2BA :                     ;****************************************************************************************************************
     944/     2BA :                     
     945/     2BA :                     tonegeneration:
     946/     2BA : EC                          sex     rc                                                       ; X = P = C
     947/     2BB : 63                          out     audiocontrol                                             ; set External Function Register -> Run
     948/     2BC : 05                          db      aspeakerbit+aconnect                                     ; speaker line
     949/     2BD : 9E                          ghi     re                                                       ; value 3, set in write tape routine for tape
     950/     2BE :                     instructiond:
     951/     2BE : FF 01                       smi     1                                                        ; short delay loop
     952/     2C0 : 3A BE                       bnz     instructiond                                             
     953/     2C2 : 63                          out     audiocontrol                                             ; reset speaker line.
     954/     2C3 : 01                          db      aconnect                                                 
     955/     2C4 : 2F                          dec     rf                                                       ; done it correct number of times
     956/     2C5 : D6                          sep     r6                                                       ; call F0/F1 -> D, identify caller
     957/     2C6 : 3A BA                       bnz     tonegeneration                                           ; tone, go back to tone loop
     958/     2C8 : 30 84                       br      exitwritetape                                            ; tape, go back to tape loop
     959/     2CA :                     
     960/     2CA :                     ;****************************************************************************************************************
     961/     2CA :                     ;                                                        
     962/     2CA :                     ;                                             4xkk  Vx = kk & random
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 20 - 7/13/2016 16:31:08


     963/     2CA :                     ;                                                        
     964/     2CA :                     ;****************************************************************************************************************
     965/     2CA :                     
     966/     2CA :                     opcode4:
     967/     2CA : 19                          inc     r9                                                       ; bump and read random lower
     968/     2CB : 89                          glo     r9                                                       
     969/     2CC : A7                          plo     r7                                                       ; R7 = $01<R9.0>
     970/     2CD : E7                          sex     r7                                                       ; X points there, use as randomish data
     971/     2CE : 99                          ghi     r9                                                       ; random high
     972/     2CF : F4                          add                                                              ; R9.1 + Mem[$01<R9.0>]
     973/     2D0 : 22                          dec     r2                                                       ; push on stack
     974/     2D1 : 52                          str     r2                                                       
     975/     2D2 : F6                          shr                                                              ; add to self shifted right
     976/     2D3 : E2                          sex     r2                                                       
     977/     2D4 : F4                          add                                                              
     978/     2D5 : B9                          phi     r9                                                       ; update R9 high
     979/     2D6 : 56                          str     r6                                                       ; save at Vx
     980/     2D7 : E6                          sex     r6                                                       ; RX points to Vx
     981/     2D8 : 45                          lda     r5                                                       ; read low byte (mask)
     982/     2D9 : F2                          and                                                              ; and with Vx
     983/     2DA : 56                          str     r6                                                       ; update
     984/     2DB : 12                          inc     r2                                                       ; fix up stack and exit.
     985/     2DC : D4                          sep     r4                                                       
     986/     2DD :                     
     987/     2DD :                     ;****************************************************************************************************************
     988/     2DD :                     ;                                                        
     989/     2DD :                     ;               9xys  Draw sxs pattern (5 or 8) x = pattern address in page 3 y = tv cell address.
     990/     2DD :                     ;                                                        
     991/     2DD :                     ;****************************************************************************************************************
     992/     2DD :                     opcode9:
     993/     2DD : 45                          lda     r5                                                       ; Get next byte
     994/     2DE : FA 0F                       ani     0fh                                                      ; look at lower 4 bits which are size
     995/     2E0 : AF                          plo     rf                                                       ; RF.0 is the number of lines to do.
     996/     2E1 :                     
     997/     2E1 :                     ;****************************************************************************************************************
     998/     2E1 :                     ;                                                        
     999/     2E1 :                     ;                                                   RF = #lines
    1000/     2E1 :                     ;                                                        
    1001/     2E1 :                     ;****************************************************************************************************************
    1002/     2E1 :                     
    1003/     2E1 : E6                          sex     r6                                                       ; R(x) points to VX
    1004/     2E2 : F0                          ldx                                                              ; read X
    1005/     2E3 : AA                          plo     ra                                                       ; save in RA.0
    1006/     2E4 : F8 03                       ldi     graphics / 256                                           ; RA is $03[Vx]
    1007/     2E6 : BA                          phi     ra                                                       
    1008/     2E7 :                     
    1009/     2E7 :                     ;****************************************************************************************************************
    1010/     2E7 :                     ;                                                        
    1011/     2E7 :                     ;                  RF = #lines. RA = address of graphic data. Calc address from tv cell address.
    1012/     2E7 :                     ;                       Bits 3,4 are the vertical cell position (0-3, 8 pixels high cell).
    1013/     2E7 :                     ;                       Bits 0,1,2 are the horizontal position. (0-7, 8 pixels wide cell).
    1014/     2E7 :                     ;                                                        
    1015/     2E7 :                     ;****************************************************************************************************************
    1016/     2E7 :                     
    1017/     2E7 : 47                          lda     r7                                                       ; read Y (Cell number)
    1018/     2E8 : AB                          plo     rb                                                       ; RB.0 = Y
    1019/     2E9 : F6                          shr                                                              ; R6 = Y >> 1 << 4 (Y * 8)
    1020/     2EA : 56                          str     r6                                                       ; using shift left function, so bits
    1021/     2EB : D8                          sep     r8                                                       ; 3 and 4 are now in bits 6,7
    1022/     2EC : 4D                          db      shiftvxleft4 & 255                                       
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 21 - 7/13/2016 16:31:08


    1023/     2ED : 8B                          glo     rb                                                       ; get original cell number for bits 0-2
    1024/     2EE : F1                          or                                                               ; or with bits 6-7
    1025/     2EF : FA C7                       ani     0c7h                                                     ; remove so only bits 0-2 and bits 6-7
    1026/     2F1 : AB                          plo     rb                                                       
    1027/     2F2 : F8 07                       ldi     screen/256                                               ; set RB.1 = 07<addr>
    1028/     2F4 : BB                          phi     rb                                                       
    1029/     2F5 :                     
    1030/     2F5 :                     copypixeldata:
    1031/     2F5 : 4A                          lda     ra                                                       ; read first byte of data
    1032/     2F6 : 5B                          str     rb                                                       ; write to the screen
    1033/     2F7 : 8B                          glo     rb                                                       ; get low byte of screen address
    1034/     2F8 : FC 08                       adi     08                                                       ; go one row down
    1035/     2FA : AB                          plo     rb                                                       ; update screen address
    1036/     2FB : 2F                          dec     rf                                                       ; decrement line counter.
    1037/     2FC : 8F                          glo     rf                                                       ; check it
    1038/     2FD : 3A F5                       bnz     copypixeldata                                            ; do next row.
    1039/     2FF : D4                          sep     r4                                                       
    1040/     300 :                     
    1041/     300 :                     ;****************************************************************************************************************
    1042/     300 :                     ;                                                        
    1043/     300 :                     ;                  0300 font data. First 16 bytes is offset for 0-9A-F required for the monitor.
    1044/     300 :                     ;                                       Everything after that is optional.
    1045/     300 :                     ;                                                        
    1046/     300 :                     ;****************************************************************************************************************
    1047/     300 :                     
    1048/     300 :                     graphics:
    1049/     300 : 48                          db      graphic0 & 255                                           
    1050/     301 : 10                          db      graphic1 & 255                                           
    1051/     302 : 2E                          db      graphic2 & 255                                           
    1052/     303 : 2A                          db      graphic3 & 255                                           
    1053/     304 : 19                          db      graphic4 & 255                                           
    1054/     305 : 32                          db      graphic5 & 255                                           
    1055/     306 : 44                          db      graphic6 & 255                                           
    1056/     307 : 14                          db      graphic7 & 255                                           
    1057/     308 : 4C                          db      graphic8 & 255                                           
    1058/     309 : 1E                          db      graphic9 & 255                                           
    1059/     30A : 50                          db      graphica & 255                                           
    1060/     30B : 22                          db      graphicb & 255                                           
    1061/     30C : 40                          db      graphicc & 255                                           
    1062/     30D : 26                          db      graphicd & 255                                           
    1063/     30E : 37                          db      graphice & 255                                           
    1064/     30F : 3B                          db      graphicf & 255                                           
    1065/     310 :                     graphic1:
    1066/     310 : 10                          db      010h                                                     ; ...X....
    1067/     311 : 30                          db      030h                                                     ; ..XX....
    1068/     312 : 10                          db      010h                                                     ; ...X....
    1069/     313 : 10                          db      010h                                                     ; ...X....
    1070/     314 :                     graphic7:
    1071/     314 : 7C                          db      07ch                                                     ; .XXXXX..
    1072/     315 : 08                          db      008h                                                     ; ....X...
    1073/     316 : 10                          db      010h                                                     ; ...X....
    1074/     317 : 20                          db      020h                                                     ; ..X.....
    1075/     318 : 40                          db      040h                                                     ; .X......
    1076/     319 :                     graphic4:
    1077/     319 : 08                          db      008h                                                     ; ....X...
    1078/     31A : 18                          db      018h                                                     ; ...XX...
    1079/     31B : 28                          db      028h                                                     ; ..X.X...
    1080/     31C : 7C                          db      07ch                                                     ; .XXXXX..
    1081/     31D : 08                          db      008h                                                     ; ....X...
    1082/     31E :                     graphic9:
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 22 - 7/13/2016 16:31:08


    1083/     31E : 38                          db      038h                                                     ; ..XXX...
    1084/     31F : 44                          db      044h                                                     ; .X...X..
    1085/     320 : 3C                          db      03ch                                                     ; ..XXXX..
    1086/     321 : 04                          db      004h                                                     ; .....X..
    1087/     322 :                     graphicb:
    1088/     322 : 78                          db      078h                                                     ; .XXXX...
    1089/     323 : 24                          db      024h                                                     ; ..X..X..
    1090/     324 : 38                          db      038h                                                     ; ..XXX...
    1091/     325 : 24                          db      024h                                                     ; ..X..X..
    1092/     326 :                     graphicd:
    1093/     326 : 78                          db      078h                                                     ; .XXXX...
    1094/     327 : 44                          db      044h                                                     ; .X...X..
    1095/     328 : 44                          db      044h                                                     ; .X...X..
    1096/     329 : 44                          db      044h                                                     ; .X...X..
    1097/     32A :                     graphic3:
    1098/     32A : 78                          db      078h                                                     ; .XXXX...
    1099/     32B : 04                          db      004h                                                     ; .....X..
    1100/     32C : 18                          db      018h                                                     ; ...XX...
    1101/     32D : 04                          db      004h                                                     ; .....X..
    1102/     32E :                     graphic2:
    1103/     32E : 78                          db      078h                                                     ; .XXXX...
    1104/     32F : 04                          db      004h                                                     ; .....X..
    1105/     330 : 38                          db      038h                                                     ; ..XXX...
    1106/     331 : 40                          db      040h                                                     ; .X......
    1107/     332 :                     graphic5:
    1108/     332 : 7C                          db      07ch                                                     ; .XXXXX..
    1109/     333 : 04                          db      004h                                                     ; .X..
    1110/     334 : 78                          db      078h                                                     ; .XXXX...
    1111/     335 : 04                          db      004h                                                     ; .....X..
    1112/     336 : 78                          db      078h                                                     ; .XXXX...
    1113/     337 :                     graphice:
    1114/     337 : 7C                          db      07ch                                                     ; .XXXXX..
    1115/     338 : 40                          db      040h                                                     ; .X......
    1116/     339 : 7C                          db      07ch                                                     ; .XXXXX..
    1117/     33A : 40                          db      040h                                                     ; .X......
    1118/     33B :                     graphicf:
    1119/     33B : 7C                          db      07ch                                                     ; .XXXXX..
    1120/     33C : 40                          db      040h                                                     ; .X......
    1121/     33D : 7C                          db      07ch                                                     ; .XXXXX..
    1122/     33E : 40                          db      040h                                                     ; .X......
    1123/     33F : 40                          db      040h                                                     ; .X......
    1124/     340 :                     graphicc:
    1125/     340 : 3C                          db      03ch                                                     ; ..XXXX..
    1126/     341 : 40                          db      040h                                                     ; .X......
    1127/     342 : 40                          db      040h                                                     ; .X......
    1128/     343 : 40                          db      040h                                                     ; .X......
    1129/     344 :                     graphic6:
    1130/     344 : 3C                          db      03ch                                                     ; ..XXXX..
    1131/     345 : 40                          db      040h                                                     ; .X......
    1132/     346 : 78                          db      078h                                                     ; .XXXX...
    1133/     347 : 44                          db      044h                                                     ; .X...X..
    1134/     348 :                     graphic0:
    1135/     348 : 38                          db      038h                                                     ; ..XXX...
    1136/     349 : 44                          db      044h                                                     ; .X...X..
    1137/     34A : 44                          db      044h                                                     ; .X...X..
    1138/     34B : 44                          db      044h                                                     ; .X...X..
    1139/     34C :                     graphic8:
    1140/     34C : 38                          db      038h                                                     ; ..XXX...
    1141/     34D : 44                          db      044h                                                     ; .X...X..
    1142/     34E : 38                          db      038h                                                     ; ..XXX...
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 23 - 7/13/2016 16:31:08


    1143/     34F : 44                          db      044h                                                     ; .X...X..
    1144/     350 :                     graphica:
    1145/     350 : 38                          db      038h                                                     ; ..XXX...
    1146/     351 : 44                          db      044h                                                     ; .X...X..
    1147/     352 : 7C                          db      07ch                                                     ; .XXXXX..
    1148/     353 :                     graphich:
    1149/     353 : 44                          db      044h                                                     ; .X...X..
    1150/     354 : 44                          db      044h                                                     ; .X...X..
    1151/     355 : 7C                          db      07ch                                                     ; .XXXXX..
    1152/     356 :                     graphicu:
    1153/     356 : 44                          db      044h                                                     ; .X...X..
    1154/     357 : 44                          db      044h                                                     ; .X...X..
    1155/     358 : 44                          db      044h                                                     ; .X...X..
    1156/     359 : 44                          db      044h                                                     ; .X...X..
    1157/     35A :                     graphicqmark:
    1158/     35A : 38                          db      038h                                                     ; ..XXX...
    1159/     35B : 44                          db      044h                                                     ; .X...X..
    1160/     35C : 08                          db      008h                                                     ; ....X...
    1161/     35D :                     graphicapostrophe:
    1162/     35D : 10                          :       db 010h                                                  ; ...X....
    1163/     35E : 10                          db      010h                                                     ; ...X....
    1164/     35F :                     graphicspace:
    1165/     35F : 00                          db      000h                                                     ; ........
    1166/     360 :                     graphiculine:
    1167/     360 : 00                          db      000h                                                     ; ........
    1168/     361 : 00                          db      000h                                                     ; ........
    1169/     362 :                     graphicminus:
    1170/     362 : 00                          db      000h                                                     ; ........
    1171/     363 : 00                          db      000h                                                     ; ........
    1172/     364 : 7C                          db      07ch                                                     ; .XXXXX..
    1173/     365 : 00                          db      000h                                                     ; ........
    1174/     366 :                     graphicequals:
    1175/     366 : 00                          db      000h                                                     ; ........
    1176/     367 : 7C                          db      07ch                                                     ; .XXXXX..
    1177/     368 : 00                          db      000h                                                     ; ........
    1178/     369 : 7C                          db      07ch                                                     ; .XXXXX..
    1179/     36A : 00                          :       db 000h                                                  ; ........
    1180/     36B : 18                          db      018h                                                     ; ...XX...
    1181/     36C : 00                          db      000h                                                     ; ........
    1182/     36D : 18                          db      018h                                                     ; ...XX...
    1183/     36E : 00                          db      000h                                                     ; ........
    1184/     36F :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 24 - 7/13/2016 16:31:08


  symbol table (* = unused):
  ------------------------

 ACONNECT :                       1 - | *ARCHITECTURE :  i386-unknown-win32 - |
 AREG :                         110 C |  ASPEAKERBIT :                    4 - |
 ATAPEBIT :                       2 - |  AUDIOCONTROL :                   3 - |
*BIGENDIAN :                      0 - |  BORROWOCCURRED :                68 C |
*BRANCHEXT :                      0 - |  BREG :                         112 C |
 CALL02 :                       166 C | *CASESENSITIVE :                  0 - |
 CKEYOFF :                        0 - |  CKEYON :                         1 - |
 CLSLOOP :                       7D C | *CONSTPI :        3.141592653589793 - |
 CONTROLDEVICE :                  2 - |  COPYPIXELDATA :                2F5 C |
 COPYREGLOOP :                  237 C |  CTAPEREAD :                     20 - |
 CTVOFF :                         0 - |  CTVON :                          3 - |
*DATE :                   7/13/2016 - |  DECTABLE :                     114 C |
 DEVKEYPAD :                      1 - |  DEVTAPE :                        3 - |
 DEVTV :                          2 - |  DONTSKIP :                     22A C |
 EXECR3 :                       15C C |  EXIT02CALL :                   165 C |
 EXITGHIRF :                    16D C |  EXITGLORF :                    171 C |
 EXITINTERRUPT :                117 C | *EXITWRITEBIT :                 2AF C |
 EXITWRITETAPE :                284 C |  EXTERNALBUS :                    6 - |
 EXTERNALCONTROL :                4 - | *FALSE :                          0 - |
 FELDISPLAY :                    A4 C |  FELNEXT :                       DC C |
 FELPACK :                       E2 C |  FELSHOW :                       E8 C |
 FELSTOP :                       E0 C |  FELWRITETAPE :                  CA C |
*FULLPMMU :                       1 - |  GHIRF :                        16E C |
 GLORF :                        172 C |  GRAPHIC0 :                     348 C |
 GRAPHIC1 :                     310 C |  GRAPHIC2 :                     32E C |
 GRAPHIC3 :                     32A C |  GRAPHIC4 :                     319 C |
 GRAPHIC5 :                     332 C |  GRAPHIC6 :                     344 C |
 GRAPHIC7 :                     314 C |  GRAPHIC8 :                     34C C |
 GRAPHIC9 :                     31E C |  GRAPHICA :                     350 C |
*GRAPHICAPOSTROPHE :            35D C |  GRAPHICB :                     322 C |
 GRAPHICC :                     340 C |  GRAPHICD :                     326 C |
 GRAPHICE :                     337 C | *GRAPHICEQUALS :                366 C |
 GRAPHICF :                     33B C | *GRAPHICH :                     353 C |
*GRAPHICMINUS :                 362 C | *GRAPHICQMARK :                 35A C |
 GRAPHICS :                     300 C | *GRAPHICSPACE :                 35F C |
*GRAPHICU :                     356 C | *GRAPHICULINE :                 360 C |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
 INSTRUCTIONA :                 200 C |  INSTRUCTIONB :                 209 C |
 INSTRUCTIONC :                 22B C |  INSTRUCTIOND :                 2BE C |
 INSTRUCTIONE :                 175 C |  INSTRUCTIONF :                 215 C |
 INSTRUCTIONVECTOR :            1C0 C | *INSUPMODE :                      0 - |
 INTERRUPT :                    119 C |  KEYPADON :                     246 C |
 KEYPADPORT :                     0 - | *LISTON :                         1 - |
 LOADADDRCONST :                202 C | *MACEXP :                         1 - |
*MOMCPU :                      1802 - | *MOMCPUNAME :                  1802 - |
 MONITOR :                       84 C | *NESTMAX :                      100 - |
 NEXTDIGIT :                     58 C |  NEXTINSTRUCTION :              13B C |
 NEXTTIMER :                    131 C |  OPCODE0 :                      160 C |
 OPCODE1 :                      20D C |  OPCODE2 :                      281 C |
 OPCODE3 :                      223 C |  OPCODE4 :                      2CA C |
 OPCODE5 :                      21A C |  OPCODE6 :                      258 C |
 OPCODE7 :                       19 C |  OPCODE8 :                      299 C |
 OPCODE9 :                      2DD C | *PACKING :                        0 - |
*PADDING :                        1 - | *PLAYTONE :                     28E C |
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 25 - 7/13/2016 16:31:08


 R0 :                             0 - |  R1 :                             1 - |
 R2 :                             2 - |  R3 :                             3 - |
 R4 :                             4 - |  R5 :                             5 - |
 R6 :                             6 - |  R7 :                             7 - |
 R8 :                             8 - |  R9 :                             9 - |
 RA :                             A - |  RB :                             B - |
 RC :                             C - |  RD :                             D - |
 RE :                             E - |  READABREGS :                   273 C |
 READKEYINPUT :                 17E C |  REGISTERS :                    100 C |
*RELAXED :                        0 - |  RF :                             F - |
 SAVECYCLESIZE :                2B9 C |  SCREEN :                       700 - |
 SELECTDEVICE :                   1 - |  SETADDRREG :                    2C C |
 SHIFTVXLEFT4 :                 24D C |  SKIPIFVXNOTD :                 224 C |
 SKIPINSTRUCTION :              184 C |  SKIPINSTRUCTION2 :             228 C |
 STACK :                        1E0 C |  STACKTOP :                     1FF C |
*START :                          0 C |  SUBTRACTUNIT :                  5B C |
 TAPEBITOUTLOOP :               1AC C |  TAPEBYTEOUTLOOP :              1A2 C |
 TAPEDELAYLOOP :                 4B C | *TIME :                    16:31:08 - |
 TIMERUPDATELOOP :              129 C |  TONEGENERATION :               2BA C |
*TRUE :                           1 - | *VERSION :                     142F - |
 WAITKEYPRESS :                 17C C |  WRITEDF :                      2AD C |
 WRITEDFBITTAPE :               2B0 C |  WRITETAPEDELAY :               285 C |
 WRITETAPEDELAYLOOP :           288 C |

    159 symbols
     39 unused symbols

 AS V1.42 Beta [Bld 102] - source file fel.asm - page 26 - 7/13/2016 16:31:08


  defined macros:
  ---------------

FEL                                   |

      1 macro

 AS V1.42 Beta [Bld 102] - source file fel.asm - page 27 - 7/13/2016 16:31:08


  codepages:
  ----------

STANDARD (0 changed characters)


0.01 seconds assembly time

   1238 lines source file
   1362 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
