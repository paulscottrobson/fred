 AS V1.42 Beta [Bld 102] - source file fel.asm - page 1 - 7/13/2016 12:29:34


       1/       0 :                     ;****************************************************************************************************************
       2/       0 :                     ;                                                        
       3/       0 :                     ;                                                FEL-1 Disassembly
       4/       0 :                     ;                                                =================
       5/       0 :                     ;                                                        
       6/       0 :                     ;     Original version by RCA 1974, from the Billie Jo Call papers from Hagley. Recommented and converted by
       7/       0 :                     ;                                        Paul Robson (paul@robsons.org.uk)
       8/       0 :                     ;                                                        
       9/       0 :                     ;            EF1 is 1 when a keypad byte is available. It is read from INP 0. There is a shift switch.
      10/       0 :                     ;            I think this is set manually. (Implied). Horizontal resolution is set by a toggle switch.
      11/       0 :                     ;                                                        
      12/       0 :                     ;                     EF2 and EF3 are external tests. EF2 detects tape stop. EF4 In ? Error ?
      13/       0 :                     ;                                                        
      14/       0 :                     ;                           Port 1 is a device selector. 1 Keypad, 2 TV, 3 Tape Device
      15/       0 :                     ;                     Port 2 for keypad it is set to 0/1 for TV to 0/3, for Tape $20 is read.
      16/       0 :                     ;                   Port 3 is some flags bit 2 (4) is the audio/tape out and bit 0 (1) is run.
      17/       0 :                     ;                                    Port 4 is the external control register.
      18/       0 :                     ;                                    Port 6 is an extension port (in and out)
      19/       0 :                     ;                                                        
      20/       0 :                     ;      Clock Frequency can be derived from the tone code. In BJC notes 04 is 360us. This is 160 + 40 + 40 *4
      21/       0 :                     ;            cycles. Hence it is clocked at 1Mhz. All the products in the table (kc x us) come to 1000
      22/       0 :                     ;                                                        
      23/       0 :                     ;****************************************************************************************************************
      24/       0 :                     
      25/       0 :                                include felinclude.inc
(1)    1/       0 :                     ;****************************************************************************************************************
(1)    2/       0 :                     ;
(1)    3/       0 :                     ;													1802 Includes
(1)    4/       0 :                     ;
(1)    5/       0 :                     ;****************************************************************************************************************
(1)    6/       0 :                     
(1)    7/       0 :                     	cpu 1802
(1)    8/       0 :                     
(1)    9/       0 : =0H                 r0 = 0 															; register definitions
(1)   10/       0 : =1H                 r1 = 1
(1)   11/       0 : =2H                 r2 = 2
(1)   12/       0 : =3H                 r3 = 3
(1)   13/       0 : =4H                 r4 = 4
(1)   14/       0 : =5H                 r5 = 5
(1)   15/       0 : =6H                 r6 = 6
(1)   16/       0 : =7H                 r7 = 7
(1)   17/       0 : =8H                 r8 = 8
(1)   18/       0 : =9H                 r9 = 9
(1)   19/       0 : =AH                 ra = 10
(1)   20/       0 : =BH                 rb = 11
(1)   21/       0 : =CH                 rc = 12
(1)   22/       0 : =DH                 rd = 13
(1)   23/       0 : =EH                 re = 14
(1)   24/       0 : =FH                 rf = 15
(1)   25/       0 :                     
(1)   26/       0 :                     fel macro 	fw 													; compile FEL-1 instruction in Hi-Low order
(1)   27/       0 :                     	db 	(fw) / 256
(1)   28/       0 :                     	db 	(fw) & 255
(1)   29/       0 :                     	endm
(1)   30/       0 :                     
      26/       0 :                     
      27/       0 :                     start:
      28/       0 : 00                          idl                                                              
      29/       1 : F8 01                       ldi 1                                                            ; Set interrupt, stack
      30/       3 : B1                          phi r1                                                           
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 2 - 7/13/2016 12:29:34


      31/       4 : B2                          phi r2                                                           
      32/       5 : B4                          phi r4                                                           
      33/       6 : B8                          phi r8                                                           
      34/       7 : F8 19                       ldi interrupt & 255                                              ; R1 = $119 Interrupt routine
      35/       9 : A1                          plo r1                                                           
      36/       A : F8 FF                       ldi 0ffh                                                         ; R2 = $1FF Stack top
      37/       C : A2                          plo r2                                                           
      38/       D : F8 3B                       ldi nextinstruction & 255                                        
      39/       F : A4                          plo r4                                                           ; R4 = $13B Execute next instruction
      40/      10 : F8 66                       ldi call02 & 255                                                 
      41/      12 : A8                          plo r8                                                           ; R8 = $166 Call $1nn where nn is next byte
      42/      13 : 90                          ghi r0                                                           
      43/      14 : A5                          plo r5                                                           
      44/      15 : F8 84                       ldi monitor & 255                                                ; R5 = $0B4 "Macro PC"
      45/      17 : B5                          phi r5                                                           
      46/      18 : D4                          sep r4                                                           ; go to "Util" in R4
      47/      19 :                     
      48/      19 :                     ;****************************************************************************************************************
      49/      19 :                     ;                                                        
      50/      19 :                     ;                                                7xxx Instructions
      51/      19 :                     ;                                                        
      52/      19 :                     ;****************************************************************************************************************
      53/      19 :                     
      54/      19 :                     opcode7:
      55/      19 : D8                          sep r8                                                           ; Fetch A and B from memory
      56/      1A : 73                          db readabregs & 255                                              
      57/      1B : E6                          sex r6                                                           ; X points to register X
      58/      1C : 45                          lda r5                                                           ; fetch low byte
      59/      1D : A3                          plo r3                                                           ; go there.
      60/      1E :                     ;   
      61/      1E :                     ;   7x1E M(A)->Vx
      62/      1E :                     ;   
      63/      1E : 4A                          lda ra                                                           ; read M(RA)
      64/      1F : 56                          str r6                                                           ; save in X
      65/      20 : D4                          sep r4                                                           
      66/      21 :                     ;   
      67/      21 :                     ;   7x21 M(B)->Vx
      68/      21 :                     ;   
      69/      21 : 4B                          lda rb                                                           ; read M(RB)
      70/      22 : 56                          str r6                                                           ; save in X
      71/      23 : D4                          sep r4                                                           
      72/      24 :                     ;   
      73/      24 :                     ;   7x24 Vx->M(A)
      74/      24 :                     ;   
      75/      24 : 46                          lda r6                                                           ; get Vx
      76/      25 : 5A                          str ra                                                           ; write to M(RA)
      77/      26 : D4                          sep r4                                                           
      78/      27 :                     ;   
      79/      27 :                     ;   7x27 Vx->M(B)
      80/      27 :                     ;   
      81/      27 : 46                          lda r6                                                           ; get Vx
      82/      28 : 5B                          str rb                                                           ; write to M(RB)
      83/      29 : D4                          sep r4                                                           
      84/      2A :                     ;   
      85/      2A :                     ;   7x2A Vx -> A.0
      86/      2A :                     ;   
      87/      2A : F8 11                       ldi 011h                                                         ; point R7 to RA.0
      88/      2C :                     setaddrreg:
      89/      2C : A7                          plo r7                                                           
      90/      2D : 46                          lda r6                                                           ; get Vx
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 3 - 7/13/2016 12:29:34


      91/      2E : 57                          str r7                                                           ; write it there.
      92/      2F : D4                          sep r4                                                           
      93/      30 :                     ;   
      94/      30 :                     ;   7x30 Vx -> A.1
      95/      30 :                     ;   
      96/      30 : F8 10                       ldi 010h                                                         ; RA.1 address
      97/      32 : 30 2C                       br  setaddrreg                                                   
      98/      34 :                     ;   
      99/      34 :                     ;   7x30 Vx -> B.0
     100/      34 :                     ;   
     101/      34 : F8 13                       ldi 013h                                                         ; RB.0 address
     102/      36 : 30 2C                       br  setaddrreg                                                   
     103/      38 :                     ;   
     104/      38 :                     ;   7x38 A.0 -> Vx
     105/      38 :                     ;   
     106/      38 : 8A                          glo ra                                                           ; RA.0 value
     107/      39 : 56                          str r6                                                           ; put in X
     108/      3A : D4                          sep r4                                                           
     109/      3B :                     ;   
     110/      3B :                     ;   7x3B A.1 -> Vx
     111/      3B :                     ;   
     112/      3B : 9A                          ghi ra                                                           ; RA.1 value
     113/      3C : 56                          str r6                                                           ; put in X
     114/      3D : D4                          sep r4                                                           
     115/      3E :                     ;   
     116/      3E :                     ;   7x3E Shift X left 4
     117/      3E :                     ;   
     118/      3E : D8                          sep r8                                                           ; Do Vx << 4
     119/      3F : 4D                          db  shiftvxleft4 & 255                                           
     120/      40 : D4                          sep r4                                                           
     121/      41 :                     ;   
     122/      41 :                     ;   7x41 Shift X Right 4
     123/      41 :                     ;   
     124/      41 : F0                          ldx                                                              ; Read R(X)
     125/      42 : F6                          shr                                                              
     126/      43 : F6                          shr                                                              
     127/      44 : F6                          shr                                                              
     128/      45 : F6                          shr                                                              
     129/      46 : 56                          str r6                                                           ; write it back
     130/      47 : F6                          shr                                                              
     131/      48 :                     ;   
     132/      48 :                     ;   7x4B Vx Delay (Tape On, Speaker off)
     133/      48 :                     ;   
     134/      48 : E3                          sex r3                                                           ; X = P = R3
     135/      49 : 46                          lda r6                                                           ; read R(X)
     136/      4A : BF                          phi rf                                                           ; put in RF.0
     137/      4B :                     tapedelayloop:
     138/      4B : 63                          out 3                                                            ; tape on, speaker on.
     139/      4C : 03                          db 03                                                            
     140/      4D : 2F                          dec rf                                                           ; dec counter
     141/      4E : 9F                          ghi rf                                                           ; timed out
     142/      4F : 3A 4B                       bnz tapedelayloop                                                ; keep going.
     143/      51 : D4                          sep r4                                                           
     144/      52 :                     ;   
     145/      52 :                     ;   7x52 Convert Vx to 3 digit decimal at A,A+1,A+2
     146/      52 :                     ;   
     147/      52 : F0                          ldx                                                              ; get R(X)
     148/      53 : BF                          phi rf                                                           ; save in RF.1
     149/      54 : F8 14                       ldi 14h                                                          ; point R7 to the 100,10,1
     150/      56 : A7                          plo r7                                                           
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 4 - 7/13/2016 12:29:34


     151/      57 : 2A                          dec ra                                                           ; predec RA
     152/      58 :                     nextdigit:
     153/      58 : 1A                          inc ra                                                           ; A to next cell.
     154/      59 : 93                          ghi r3                                                           ; D = 0
     155/      5A : 5A                          str ra                                                           ; clear counter
     156/      5B :                     subtractunit:
     157/      5B : 47                          lda r7                                                           ; read divisor
     158/      5C : 27                          dec r7                                                           ; unpick it
     159/      5D : F5                          sd                                                               ; subtract from R(X)
     160/      5E : 3B 68                       bnf borrowoccurred                                               ; if no borrow then division complete
     161/      60 : 56                          str r6                                                           ; write it back to R(X)
     162/      61 : 4A                          lda ra                                                           ; read counter of divisions
     163/      62 : 2A                          dec ra                                                           ; undo inc
     164/      63 : FC 01                       adi 01                                                           ; inc counter
     165/      65 : 5A                          str ra                                                           ; write back
     166/      66 : 30 5B                       br  subtractunit                                                 ; try to deduct it again.
     167/      68 :                     borrowoccurred:
     168/      68 : 47                          lda r7                                                           ; get R7 - divider just done and inc R7 to next
     169/      69 : F6                          shr                                                              ; shift it right
     170/      6A : 3B 58                       bnf nextdigit                                                    ; until found the 1, i.e. have done 1
     171/      6C : 9F                          ghi rf                                                           ; fix up R6 back
     172/      6D : 56                          str r6                                                           
     173/      6E : D4                          sep r4                                                           
     174/      6F :                     ;   
     175/      6F :                     ;   7F6F INC A. Must use 7F6F so R6 points to VF, the byte before A
     176/      6F :                     ;   
     177/      6F : 1A                          inc ra                                                           ; increment RA
     178/      70 : 16                          inc r6                                                           ; R6 now points to RA
     179/      71 : 9A                          ghi ra                                                           ; write it back.
     180/      72 : 56                          str r6                                                           
     181/      73 : 16                          inc r6                                                           
     182/      74 : 8A                          glo ra                                                           
     183/      75 : 56                          str r6                                                           
     184/      76 : D4                          sep r4                                                           
     185/      77 : 00                          db 00                                                            
     186/      78 :                     
     187/      78 :                     ;****************************************************************************************************************
     188/      78 :                     ;                                                        
     189/      78 :                     ;                                              Clear Screen Routine
     190/      78 :                     ;                                                        
     191/      78 :                     ;****************************************************************************************************************
     192/      78 :                     
     193/      78 : 93                          ghi r3                                                           ; RA = $800 (R3.1 = 0)
     194/      79 : AA                          plo ra                                                           
     195/      7A : F8 08                       ldi 8                                                            
     196/      7C : BA                          phi ra                                                           
     197/      7D :                     clsloop:
     198/      7D : 2A                          dec ra                                                           ; dec RA
     199/      7E : 93                          ghi r3                                                           ; D = 0
     200/      7F : 5A                          str ra                                                           ; clear screen space
     201/      80 : 8A                          glo ra                                                           ; check RA.0
     202/      81 : 3A 7D                       bnz clsloop                                                      ; go back if not finished
     203/      83 : D4                          sep r4                                                           ; next instruction.
     204/      84 :                     
     205/      84 :                     ;****************************************************************************************************************
     206/      84 :                     ;                                                        
     207/      84 :                     ;                                  This is the FEL-1 Boot Code / Micro monitor.
     208/      84 :                     ;                                                        
     209/      84 :                     ;****************************************************************************************************************
     210/      84 :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 5 - 7/13/2016 12:29:34


     211/      84 :                     monitor:
     212/      84 : (MACRO)                     fel  06000h                                                      ; stop tape
     212/      84 : 60                          db      (06000H) / 256
     212/      85 : 00                          db      (06000H) & 255
     213/      86 : (MACRO)                     fel  0022fh                                                      ; copy registers to stack space.
     213/      86 : 02                          db      (0022FH) / 256
     213/      87 : 2F                          db      (0022FH) & 255
     214/      88 :                     ;   
     215/      88 :                     ;   Read key 0 for Run, C for Write, A for Read Mem, B for Write Mem
     216/      88 :                     ;   
     217/      88 : (MACRO)                     fel  0e17ah                                                      ; read Byte into V1
     217/      88 : E1                          db      (0E17AH) / 256
     217/      89 : 7A                          db      (0E17AH) & 255
     218/      8A : (MACRO)                     fel  03100h                                                      ; skip next instruction if not 00
     218/      8A : 31                          db      (03100H) / 256
     218/      8B : 00                          db      (03100H) & 255
     219/      8C : (MACRO)                     fel  0f400h                                                      ; if was 00, then run program from 400
     219/      8C : F4                          db      (0F400H) / 256
     219/      8D : 00                          db      (0F400H) & 255
     220/      8E : (MACRO)                     fel  0310ch                                                      ; if was 0C, then go to write code
     220/      8E : 31                          db      (0310CH) / 256
     220/      8F : 0C                          db      (0310CH) & 255
     221/      90 : (MACRO)                     fel  0f0cah                                                      
     221/      90 : F0                          db      (0F0CAH) / 256
     221/      91 : CA                          db      (0F0CAH) & 255
     222/      92 :                     ;   
     223/      92 :                     ;   Read three keystrokes into A
     224/      92 :                     ;   
     225/      92 : (MACRO)                     fel  0025ch                                                      ; turn television on.
     225/      92 : 02                          db      (0025CH) / 256
     225/      93 : 5C                          db      (0025CH) & 255
     226/      94 : (MACRO)                     fel  0007bh                                                      ; clear screen memory
     226/      94 : 00                          db      (0007BH) / 256
     226/      95 : 7B                          db      (0007BH) & 255
     227/      96 : (MACRO)                     fel  0e27ah                                                      ; read byte to V2 (high address nibble)
     227/      96 : E2                          db      (0E27AH) / 256
     227/      97 : 7A                          db      (0E27AH) & 255
     228/      98 : (MACRO)                     fel  07230h                                                      ; write to MSB of A
     228/      98 : 72                          db      (07230H) / 256
     228/      99 : 30                          db      (07230H) & 255
     229/      9A : (MACRO)                     fel  0e27ah                                                      ; read byte to V2 (middle address nibble)
     229/      9A : E2                          db      (0E27AH) / 256
     229/      9B : 7A                          db      (0E27AH) & 255
     230/      9C : (MACRO)                     fel  0e37ah                                                      ; read byte to V3 (low address nibble)
     230/      9C : E3                          db      (0E37AH) / 256
     230/      9D : 7A                          db      (0E37AH) & 255
     231/      9E : (MACRO)                     fel  010e2h                                                      ; call pack V2/V3 to V2
     231/      9E : 10                          db      (010E2H) / 256
     231/      9F : E2                          db      (010E2H) & 255
     232/      A0 : (MACRO)                     fel  0722ah                                                      ; write to LSB of A
     232/      A0 : 72                          db      (0722AH) / 256
     232/      A1 : 2A                          db      (0722AH) & 255
     233/      A2 : (MACRO)                     fel  02900h                                                      ; Clear V9
     233/      A2 : 29                          db      (02900H) / 256
     233/      A3 : 00                          db      (02900H) & 255
     234/      A4 :                     ;   
     235/      A4 :                     ;   Display Address
     236/      A4 :                     ;   
     237/      A4 : (MACRO)                     fel  0723bh                                                      ; MSB of A to V2
     237/      A4 : 72                          db      (0723BH) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 6 - 7/13/2016 12:29:34


     237/      A5 : 3B                          db      (0723BH) & 255
     238/      A6 : (MACRO)                     fel  02409h                                                      ; Set V4 = (1,1)
     238/      A6 : 24                          db      (02409H) / 256
     238/      A7 : 09                          db      (02409H) & 255
     239/      A8 : (MACRO)                     fel  010e8h                                                      ; unpack and show V2
     239/      A8 : 10                          db      (010E8H) / 256
     239/      A9 : E8                          db      (010E8H) & 255
     240/      AA : (MACRO)                     fel  07238h                                                      ; LSB of A to V2
     240/      AA : 72                          db      (07238H) / 256
     240/      AB : 38                          db      (07238H) & 255
     241/      AC : (MACRO)                     fel  0240bh                                                      ; Set V4 = (3,1)
     241/      AC : 24                          db      (0240BH) / 256
     241/      AD : 0B                          db      (0240BH) & 255
     242/      AE : (MACRO)                     fel  010e8h                                                      ; unpack and show V2
     242/      AE : 10                          db      (010E8H) / 256
     242/      AF : E8                          db      (010E8H) & 255
     243/      B0 :                     ;   
     244/      B0 :                     ;   Display Data
     245/      B0 :                     ;   
     246/      B0 : (MACRO)                     fel  0721eh                                                      ; read contents of Memory(A) to V2
     246/      B0 : 72                          db      (0721EH) / 256
     246/      B1 : 1E                          db      (0721EH) & 255
     247/      B2 : (MACRO)                     fel  02416h                                                      ; Set V4 = (6,2)
     247/      B2 : 24                          db      (02416H) / 256
     247/      B3 : 16                          db      (02416H) & 255
     248/      B4 : (MACRO)                     fel  010ebh                                                      ; unpack and show V2
     248/      B4 : 10                          db      (010EBH) / 256
     248/      B5 : EB                          db      (010EBH) & 255
     249/      B6 :                     ;   
     250/      B6 :                     ;   First time around, increment A to point to next cell, second time around go back to the display address code.
     251/      B6 :                     ;   
     252/      B6 : (MACRO)                     fel  03901h                                                      ; increment A if V9 != 0 (not first time)
     252/      B6 : 39                          db      (03901H) / 256
     252/      B7 : 01                          db      (03901H) & 255
     253/      B8 : (MACRO)                     fel  07f6fh                                                      
     253/      B8 : 7F                          db      (07F6FH) / 256
     253/      B9 : 6F                          db      (07F6FH) & 255
     254/      BA : (MACRO)                     fel  0e27ah                                                      ; get hex key (upper nibble)
     254/      BA : E2                          db      (0E27AH) / 256
     254/      BB : 7A                          db      (0E27AH) & 255
     255/      BC : (MACRO)                     fel  02901h                                                      ; set V9 = 1 so increments next time
     255/      BC : 29                          db      (02901H) / 256
     255/      BD : 01                          db      (02901H) & 255
     256/      BE : (MACRO)                     fel  0310ah                                                      ; been round twice ?
     256/      BE : 31                          db      (0310AH) / 256
     256/      BF : 0A                          db      (0310AH) & 255
     257/      C0 : (MACRO)                     fel  0f0a4h                                                      ; if command was A (read) do next w/o update
     257/      C0 : F0                          db      (0F0A4H) / 256
     257/      C1 : A4                          db      (0F0A4H) & 255
     258/      C2 : (MACRO)                     fel  0e37ah                                                      ; get the low nibble
     258/      C2 : E3                          db      (0E37AH) / 256
     258/      C3 : 7A                          db      (0E37AH) & 255
     259/      C4 : (MACRO)                     fel  010e2h                                                      ; call pack V2/V3 to V2
     259/      C4 : 10                          db      (010E2H) / 256
     259/      C5 : E2                          db      (010E2H) & 255
     260/      C6 : (MACRO)                     fel  07224h                                                      ; store V(2) at M->A (e.g. new address)
     260/      C6 : 72                          db      (07224H) / 256
     260/      C7 : 24                          db      (07224H) & 255
     261/      C8 : (MACRO)                     fel  0f0a4h                                                      ; redisplay address and data.
     261/      C8 : F0                          db      (0F0A4H) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 7 - 7/13/2016 12:29:34


     261/      C9 : A4                          db      (0F0A4H) & 255
     262/      CA :                     ;   
     263/      CA :                     ;   Write code to tape
     264/      CA :                     ;   
     265/      CA : (MACRO)                     fel  00268h                                                      ; disable hex keyboard input
     265/      CA : 02                          db      (00268H) / 256
     265/      CB : 68                          db      (00268H) & 255
     266/      CC : (MACRO)                     fel  021ffh                                                      ; set V1 = $FF (5 sec approx)
     266/      CC : 21                          db      (021FFH) / 256
     266/      CD : FF                          db      (021FFH) & 255
     267/      CE : (MACRO)                     fel  07148h                                                      ; delay of this length so stabilises
     267/      CE : 71                          db      (07148H) / 256
     267/      CF : 48                          db      (07148H) & 255
     268/      D0 : (MACRO)                     fel  02140h                                                      ; set V1 = $40 (1 sec approx)
     268/      D0 : 21                          db      (02140H) / 256
     268/      D1 : 40                          db      (02140H) & 255
     269/      D2 : (MACRO)                     fel  07148h                                                      ; more delay
     269/      D2 : 71                          db      (07148H) / 256
     269/      D3 : 48                          db      (07148H) & 255
     270/      D4 : (MACRO)                     fel  0d210h                                                      ; tone and delay
     270/      D4 : D2                          db      (0D210H) / 256
     270/      D5 : 10                          db      (0D210H) & 255
     271/      D6 : (MACRO)                     fel  07148h                                                      ; delay with that tone (start tone ?)
     271/      D6 : 71                          db      (07148H) / 256
     271/      D7 : 48                          db      (07148H) & 255
     272/      D8 : (MACRO)                     fel  0a000h                                                      ; A = 0
     272/      D8 : A0                          db      (0A000H) / 256
     272/      D9 : 00                          db      (0A000H) & 255
     273/      DA : (MACRO)                     fel  0f0dch                                                      ; (patched out)
     273/      DA : F0                          db      (0F0DCH) / 256
     273/      DB : DC                          db      (0F0DCH) & 255
     274/      DC : (MACRO)                     fel  0e3a0h                                                      ; write tape M(A) to end
     274/      DC : E3                          db      (0E3A0H) / 256
     274/      DD : A0                          db      (0E3A0H) & 255
     275/      DE : (MACRO)                     fel  0d210h                                                      ; tone and delay
     275/      DE : D2                          db      (0D210H) / 256
     275/      DF : 10                          db      (0D210H) & 255
     276/      E0 : (MACRO)                     fel  0f0e0h                                                      ; stop
     276/      E0 : F0                          db      (0F0E0H) / 256
     276/      E1 : E0                          db      (0F0E0H) & 255
     277/      E2 :                     ;   
     278/      E2 :                     ;   Pack V2/V3 nibbles into a single byte (subroutine)
     279/      E2 :                     ;   
     280/      E2 : (MACRO)                     fel  0723eh                                                      ; Shift V2 left 4 bits
     280/      E2 : 72                          db      (0723EH) / 256
     280/      E3 : 3E                          db      (0723EH) & 255
     281/      E4 : (MACRO)                     fel  08231h                                                      ; V2 = V2 or V3
     281/      E4 : 82                          db      (08231H) / 256
     281/      E5 : 31                          db      (08231H) & 255
     282/      E6 : (MACRO)                     fel  0026eh                                                      ; return
     282/      E6 : 02                          db      (0026EH) / 256
     282/      E7 : 6E                          db      (0026EH) & 255
     283/      E8 :                     ;   
     284/      E8 :                     ;   Unpack V2 into 2 digits and display at V4 (subroutine)
     285/      E8 :                     ;   
     286/      E8 : (MACRO)                     fel  0b300h                                                      ; point B to $300
     286/      E8 : B3                          db      (0B300H) / 256
     286/      E9 : 00                          db      (0B300H) & 255
     287/      EA : (MACRO)                     fel  0230fh                                                      ; V3 = 0Fh
     287/      EA : 23                          db      (0230FH) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 8 - 7/13/2016 12:29:34


     287/      EB : 0F                          db      (0230FH) & 255
     288/      EC : (MACRO)                     fel  08322h                                                      ; And out lowest nibble into V3
     288/      EC : 83                          db      (08322H) / 256
     288/      ED : 22                          db      (08322H) & 255
     289/      EE : (MACRO)                     fel  07241h                                                      ; Shift V2 right 4, now has highest nibble
     289/      EE : 72                          db      (07241H) / 256
     289/      EF : 41                          db      (07241H) & 255
     290/      F0 : (MACRO)                     fel  07334h                                                      ; B = $03<low>
     290/      F0 : 73                          db      (07334H) / 256
     290/      F1 : 34                          db      (07334H) & 255
     291/      F2 : (MACRO)                     fel  07321h                                                      ; Read Mem(B) -> V3, addr of gfx data
     291/      F2 : 73                          db      (07321H) / 256
     291/      F3 : 21                          db      (07321H) & 255
     292/      F4 : (MACRO)                     fel  09345h                                                      ; Draw V3 pattern at cell V4
     292/      F4 : 93                          db      (09345H) / 256
     292/      F5 : 45                          db      (09345H) & 255
     293/      F6 : (MACRO)                     fel  054ffh                                                      ; point to previous cell
     293/      F6 : 54                          db      (054FFH) / 256
     293/      F7 : FF                          db      (054FFH) & 255
     294/      F8 : (MACRO)                     fel  07234h                                                      ; B = $03<high>
     294/      F8 : 72                          db      (07234H) / 256
     294/      F9 : 34                          db      (07234H) & 255
     295/      FA : (MACRO)                     fel  07221h                                                      ; Read Mem(B) -> V2, addr of gfx data
     295/      FA : 72                          db      (07221H) / 256
     295/      FB : 21                          db      (07221H) & 255
     296/      FC : (MACRO)                     fel  09245h                                                      ; Draw V2 pattern at cell V4
     296/      FC : 92                          db      (09245H) / 256
     296/      FD : 45                          db      (09245H) & 255
     297/      FE : (MACRO)                     fel  0026eh                                                      ; return
     297/      FE : 02                          db      (0026EH) / 256
     297/      FF : 6E                          db      (0026EH) & 255
     298/     100 :                     
     299/     100 :                     ;****************************************************************************************************************
     300/     100 :                     ;                                                        
     301/     100 :                     ;                                       Register Area and Conversion table
     302/     100 :                     ;                                                        
     303/     100 :                     ;****************************************************************************************************************
     304/     100 :                     
     305/     100 : 00 00 00 00                 db 0,0,0,0                                                       ; V0-VF
     306/     104 : 00 00 00 00                 db 0,0,0,0                                                       
     307/     108 : 00 00 00 00                 db 0,0,0,0                                                       
     308/     10C : 00 00 00 00                 db 0,0,0,0                                                       
     309/     110 : 00 00                       db 0,0                                                           ; A
     310/     112 : 00 00                       db 0,0                                                           ; B
     311/     114 :                     
     312/     114 : 64                          db 100                                                           ; dividers.
     313/     115 : 0A                          db 10                                                            
     314/     116 : 01                          db 1                                                             
     315/     117 :                     
     316/     117 :                     ;****************************************************************************************************************
     317/     117 :                     ;                                                        
     318/     117 :                     ;                                               Interrupt Routine.
     319/     117 :                     ;                   Sets up R0 to point to display at $700 and decrements VD,VE,VF if non-zero.
     320/     117 :                     ;                                                        
     321/     117 :                     ;****************************************************************************************************************
     322/     117 :                     
     323/     117 :                     exitinterrupt:
     324/     117 : 42                          lda r2                                                           ; pop D off the stack
     325/     118 : 70                          ret                                                              ; return re-enabling interrupts.
     326/     119 :                     interrupt:
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 9 - 7/13/2016 12:29:34


     327/     119 : 22                          dec r2                                                           ; save T on Stack
     328/     11A : 78                          sav                                                              
     329/     11B : 22                          dec r2                                                           ; save D on Stack
     330/     11C : 52                          str r2                                                           ; Save on stack.
     331/     11D :                     
     332/     11D : F8 07                       ldi 7                                                            ; set R0 (display pointer) to $700
     333/     11F : B0                          phi r0                                                           
     334/     120 : F8 00                       ldi 0                                                            
     335/     122 : A0                          plo r0                                                           
     336/     123 :                     
     337/     123 : 19                          inc r9                                                           ; increment R9 (timer ?)
     338/     124 :                     
     339/     124 : 86                          glo r6                                                           ; get R6
     340/     125 : BD                          phi rd                                                           ; save in RD.1
     341/     126 :                     
     342/     126 : F8 0D                       ldi 0dh                                                          
     343/     128 : A6                          plo r6                                                           
     344/     129 :                     timerupdateloop:
     345/     129 : 46                          lda r6                                                           ; read R6 (VD Timer first time around)
     346/     12A : 26                          dec r6                                                           ; fix up R6
     347/     12B : 32 31                       bz  nexttimer                                                    
     348/     12D : AD                          plo rd                                                           ; save in RD.0
     349/     12E : 2D                          dec rd                                                           ; decrement it (so we don't change DF)
     350/     12F : 8D                          glo rd                                                           ; recover it
     351/     130 : 56                          str r6                                                           ; save timer now updated
     352/     131 :                     nexttimer:
     353/     131 : 16                          inc r6                                                           ; point to next timer
     354/     132 : 86                          glo r6                                                           ; get low byte
     355/     133 : FB 10                       xri 10h                                                          ; done all timers
     356/     135 : 3A 29                       bnz timerupdateloop                                              ; if not, go back round again.
     357/     137 : 9D                          ghi rd                                                           ; get RD.1, fix R6 back up again.
     358/     138 : A6                          plo r6                                                           
     359/     139 : 30 17                       br  exitinterrupt                                                ; and go back to exit the routine.
     360/     13B :                     
     361/     13B :                     ;****************************************************************************************************************
     362/     13B :                     ;                                                        
     363/     13B :                     ;            Main execution loop, run in R4. Sets up R6 (X) R7 (Y) and calls code from table at 01C0h
     364/     13B :                     ;                                                        
     365/     13B :                     ;****************************************************************************************************************
     366/     13B :                     
     367/     13B :                     nextinstruction:
     368/     13B : 94                          ghi r4                                                           ; D = 1
     369/     13C : B6                          phi r6                                                           ; Set R6,R7,RC High to Page 1.
     370/     13D : B7                          phi r7                                                           
     371/     13E : BC                          phi rc                                                           
     372/     13F :                     
     373/     13F : 45                          lda r5                                                           ; Read R5 (instruction High)
     374/     140 : AC                          plo rc                                                           ; Save in RC.0
     375/     141 : FA 0F                       ani 0fh                                                          ; get the X register number
     376/     143 : A6                          plo r6                                                           ; R6 now points to Register X.
     377/     144 :                     
     378/     144 : 8C                          glo rc                                                           ; get the instruction High
     379/     145 : F6                          shr                                                              ; shift right four times.
     380/     146 : F6                          shr                                                              
     381/     147 : F6                          shr                                                              
     382/     148 : F6                          shr                                                              ; instruction code in D
     383/     149 : 32 60                       bz  opcode0                                                      ; if zero, its a machine language
     384/     14B : F9 C0                       ori 0c0h                                                         ; OR with $C0
     385/     14D : AC                          plo rc                                                           ; Put in RC.0  now points to vector table
     386/     14E :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 10 - 7/13/2016 12:29:34


     387/     14E : 45                          lda r5                                                           ; Read low byte of instruction
     388/     14F : 25                          dec r5                                                           ; Point it back to R5
     389/     150 : F6                          shr                                                              ; shift right four times
     390/     151 : F6                          shr                                                              
     391/     152 : F6                          shr                                                              
     392/     153 : F6                          shr                                                              ; D now contains the Y register number
     393/     154 : A7                          plo r7                                                           ; R7 now points to Register Y.
     394/     155 :                     
     395/     155 : 4C                          lda rc                                                           ; Read High byte of program
     396/     156 : B3                          phi r3                                                           ; save in R3.1
     397/     157 : 8C                          glo rc                                                           ; get low byte of RC
     398/     158 : FC 0F                       adi 0fh                                                          ; point to low address (+1 already)
     399/     15A : AC                          plo rc                                                           ; write it back
     400/     15B : 4C                          lda rc                                                           ; get low byte of address
     401/     15C :                     execr3:
     402/     15C : A3                          plo r3                                                           ; save in R3.0, now has code address
     403/     15D : D3                          sep r3                                                           ; and call it
     404/     15E : 30 3B                       br  nextinstruction                                              ; make re-entrant
     405/     160 :                     
     406/     160 :                     ;****************************************************************************************************************
     407/     160 :                     ;                                                        
     408/     160 :                     ;                                       0aaa run machine code at aaa in P3.
     409/     160 :                     ;                                                        
     410/     160 :                     ;****************************************************************************************************************
     411/     160 :                     
     412/     160 :                     opcode0:
     413/     160 : 96                          ghi r6                                                           ; get R6.1 (1)
     414/     161 : B3                          phi r3                                                           ; put in R3.1
     415/     162 : 45                          lda r5                                                           ; read instruction second byte.
     416/     163 : 30 5C                       br execr3                                                        
     417/     165 :                     ;   
     418/     165 :                     ;   R8 points here. Calls the $02 <next byte> running in RC.
     419/     165 :                     ;   
     420/     165 :                     exit02call:
     421/     165 : DC                          sep rc                                                           ; return.
     422/     166 :                     call02:
     423/     166 : 43                          lda r3                                                           ; read next byte in code
     424/     167 : AC                          plo rc                                                           ; save in RC.0
     425/     168 : F8 02                       ldi 02                                                           ; put 2xx in RC
     426/     16A : BC                          phi rc                                                           
     427/     16B : 30 65                       br  exit02call                                                   ; and call it, making it re-entrant
     428/     16D :                     ;   
     429/     16D :                     ;   R8 routines to return RF.1, RF.0.
     430/     16D :                     ;   
     431/     16D :                     exitghirf:
     432/     16D : DC                          sep rc                                                           ; get RF.1
     433/     16E :                     ghirf:
     434/     16E : 9F                          ghi rf                                                           
     435/     16F : 30 6D                       br  exitghirf                                                    
     436/     171 :                     ;   
     437/     171 :                     exitglorf:
     438/     171 : DC                          sep rc                                                           ; get RF.0
     439/     172 :                     glorf:
     440/     172 : 8F                          glo rf                                                           
     441/     173 : 30 71                       br  exitglorf                                                    
     442/     175 :                     
     443/     175 :                     ;****************************************************************************************************************
     444/     175 :                     ;                                                        
     445/     175 :                     ;                                     Exaa - execute code at 01aa with X = 6
     446/     175 :                     ;                                                        
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 11 - 7/13/2016 12:29:34


     447/     175 :                     ;****************************************************************************************************************
     448/     175 :                     
     449/     175 :                     instructione:
     450/     175 : D8                          sep r8                                                           ; load A and B into RA and RB
     451/     176 : 73                          db  readabregs & 255                                             
     452/     177 : E6                          sex r6                                                           ; index is Vx
     453/     178 : 45                          lda r5                                                           ; get the 2nd instruction byte
     454/     179 : A3                          plo r3                                                           ; and go there, jump indirect.
     455/     17A :                     ;   
     456/     17A :                     ;   Ex7A . Hex keypad on, wait for byte
     457/     17A :                     ;   
     458/     17A : D8                          sep r8                                                           ; call hex keypad on at $0246
     459/     17B : 46                          db keypadon & 255                                                
     460/     17C :                     waitkeypress:
     461/     17C : 3C 7C                       bn1 waitkeypress                                                 ; wait for EF1 (byte ready)
     462/     17E :                     readkeyinput:
     463/     17E : 68                          db  68h                                                          ; read to M(X) (AS Cannot assemble INP0)
     464/     17F : D4                          sep r4                                                           
     465/     180 :                     ;   
     466/     180 :                     ;   Ex80 . Hex keypad on, byte ready input else skip
     467/     180 :                     ;   
     468/     180 : D8                          sep r8                                                           ; call hex keypad on at $0246
     469/     181 : 46                          db keypadon & 255                                                
     470/     182 : 34 7E                       b1 readkeyinput                                                  ; if byte ready get it.
     471/     184 :                     skipinstruction:
     472/     184 : 15                          inc r5                                                           ; skip instruction
     473/     185 : 15                          inc r5                                                           
     474/     186 : D4                          sep r4                                                           
     475/     187 :                     ;   
     476/     187 :                     ;   Ex87 - EF2 Skip
     477/     187 :                     ;   
     478/     187 : 35 84                       b2 skipinstruction                                               ; skip if  EF2
     479/     189 : D4                          sep r4                                                           
     480/     18A :                     ;   
     481/     18A :                     ;   Ex8A - EF3 Skip
     482/     18A :                     ;   
     483/     18A : 36 84                       b3 skipinstruction                                               ; skip if EF3
     484/     18C : D4                          sep r4                                                           
     485/     18D :                     ;   
     486/     18D :                     ;   Ex8D - Ext Bus to Vx
     487/     18D :                     ;   
     488/     18D : 6E                          inp 6                                                            ; read port 6 input.
     489/     18E : D4                          sep r4                                                           
     490/     18F :                     ;   
     491/     18F :                     ;   Ex8F - Vx to Ext Bus
     492/     18F :                     ;   
     493/     18F : 66                          out 6                                                            ; out to port 6
     494/     190 : D4                          sep r4                                                           
     495/     191 :                     ;   
     496/     191 :                     ;   Ex91 - Write Vx to External Control Register
     497/     191 :                     ;   
     498/     191 : 64                          out 4                                                            ; external control register
     499/     192 : D4                          sep r4                                                           
     500/     193 :                     ;   
     501/     193 :                     ;   E093 - Read tape -> M(A) concurrent using DMA Off. Need to turn TV off and Start tape before.
     502/     193 :                     ;   to check tape end read check EF2.
     503/     193 :                     ;   
     504/     193 : 9A                          ghi ra                                                           ; put RA in R0
     505/     194 : B0                          phi r0                                                           
     506/     195 : 8A                          glo ra                                                           
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 12 - 7/13/2016 12:29:34


     507/     196 : A0                          plo r0                                                           
     508/     197 : E3                          sex r3                                                           ; X = P = 3
     509/     198 : 61                          out 1                                                            ; select tape
     510/     199 : 03                          db 03                                                            
     511/     19A : 62                          out 2                                                            ; tape read
     512/     19B : 20                          db 20h                                                           
     513/     19C : D4                          sep r4                                                           
     514/     19D :                     ;   
     515/     19D :                     ;   R1(0)  -> Vx
     516/     19D :                     ;   
     517/     19D : 90                          ghi r0                                                           
     518/     19E : 56                          str r6                                                           
     519/     19F : D4                          sep r4                                                           
     520/     1A0 :                     ;   
     521/     1A0 :                     ;   E3A0 - Write tape from M(A) to M(06FF). Need to turn TV off and start tape before.
     522/     1A0 :                     ;   
     523/     1A0 : 86                          glo r6                                                           ; read 3  (why E3A0)
     524/     1A1 : BE                          phi re                                                           
     525/     1A2 :                     tapebyteoutloop:
     526/     1A2 : 93                          ghi r3                                                           ; get R3.1 which is 1 (we are in R3)
     527/     1A3 : F6                          shr                                                              ; set DF = 1 D = 0. DF set for writing start
     528/     1A4 : AB                          plo rb                                                           ; save in RB.0 (parity)
     529/     1A5 : F8 08                       ldi 8                                                            ; bits to do.
     530/     1A7 : AE                          plo re                                                           ; save in RE.0
     531/     1A8 : 4A                          lda ra                                                           ; read next byte
     532/     1A9 : BB                          phi rb                                                           ; save in RB.0
     533/     1AA : D8                          sep r8                                                           ; write start bit
     534/     1AB : 85                          db  writetapedelay & 255                                         
     535/     1AC :                     tapebitoutloop:
     536/     1AC : 9B                          ghi rb                                                           ; get the byte value
     537/     1AD : F6                          shr                                                              ; put LSB in DF
     538/     1AE : BB                          phi rb                                                           ; write it back
     539/     1AF : DC                          sep rc                                                           ; write out DF 0/1.
     540/     1B0 : 2E                          dec re                                                           ; decrement bit counter
     541/     1B1 : 8E                          glo re                                                           ; if non zero go back and do next bit.
     542/     1B2 : 3A AC                       bnz tapebitoutloop                                               
     543/     1B4 : 8B                          glo rb                                                           ; get the parity count
     544/     1B5 : F6                          shr                                                              ; shift into DF
     545/     1B6 : DC                          sep rc                                                           ; write that parity bit out
     546/     1B7 : 8A                          glo ra                                                           ; check done whole page
     547/     1B8 : 3A A2                       bnz tapebyteoutloop                                              ; if not keep going
     548/     1BA : 9A                          ghi ra                                                           ; done to $0700 ($06FF last)
     549/     1BB : FB 07                       xri 7                                                            ; (700 is video ram)
     550/     1BD : 3A A2                       bnz tapebyteoutloop                                              ; if not keep going
     551/     1BF : D4                          sep r4                                                           
     552/     1C0 :                     
     553/     1C0 :                     ;****************************************************************************************************************
     554/     1C0 :                     ;                                                        
     555/     1C0 :                     ;                                            Instruction vector tables
     556/     1C0 :                     ;                                                        
     557/     1C0 :                     ;****************************************************************************************************************
     558/     1C0 :                     
     559/     1C0 :                     instructionvector:
     560/     1C0 : 00                          db  0                                                            ; 0xxx not decoded here
     561/     1C1 : 02                          db  opcode1 / 256                                                ; 1mmm Do program at mmm (subroutine call)
     562/     1C2 : 02                          db  opcode2 / 256                                                ; 2xkk Load kk into Vx
     563/     1C3 : 02                          db  opcode3 / 256                                                ; 3xkk Skip if Vx != kk
     564/     1C4 : 02                          db  opcode4 / 256                                                ; 4xkk Vx = Random Number & kk
     565/     1C5 : 02                          db  opcode5 / 256                                                ; 5xkk Vx = Vx + kk,skip if vx = 0
     566/     1C6 : 02                          db  opcode6 / 256                                                ; 6xxx Assorted
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 13 - 7/13/2016 12:29:34


     567/     1C7 : 00                          db  opcode7 / 256                                                ; 7xnn Assorted
     568/     1C8 : 02                          db  opcode8 / 256                                                ; 8xyf Arithmetic
     569/     1C9 : 02                          db  opcode9 / 256                                                ; 9xys Display pattern
     570/     1CA : 02                          db  instructiona / 256                                           ; Ammm Load A immediate
     571/     1CB : 02                          db  instructionb / 256                                           ; Bmmm Load B immediate
     572/     1CC : 02                          db  instructionc / 256                                           ; Cxy0 Skip if vx != vy
     573/     1CD : 02                          db  instructiond / 256                                           ; Dxy0 Vx Tone, Vy Delay (Tape on spk off)
     574/     1CE : 01                          db  instructione / 256                                           ; Exxx Assorted
     575/     1CF : 02                          db  instructionf / 256                                           ; Fmmm Jump to mmm
     576/     1D0 :                     
     577/     1D0 : 00                          db  0                                                            ; 0aaa is not dispatched this way.
     578/     1D1 :                     
     579/     1D1 : 0D                          db  opcode1 & 255                                                ; instruction tables (low address)
     580/     1D2 : 81                          db  opcode2 & 255                                                
     581/     1D3 : 23                          db  opcode3 & 255                                                
     582/     1D4 : CA                          db  opcode4 & 255                                                
     583/     1D5 : 1A                          db  opcode5 & 255                                                
     584/     1D6 : 58                          db  opcode6 & 255                                                
     585/     1D7 : 19                          db  opcode7 & 255                                                
     586/     1D8 : 99                          db  opcode8 & 255                                                
     587/     1D9 : DD                          db  opcode9 & 255                                                
     588/     1DA : 00                          db  instructiona & 255                                           
     589/     1DB : 09                          db  instructionb & 255                                           
     590/     1DC : 2B                          db  instructionc & 255                                           
     591/     1DD : BE                          db  instructiond & 255                                           
     592/     1DE : 75                          db  instructione & 255                                           
     593/     1DF : 15                          db  instructionf & 255                                           
     594/     1E0 :                     
     595/     1E0 : 00 00 00 00                 db  0,0,0,0                                                      ; stack space
     596/     1E4 : 00 00 00 00                 db  0,0,0,0                                                      
     597/     1E8 : 00 00 00 00                 db  0,0,0,0                                                      
     598/     1EC : 00 00 00 00                 db  0,0,0,0                                                      
     599/     1F0 : 00 00 00 00                 db  0,0,0,0                                                      
     600/     1F4 : 00 00 00 00                 db  0,0,0,0                                                      
     601/     1F8 : 00 00 00 00                 db  0,0,0,0                                                      
     602/     1FC : 00 00 00 00                 db  0,0,0,0                                                      
     603/     200 :                     
     604/     200 :                     ;****************************************************************************************************************
     605/     200 :                     ;                                                        
     606/     200 :                     ;                                              Ammm  Load A with mmm
     607/     200 :                     ;                                                        
     608/     200 :                     ;****************************************************************************************************************
     609/     200 :                     
     610/     200 :                     instructiona:
     611/     200 : F8 10                       ldi 10h                                                          ; point R7 to A
     612/     202 :                     loadaddrconst:
     613/     202 : A7                          plo r7                                                           
     614/     203 : 86                          glo r6                                                           ; get X address $10X so its $0X
     615/     204 : 57                          str r7                                                           ; write to A high and point to low
     616/     205 : 17                          inc r7                                                           
     617/     206 : 45                          lda r5                                                           ; get second byte of instruction
     618/     207 : 57                          str r7                                                           ; write to low byte
     619/     208 : D4                          sep r4                                                           
     620/     209 :                     
     621/     209 :                     ;****************************************************************************************************************
     622/     209 :                     ;                                                        
     623/     209 :                     ;                                              Bmmm  Load B with mmm
     624/     209 :                     ;                                                        
     625/     209 :                     ;****************************************************************************************************************
     626/     209 :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 14 - 7/13/2016 12:29:34


     627/     209 :                     instructionb:
     628/     209 : F8 12                       ldi 12h                                                          ; point R7 to B and reuse code above
     629/     20B : 30 02                       br  loadaddrconst                                                
     630/     20D :                     
     631/     20D :                     ;****************************************************************************************************************
     632/     20D :                     ;                                                        
     633/     20D :                     ;                                      1mmm Do Program (Subroutine) at mmmm
     634/     20D :                     ;                                                        
     635/     20D :                     ;****************************************************************************************************************
     636/     20D :                     
     637/     20D :                     opcode1:
     638/     20D : 15                          inc r5                                                           ; r5 point sto next instruction
     639/     20E : 85                          glo r5                                                           ; get return address low
     640/     20F : 22                          dec r2                                                           ; push on stack
     641/     210 : 52                          str r2                                                           
     642/     211 : 95                          ghi r5                                                           ; get return address high
     643/     212 : 22                          dec r2                                                           ; push on stack
     644/     213 : 52                          str r2                                                           
     645/     214 : 25                          dec r5                                                           ; point R5 to low byte and fall through.
     646/     215 :                     
     647/     215 :                     ;****************************************************************************************************************
     648/     215 :                     ;                                                        
     649/     215 :                     ;                                           Fmmm Go to program at mmmm
     650/     215 :                     ;                                                        
     651/     215 :                     ;****************************************************************************************************************
     652/     215 :                     
     653/     215 :                     instructionf:
     654/     215 : 45                          lda r5                                                           ; get low byte
     655/     216 : A5                          plo r5                                                           ; put in FEL PC Low
     656/     217 : 86                          glo r6                                                           ; get X address $10X so this is $0X
     657/     218 : B5                          phi r5                                                           ; put in FEL PC hight
     658/     219 : D4                          sep r4                                                           
     659/     21A :                     
     660/     21A :                     ;****************************************************************************************************************
     661/     21A :                     ;                                                        
     662/     21A :                     ;                                         5xkk add kk to vx, skip if zero
     663/     21A :                     ;                                                        
     664/     21A :                     ;****************************************************************************************************************
     665/     21A :                     
     666/     21A :                     opcode5:
     667/     21A : E6                          sex r6                                                           ; access VX
     668/     21B : 45                          lda r5                                                           ; read 2nd byte
     669/     21C : F4                          add                                                              ; add to VX
     670/     21D : 56                          str r6                                                           ; write back
     671/     21E : 32 28                       bz  skipinstruction2                                             ; if zero skip
     672/     220 : D4                          sep r4                                                           
     673/     221 : 15                          inc r5                                                           ; unused
     674/     222 : D4                          sep r4                                                           ; unused
     675/     223 :                     
     676/     223 :                     ;****************************************************************************************************************
     677/     223 :                     ;                                                        
     678/     223 :                     ;                                       3xkk  Skip instruction if vx != kk
     679/     223 :                     ;                                                        
     680/     223 :                     ;****************************************************************************************************************
     681/     223 :                     
     682/     223 :                     opcode3:
     683/     223 : 45                          lda r5                                                           ; get kk value
     684/     224 :                     skipifvxnotd:
     685/     224 : E6                          sex r6                                                           ; R[X] points to Vx
     686/     225 : F3                          xor                                                              ; compare the values
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 15 - 7/13/2016 12:29:34


     687/     226 : 32 2A                       bz dontskip                                                      ; exit if same
     688/     228 :                     skipinstruction2:
     689/     228 : 15                          inc r5                                                           ; skip
     690/     229 : 15                          inc r5                                                           
     691/     22A :                     dontskip:
     692/     22A : D4                          sep r4                                                           
     693/     22B :                     
     694/     22B :                     ;****************************************************************************************************************
     695/     22B :                     ;                                                        
     696/     22B :                     ;                                             Cxy0  Skip if vx != vy
     697/     22B :                     ;                                                        
     698/     22B :                     ;****************************************************************************************************************
     699/     22B :                     
     700/     22B :                     instructionc:
     701/     22B : 15                          inc r5                                                           ; ignore second byte
     702/     22C : 47                          lda r7                                                           ; read Vy
     703/     22D : 30 24                       br  skipifvxnotd                                                 ; so now its same as 3xkk
     704/     22F :                     
     705/     22F :                     ;****************************************************************************************************************
     706/     22F :                     ;                                                        
     707/     22F :                     ;                                            Copy Registers onto Stack
     708/     22F :                     ;                                                        
     709/     22F :                     ;****************************************************************************************************************
     710/     22F :                     
     711/     22F : F8 00                       ldi 0                                                            ; point R6 to $100
     712/     231 : A6                          plo r6                                                           
     713/     232 : 96                          ghi r6                                                           ; set R7 to $1E0 stack space bottom.
     714/     233 : B7                          phi r7                                                           
     715/     234 : F8 E0                       ldi 0e0h                                                         
     716/     236 : A7                          plo r7                                                           
     717/     237 :                     copyregloop:
     718/     237 : 46                          lda r6                                                           ; read variable data
     719/     238 : 57                          str r7                                                           ; copy it out.
     720/     239 : 17                          inc r7                                                           ; next byte
     721/     23A : 87                          glo r7                                                           
     722/     23B : FB F4                       xri 0f4h                                                         ; copied all 20 bytes of data ?
     723/     23D : 3A 37                       bnz copyregloop                                                  
     724/     23F : D4                          sep r4                                                           
     725/     240 :                     
     726/     240 :                     ;****************************************************************************************************************
     727/     240 :                     ;                                                        
     728/     240 :                     ;                                            Turn the television off.
     729/     240 :                     ;                                                        
     730/     240 :                     ;****************************************************************************************************************
     731/     240 :                     
     732/     240 : E3                          sex r3                                                           ; X = 3 (same as P)
     733/     241 : 61                          out 1                                                            ; select TV device (2)
     734/     242 : 02                          db  2                                                            
     735/     243 : 62                          out 2                                                            ; turn it off
     736/     244 : 00                          db  0                                                            
     737/     245 : D4                          sep r4                                                           
     738/     246 :                     
     739/     246 :                     ;****************************************************************************************************************
     740/     246 :                     ;                                                        
     741/     246 :                     ;                                     Turn hex keypad on (probably run in RC)
     742/     246 :                     ;                                                        
     743/     246 :                     ;****************************************************************************************************************
     744/     246 :                     
     745/     246 :                     keypadon:
     746/     246 : EC                          sex rc                                                           ; X = C
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 16 - 7/13/2016 12:29:34


     747/     247 : 61                          out 1                                                            ; select Keypad device (1)
     748/     248 : 01                          db 1                                                             
     749/     249 : 62                          out 2                                                            ; turn it on.
     750/     24A : 01                          db 1                                                             
     751/     24B : E6                          sex r6                                                           ; set X back and return.
     752/     24C : D3                          sep r3                                                           
     753/     24D :                     
     754/     24D :                     ;****************************************************************************************************************
     755/     24D :                     ;                                                        
     756/     24D :                     ;                                                 Shift Vx left 4
     757/     24D :                     ;                                                        
     758/     24D :                     ;****************************************************************************************************************
     759/     24D :                     
     760/     24D :                     shiftvxleft4:
     761/     24D : E6                          sex r6                                                           ; R(X) now points to Vx
     762/     24E : F0                          ldx                                                              ; get Vx
     763/     24F : F4                          add                                                              ; add it
     764/     250 : 56                          str r6                                                           ; write back << 1
     765/     251 : F4                          add                                                              ; add it
     766/     252 : 56                          str r6                                                           ; write back << 2
     767/     253 : F4                          add                                                              ; add it
     768/     254 : 56                          str r6                                                           ; write back << 3
     769/     255 : F4                          add                                                              ; add it, now << 4
     770/     256 : 56                          str r6                                                           ; write back to Vx
     771/     257 : D3                          sep r3                                                           
     772/     258 :                     ;   
     773/     258 :                     ;   Tape Controller - code to write in low part of instruction
     774/     258 :                     ;   
     775/     258 :                     opcode6:
     776/     258 : E5                          sex r5                                                           ; use R5 as X
     777/     259 : 63                          out 3                                                            ; write low byte of instruction to port 3
     778/     25A : D4                          sep r4                                                           ; return
     779/     25B : 00                          db 0                                                             ; unused
     780/     25C :                     
     781/     25C :                     ;****************************************************************************************************************
     782/     25C :                     ;                                                        
     783/     25C :                     ;                                             Turn the television on
     784/     25C :                     ;                                                        
     785/     25C :                     ;****************************************************************************************************************
     786/     25C :                     
     787/     25C : F8 00                       ldi 0                                                            ; set display address to $700
     788/     25E : A0                          plo r0                                                           
     789/     25F : F8 07                       ldi 7                                                            
     790/     261 : B0                          phi r0                                                           
     791/     262 : E3                          sex r3                                                           ; X = 3 (same as P)
     792/     263 : 61                          out 1                                                            ; select TV device (2)
     793/     264 : 02                          db 2                                                             
     794/     265 : 62                          out 2                                                            ; turn TV on (why 3 ?)
     795/     266 : 03                          db 3                                                             
     796/     267 : D4                          sep r4                                                           
     797/     268 :                     
     798/     268 :                     ;****************************************************************************************************************
     799/     268 :                     ;                                                        
     800/     268 :                     ;                                               Turn hex keypad off
     801/     268 :                     ;                                                        
     802/     268 :                     ;****************************************************************************************************************
     803/     268 :                     
     804/     268 : E3                          sex r3                                                           ; X = 3 (Same as P)
     805/     269 : 61                          out 1                                                            ; select keypad device (1)
     806/     26A : 01                          db 1                                                             
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 17 - 7/13/2016 12:29:34


     807/     26B : 62                          out 2                                                            ; and turn it off
     808/     26C : 00                          db 0                                                             
     809/     26D : D4                          sep r4                                                           
     810/     26E :                     
     811/     26E :                     ;****************************************************************************************************************
     812/     26E :                     ;                                                        
     813/     26E :                     ;                                             Return from subroutine
     814/     26E :                     ;                                                        
     815/     26E :                     ;****************************************************************************************************************
     816/     26E :                     
     817/     26E : 42                          lda r2                                                           ; pop high return
     818/     26F : B5                          phi r5                                                           ; into R5
     819/     270 : 42                          lda r2                                                           ; same with low
     820/     271 : A5                          plo r5                                                           
     821/     272 : D4                          sep r4                                                           ; return.
     822/     273 :                     ;   
     823/     273 :                     ;   Load A and B into RA and RB
     824/     273 :                     ;   
     825/     273 :                     readabregs:
     826/     273 : 96                          ghi r6                                                           ; RF = $110
     827/     274 : BF                          phi rf                                                           
     828/     275 : F8 10                       ldi 10h                                                          
     829/     277 : AF                          plo rf                                                           
     830/     278 : 4F                          lda rf                                                           ; load in A
     831/     279 : BA                          phi ra                                                           
     832/     27A : 4F                          lda rf                                                           
     833/     27B : AA                          plo ra                                                           
     834/     27C : 4F                          lda rf                                                           ; load in B
     835/     27D : BB                          phi rb                                                           
     836/     27E : 4F                          lda rf                                                           
     837/     27F : AB                          plo rb                                                           
     838/     280 : D3                          sep r3                                                           
     839/     281 :                     
     840/     281 :                     ;****************************************************************************************************************
     841/     281 :                     ;                                                        
     842/     281 :                     ;                                               2xkk write kk to vX
     843/     281 :                     ;                                                        
     844/     281 :                     ;****************************************************************************************************************
     845/     281 :                     
     846/     281 :                     opcode2:
     847/     281 : 45                          lda r5                                                           ; read 2nd instruction byte
     848/     282 : 56                          str r6                                                           ; save in Vx
     849/     283 : D4                          sep r4                                                           
     850/     284 :                     ;   
     851/     284 :                     ;   Write to tape - delay
     852/     284 :                     ;   
     853/     284 :                     exitwritetape:
     854/     284 : D3                          sep r3                                                           
     855/     285 :                     writetapedelay:
     856/     285 : F8 14                       ldi 14h                                                          ; set timer counter
     857/     287 : AF                          plo rf                                                           
     858/     288 :                     writetapedelayloop:
     859/     288 : 2F                          dec rf                                                           
     860/     289 : 8F                          glo rf                                                           
     861/     28A : 3A 88                       bnz writetapedelayloop                                           
     862/     28C : 30 B0                       br  writedfbittape                                               ; next time, it will write 0/1
     863/     28E :                     
     864/     28E :                     ;   
     865/     28E :                     ;   Do tone Vx = Tone VY = Delay
     866/     28E :                     ;   
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 18 - 7/13/2016 12:29:34


     867/     28E :                     playtone:
     868/     28E : 46                          lda r6                                                           ; read X (tone)
     869/     28F : BE                          phi re                                                           ; store in tone register
     870/     290 : F8 6E                       ldi ghirf & 255                                                  ; set to identify return.
     871/     292 : A6                          plo r6                                                           
     872/     293 : 47                          lda r7                                                           ; read delay time.
     873/     294 : BF                          phi rf                                                           ; set RF counter.
     874/     295 : D8                          sep r8                                                           ; call the tone routine.
     875/     296 : BA                          db tonegeneration & 255                                          
     876/     297 : 15                          inc r5                                                           ; fetch the 2nd byte
     877/     298 : D4                          sep r4                                                           
     878/     299 :                     
     879/     299 :                     ;****************************************************************************************************************
     880/     299 :                     ;                                                        
     881/     299 :                     ;                    8xyn  x = x or y (1) x and y (2) x+y(4) x-y (5), V0 is carry / not borrow
     882/     299 :                     ;                                                        
     883/     299 :                     ;****************************************************************************************************************
     884/     299 :                     
     885/     299 :                     opcode8:
     886/     299 : 22                          dec r2                                                           ; push $D3 on the stack
     887/     29A : F8 D3                       ldi 0d3h                                                         ; (SEP R3)
     888/     29C : 52                          str r2                                                           
     889/     29D : 22                          dec r2                                                           
     890/     29E : 45                          lda r5                                                           ; get the low byte
     891/     29F : F9 F0                       ori 0f0h                                                         ; F1 F2 F4 F5 which are or and + -
     892/     2A1 : 52                          str r2                                                           ; save on stack
     893/     2A2 : E6                          sex r6                                                           ; RX points to the Rx value
     894/     2A3 : 47                          lda r7                                                           ; get the RY value
     895/     2A4 : D2                          sep r2                                                           ; call the code pushed on the stack
     896/     2A5 : 56                          str r6                                                           ; save at R6 (Vx)
     897/     2A6 : F8 00                       ldi 0                                                            ; set R6 to point to $100 V0
     898/     2A8 : A6                          plo r6                                                           
     899/     2A9 : 96                          ghi r6                                                           ; D = 1
     900/     2AA : 33 AD                       bdf writedf                                                      ; if DF clear then
     901/     2AC : F6                          shr                                                              ; D = 0
     902/     2AD :                     writedf:
     903/     2AD : 56                          str r6                                                           ; write DF out to V0
     904/     2AE : D4                          sep r4                                                           
     905/     2AF :                     
     906/     2AF :                     ;****************************************************************************************************************
     907/     2AF :                     ;                                                        
     908/     2AF :                     ;       Write DF to tape. Sets up R6 to return to tape code, and writes for 2 or 3 cycles depending on DF.
     909/     2AF :                     ;                                                        
     910/     2AF :                     ;****************************************************************************************************************
     911/     2AF :                     
     912/     2AF :                     exitwritebit:
     913/     2AF : D3                          sep r3                                                           
     914/     2B0 :                     writedfbittape:
     915/     2B0 : F8 72                       ldi glorf & 255                                                  
     916/     2B2 : A6                          plo r6                                                           
     917/     2B3 : 9C                          ghi rc                                                           ; D = 2 (write cycles)
     918/     2B4 : 3B B9                       bnf savecyclesize                                                ; if bit to write zero, skip
     919/     2B6 : 1B                          inc rb                                                           ; inc parity value in RB.0
     920/     2B7 : FC 03                       adi 3                                                            ; D = 5
     921/     2B9 :                     savecyclesize:
     922/     2B9 : AF                          plo rf                                                           ; put write value in RF
     923/     2BA :                     
     924/     2BA :                     ;****************************************************************************************************************
     925/     2BA :                     ;                                                        
     926/     2BA :                     ;                        Tone Generate (P = C), RE.1 = Pitch, RF.0 = Cycles to do it for.
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 19 - 7/13/2016 12:29:34


     927/     2BA :                     ;                   R6 is set to 72 for read tape and 6E for make tone, which is how it figures
     928/     2BA :                     ;                        out what to do afterwards,this is used for tape and cassette out.
     929/     2BA :                     ;                                                        
     930/     2BA :                     ;****************************************************************************************************************
     931/     2BA :                     
     932/     2BA :                     tonegeneration:
     933/     2BA : EC                          sex rc                                                           ; X = P = C
     934/     2BB : 63                          out 3                                                            ; set External Function Register -> Run
     935/     2BC : 05                          db 05                                                            ; speaker line
     936/     2BD : 9E                          ghi re                                                           ; value 3, set in write tape routine for tape
     937/     2BE :                     instructiond:
     938/     2BE : FF 01                       smi 1                                                            ; short delay loop
     939/     2C0 : 3A BE                       bnz instructiond                                                 
     940/     2C2 : 63                          out 3                                                            ; reset speaker line.
     941/     2C3 : 01                          db  01                                                           
     942/     2C4 : 2F                          dec rf                                                           ; done it correct number of times
     943/     2C5 : D6                          sep r6                                                           ; call F0/F1 -> D, identify caller
     944/     2C6 : 3A BA                       bnz tonegeneration                                               ; tone, go back to tone loop
     945/     2C8 : 30 84                       br  exitwritetape                                                ; tape, go back to tape loop
     946/     2CA :                     
     947/     2CA :                     ;****************************************************************************************************************
     948/     2CA :                     ;                                                        
     949/     2CA :                     ;                                             4xkk  Vx = kk & random
     950/     2CA :                     ;                                                        
     951/     2CA :                     ;****************************************************************************************************************
     952/     2CA :                     
     953/     2CA :                     opcode4:
     954/     2CA : 19                          inc r9                                                           ; bump and read random lower
     955/     2CB : 89                          glo r9                                                           
     956/     2CC : A7                          plo r7                                                           ; R7 = $01<R9.0>
     957/     2CD : E7                          sex r7                                                           ; X points there, use as randomish data
     958/     2CE : 99                          ghi r9                                                           ; random high
     959/     2CF : F4                          add                                                              ; R9.1 + Mem[$01<R9.0>]
     960/     2D0 : 22                          dec r2                                                           ; push on stack
     961/     2D1 : 52                          str r2                                                           
     962/     2D2 : F6                          shr                                                              ; add to self shifted right
     963/     2D3 : E2                          sex r2                                                           
     964/     2D4 : F4                          add                                                              
     965/     2D5 : B9                          phi r9                                                           ; update R9 high
     966/     2D6 : 56                          str r6                                                           ; save at Vx
     967/     2D7 : E6                          sex r6                                                           ; RX points to Vx
     968/     2D8 : 45                          lda r5                                                           ; read low byte (mask)
     969/     2D9 : F2                          and                                                              ; and with Vx
     970/     2DA : 56                          str r6                                                           ; update
     971/     2DB : 12                          inc r2                                                           ; fix up stack and exit.
     972/     2DC : D4                          sep r4                                                           
     973/     2DD :                     
     974/     2DD :                     ;****************************************************************************************************************
     975/     2DD :                     ;                                                        
     976/     2DD :                     ;               9xys  Draw sxs pattern (5 or 8) x = pattern address in page 3 y = tv cell address.
     977/     2DD :                     ;                                                        
     978/     2DD :                     ;****************************************************************************************************************
     979/     2DD :                     opcode9:
     980/     2DD : 45                          lda r5                                                           ; Get next byte
     981/     2DE : FA 0F                       ani 0fh                                                          ; look at lower 4 bits which are size
     982/     2E0 : AF                          plo rf                                                           ; RF.0 is the number of lines to do.
     983/     2E1 :                     
     984/     2E1 :                     ;****************************************************************************************************************
     985/     2E1 :                     ;                                                        
     986/     2E1 :                     ;                                                   RF = #lines
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 20 - 7/13/2016 12:29:34


     987/     2E1 :                     ;                                                        
     988/     2E1 :                     ;****************************************************************************************************************
     989/     2E1 :                     
     990/     2E1 : E6                          sex r6                                                           ; R(x) points to VX
     991/     2E2 : F0                          ldx                                                              ; read X
     992/     2E3 : AA                          plo ra                                                           ; save in RA.0
     993/     2E4 : F8 03                       ldi 3                                                            ; RA is $03[Vx]
     994/     2E6 : BA                          phi ra                                                           
     995/     2E7 :                     
     996/     2E7 :                     ;****************************************************************************************************************
     997/     2E7 :                     ;                                                        
     998/     2E7 :                     ;                  RF = #lines. RA = address of graphic data. Calc address from tv cell address.
     999/     2E7 :                     ;                       Bits 3,4 are the vertical cell position (0-3, 8 pixels high cell).
    1000/     2E7 :                     ;                       Bits 0,1,2 are the horizontal position. (0-7, 8 pixels wide cell).
    1001/     2E7 :                     ;                                                        
    1002/     2E7 :                     ;****************************************************************************************************************
    1003/     2E7 :                     
    1004/     2E7 : 47                          lda r7                                                           ; read Y (Cell number)
    1005/     2E8 : AB                          plo rb                                                           ; RB.0 = Y
    1006/     2E9 : F6                          shr                                                              ; R6 = Y >> 1 << 4 (Y * 8)
    1007/     2EA : 56                          str r6                                                           ; using shift left function, so bits
    1008/     2EB : D8                          sep r8                                                           ; 3 and 4 are now in bits 6,7
    1009/     2EC : 4D                          db  shiftvxleft4 & 255                                           
    1010/     2ED : 8B                          glo rb                                                           ; get original cell number for bits 0-2
    1011/     2EE : F1                          or                                                               ; or with bits 6-7
    1012/     2EF : FA C7                       ani 0c7h                                                         ; remove so only bits 0-2 and bits 6-7
    1013/     2F1 : AB                          plo rb                                                           
    1014/     2F2 : F8 07                       ldi 07                                                           ; set RB.1 = 07<addr>
    1015/     2F4 : BB                          phi rb                                                           
    1016/     2F5 :                     
    1017/     2F5 :                     copypixeldata:
    1018/     2F5 : 4A                          lda ra                                                           ; read first byte of data
    1019/     2F6 : 5B                          str rb                                                           ; write to the screen
    1020/     2F7 : 8B                          glo rb                                                           ; get low byte of screen address
    1021/     2F8 : FC 08                       adi 08                                                           ; go one row down
    1022/     2FA : AB                          plo rb                                                           ; update screen address
    1023/     2FB : 2F                          dec rf                                                           ; decrement line counter.
    1024/     2FC : 8F                          glo rf                                                           ; check it
    1025/     2FD : 3A F5                       bnz copypixeldata                                                ; do next row.
    1026/     2FF : D4                          sep r4                                                           
    1027/     300 :                     
    1028/     300 :                     ;****************************************************************************************************************
    1029/     300 :                     ;                                                        
    1030/     300 :                     ;                  0300 font data. First 16 bytes is offset for 0-9A-F required for the monitor.
    1031/     300 :                     ;                                       Everything after that is optional.
    1032/     300 :                     ;                                                        
    1033/     300 :                     ;****************************************************************************************************************
    1034/     300 :                     
    1035/     300 : 48                          db graphic0 & 255                                                
    1036/     301 : 10                          db graphic1 & 255                                                
    1037/     302 : 2E                          db graphic2 & 255                                                
    1038/     303 : 2A                          db graphic3 & 255                                                
    1039/     304 : 19                          db graphic4 & 255                                                
    1040/     305 : 32                          db graphic5 & 255                                                
    1041/     306 : 44                          db graphic6 & 255                                                
    1042/     307 : 14                          db graphic7 & 255                                                
    1043/     308 : 4C                          db graphic8 & 255                                                
    1044/     309 : 1E                          db graphic9 & 255                                                
    1045/     30A : 50                          db graphica & 255                                                
    1046/     30B : 22                          db graphicb & 255                                                
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 21 - 7/13/2016 12:29:34


    1047/     30C : 40                          db graphicc & 255                                                
    1048/     30D : 26                          db graphicd & 255                                                
    1049/     30E : 37                          db graphice & 255                                                
    1050/     30F : 3B                          db graphicf & 255                                                
    1051/     310 :                     graphic1:
    1052/     310 : 10                          db 010h                                                          ; ...X....
    1053/     311 : 30                          db 030h                                                          ; ..XX....
    1054/     312 : 10                          db 010h                                                          ; ...X....
    1055/     313 : 10                          db 010h                                                          ; ...X....
    1056/     314 :                     graphic7:
    1057/     314 : 7C                          db 07ch                                                          ; .XXXXX..
    1058/     315 : 08                          db 008h                                                          ; ....X...
    1059/     316 : 10                          db 010h                                                          ; ...X....
    1060/     317 : 20                          db 020h                                                          ; ..X.....
    1061/     318 : 40                          db 040h                                                          ; .X......
    1062/     319 :                     graphic4:
    1063/     319 : 08                          db 008h                                                          ; ....X...
    1064/     31A : 18                          db 018h                                                          ; ...XX...
    1065/     31B : 28                          db 028h                                                          ; ..X.X...
    1066/     31C : 7C                          db 07ch                                                          ; .XXXXX..
    1067/     31D : 08                          db 008h                                                          ; ....X...
    1068/     31E :                     graphic9:
    1069/     31E : 38                          db 038h                                                          ; ..XXX...
    1070/     31F : 44                          db 044h                                                          ; .X...X..
    1071/     320 : 3C                          db 03ch                                                          ; ..XXXX..
    1072/     321 : 04                          db 004h                                                          ; .....X..
    1073/     322 :                     graphicb:
    1074/     322 : 78                          db 078h                                                          ; .XXXX...
    1075/     323 : 24                          db 024h                                                          ; ..X..X..
    1076/     324 : 38                          db 038h                                                          ; ..XXX...
    1077/     325 : 24                          db 024h                                                          ; ..X..X..
    1078/     326 :                     graphicd:
    1079/     326 : 78                          db 078h                                                          ; .XXXX...
    1080/     327 : 44                          db 044h                                                          ; .X...X..
    1081/     328 : 44                          db 044h                                                          ; .X...X..
    1082/     329 : 44                          db 044h                                                          ; .X...X..
    1083/     32A :                     graphic3:
    1084/     32A : 78                          db 078h                                                          ; .XXXX...
    1085/     32B : 04                          db 004h                                                          ; .....X..
    1086/     32C : 18                          db 018h                                                          ; ...XX...
    1087/     32D : 04                          db 004h                                                          ; .....X..
    1088/     32E :                     graphic2:
    1089/     32E : 78                          db 078h                                                          ; .XXXX...
    1090/     32F : 04                          db 004h                                                          ; .....X..
    1091/     330 : 38                          db 038h                                                          ; ..XXX...
    1092/     331 : 40                          db 040h                                                          ; .X......
    1093/     332 :                     graphic5:
    1094/     332 : 7C                          db 07ch                                                          ; .XXXXX..
    1095/     333 : 04                          db 004h                                                          ; .X..
    1096/     334 : 78                          db 078h                                                          ; .XXXX...
    1097/     335 : 04                          db 004h                                                          ; .....X..
    1098/     336 : 78                          db 078h                                                          ; .XXXX...
    1099/     337 :                     graphice:
    1100/     337 : 7C                          db 07ch                                                          ; .XXXXX..
    1101/     338 : 40                          db 040h                                                          ; .X......
    1102/     339 : 7C                          db 07ch                                                          ; .XXXXX..
    1103/     33A : 40                          db 040h                                                          ; .X......
    1104/     33B :                     graphicf:
    1105/     33B : 7C                          db 07ch                                                          ; .XXXXX..
    1106/     33C : 40                          db 040h                                                          ; .X......
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 22 - 7/13/2016 12:29:34


    1107/     33D : 7C                          db 07ch                                                          ; .XXXXX..
    1108/     33E : 40                          db 040h                                                          ; .X......
    1109/     33F : 40                          db 040h                                                          ; .X......
    1110/     340 :                     graphicc:
    1111/     340 : 3C                          db 03ch                                                          ; ..XXXX..
    1112/     341 : 40                          db 040h                                                          ; .X......
    1113/     342 : 40                          db 040h                                                          ; .X......
    1114/     343 : 40                          db 040h                                                          ; .X......
    1115/     344 :                     graphic6:
    1116/     344 : 3C                          db 03ch                                                          ; ..XXXX..
    1117/     345 : 40                          db 040h                                                          ; .X......
    1118/     346 : 78                          db 078h                                                          ; .XXXX...
    1119/     347 : 44                          db 044h                                                          ; .X...X..
    1120/     348 :                     graphic0:
    1121/     348 : 38                          db 038h                                                          ; ..XXX...
    1122/     349 : 44                          db 044h                                                          ; .X...X..
    1123/     34A : 44                          db 044h                                                          ; .X...X..
    1124/     34B : 44                          db 044h                                                          ; .X...X..
    1125/     34C :                     graphic8:
    1126/     34C : 38                          db 038h                                                          ; ..XXX...
    1127/     34D : 44                          db 044h                                                          ; .X...X..
    1128/     34E : 38                          db 038h                                                          ; ..XXX...
    1129/     34F : 44                          db 044h                                                          ; .X...X..
    1130/     350 :                     graphica:
    1131/     350 : 38                          db 038h                                                          ; ..XXX...
    1132/     351 : 44                          db 044h                                                          ; .X...X..
    1133/     352 : 7C                          db 07ch                                                          ; .XXXXX..
    1134/     353 :                     graphich:
    1135/     353 : 44                          db 044h                                                          ; .X...X..
    1136/     354 : 44                          db 044h                                                          ; .X...X..
    1137/     355 : 7C                          db 07ch                                                          ; .XXXXX..
    1138/     356 :                     graphicu:
    1139/     356 : 44                          db 044h                                                          ; .X...X..
    1140/     357 : 44                          db 044h                                                          ; .X...X..
    1141/     358 : 44                          db 044h                                                          ; .X...X..
    1142/     359 : 44                          db 044h                                                          ; .X...X..
    1143/     35A :                     graphicqmark:
    1144/     35A : 38                          db 038h                                                          ; ..XXX...
    1145/     35B : 44                          db 044h                                                          ; .X...X..
    1146/     35C : 08                          db 008h                                                          ; ....X...
    1147/     35D :                     graphicapostrophe:
    1148/     35D : 10                          :  db 010h                                                       ; ...X....
    1149/     35E : 10                          db 010h                                                          ; ...X....
    1150/     35F :                     graphicspace:
    1151/     35F : 00                          db 000h                                                          ; ........
    1152/     360 :                     graphiculine:
    1153/     360 : 00                          db 000h                                                          ; ........
    1154/     361 : 00                          db 000h                                                          ; ........
    1155/     362 :                     graphicminus:
    1156/     362 : 00                          db 000h                                                          ; ........
    1157/     363 : 00                          db 000h                                                          ; ........
    1158/     364 : 7C                          db 07ch                                                          ; .XXXXX..
    1159/     365 : 00                          db 000h                                                          ; ........
    1160/     366 :                     graphicequals:
    1161/     366 : 00                          db 000h                                                          ; ........
    1162/     367 : 7C                          db 07ch                                                          ; .XXXXX..
    1163/     368 : 00                          db 000h                                                          ; ........
    1164/     369 : 7C                          db 07ch                                                          ; .XXXXX..
    1165/     36A : 00                          :  db 000h                                                       ; ........
    1166/     36B : 18                          db 018h                                                          ; ...XX...
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 23 - 7/13/2016 12:29:34


    1167/     36C : 00                          db 000h                                                          ; ........
    1168/     36D : 18                          db 018h                                                          ; ...XX...
    1169/     36E : 00                          db 000h                                                          ; ........
    1170/     36F :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 24 - 7/13/2016 12:29:34


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :  i386-unknown-win32 - | *BIGENDIAN :                      0 - |
 BORROWOCCURRED :                68 C | *BRANCHEXT :                      0 - |
 CALL02 :                       166 C | *CASESENSITIVE :                  0 - |
 CLSLOOP :                       7D C | *CONSTPI :        3.141592653589793 - |
 COPYPIXELDATA :                2F5 C |  COPYREGLOOP :                  237 C |
*DATE :                   7/13/2016 - |  DONTSKIP :                     22A C |
 EXECR3 :                       15C C |  EXIT02CALL :                   165 C |
 EXITGHIRF :                    16D C |  EXITGLORF :                    171 C |
 EXITINTERRUPT :                117 C | *EXITWRITEBIT :                 2AF C |
 EXITWRITETAPE :                284 C | *FALSE :                          0 - |
*FULLPMMU :                       1 - |  GHIRF :                        16E C |
 GLORF :                        172 C |  GRAPHIC0 :                     348 C |
 GRAPHIC1 :                     310 C |  GRAPHIC2 :                     32E C |
 GRAPHIC3 :                     32A C |  GRAPHIC4 :                     319 C |
 GRAPHIC5 :                     332 C |  GRAPHIC6 :                     344 C |
 GRAPHIC7 :                     314 C |  GRAPHIC8 :                     34C C |
 GRAPHIC9 :                     31E C |  GRAPHICA :                     350 C |
*GRAPHICAPOSTROPHE :            35D C |  GRAPHICB :                     322 C |
 GRAPHICC :                     340 C |  GRAPHICD :                     326 C |
 GRAPHICE :                     337 C | *GRAPHICEQUALS :                366 C |
 GRAPHICF :                     33B C | *GRAPHICH :                     353 C |
*GRAPHICMINUS :                 362 C | *GRAPHICQMARK :                 35A C |
*GRAPHICSPACE :                 35F C | *GRAPHICU :                     356 C |
*GRAPHICULINE :                 360 C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - |  INSTRUCTIONA :                 200 C |
 INSTRUCTIONB :                 209 C |  INSTRUCTIONC :                 22B C |
 INSTRUCTIOND :                 2BE C |  INSTRUCTIONE :                 175 C |
 INSTRUCTIONF :                 215 C | *INSTRUCTIONVECTOR :            1C0 C |
*INSUPMODE :                      0 - |  INTERRUPT :                    119 C |
 KEYPADON :                     246 C | *LISTON :                         1 - |
 LOADADDRCONST :                202 C | *MACEXP :                         1 - |
*MOMCPU :                      1802 - | *MOMCPUNAME :                  1802 - |
 MONITOR :                       84 C | *NESTMAX :                      100 - |
 NEXTDIGIT :                     58 C |  NEXTINSTRUCTION :              13B C |
 NEXTTIMER :                    131 C |  OPCODE0 :                      160 C |
 OPCODE1 :                      20D C |  OPCODE2 :                      281 C |
 OPCODE3 :                      223 C |  OPCODE4 :                      2CA C |
 OPCODE5 :                      21A C |  OPCODE6 :                      258 C |
 OPCODE7 :                       19 C |  OPCODE8 :                      299 C |
 OPCODE9 :                      2DD C | *PACKING :                        0 - |
*PADDING :                        1 - | *PLAYTONE :                     28E C |
 R0 :                             0 - |  R1 :                             1 - |
 R2 :                             2 - |  R3 :                             3 - |
 R4 :                             4 - |  R5 :                             5 - |
 R6 :                             6 - |  R7 :                             7 - |
 R8 :                             8 - |  R9 :                             9 - |
 RA :                             A - |  RB :                             B - |
 RC :                             C - |  RD :                             D - |
 RE :                             E - |  READABREGS :                   273 C |
 READKEYINPUT :                 17E C | *RELAXED :                        0 - |
 RF :                             F - |  SAVECYCLESIZE :                2B9 C |
 SETADDRREG :                    2C C |  SHIFTVXLEFT4 :                 24D C |
 SKIPIFVXNOTD :                 224 C |  SKIPINSTRUCTION :              184 C |
 SKIPINSTRUCTION2 :             228 C | *START :                          0 C |
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 25 - 7/13/2016 12:29:34


 SUBTRACTUNIT :                  5B C |  TAPEBITOUTLOOP :               1AC C |
 TAPEBYTEOUTLOOP :              1A2 C |  TAPEDELAYLOOP :                 4B C |
*TIME :                    12:29:34 - |  TIMERUPDATELOOP :              129 C |
 TONEGENERATION :               2BA C | *TRUE :                           1 - |
*VERSION :                     142F - |  WAITKEYPRESS :                 17C C |
 WRITEDF :                      2AD C |  WRITEDFBITTAPE :               2B0 C |
 WRITETAPEDELAY :               285 C |  WRITETAPEDELAYLOOP :           288 C |

    128 symbols
     40 unused symbols

 AS V1.42 Beta [Bld 102] - source file fel.asm - page 26 - 7/13/2016 12:29:34


  defined macros:
  ---------------

FEL                                   |

      1 macro

 AS V1.42 Beta [Bld 102] - source file fel.asm - page 27 - 7/13/2016 12:29:34


  codepages:
  ----------

STANDARD (0 changed characters)


0.02 seconds assembly time

   1200 lines source file
   1324 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
