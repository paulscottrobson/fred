 AS V1.42 Beta [Bld 102] - source file fel.asm - page 1 - 7/12/2016 22:32:07


       1/       0 :                     ;****************************************************************************************************************
       2/       0 :                     ;                                                        
       3/       0 :                     ;                                                FEL-1 Disassembly
       4/       0 :                     ;                                                =================
       5/       0 :                     ;                                                        
       6/       0 :                     ;     Original version by RCA 1974, from the Billie Jo Call papers from Hagley. Recommented and converted by
       7/       0 :                     ;                                        Paul Robson (paul@robsons.org.uk)
       8/       0 :                     ;                                                        
       9/       0 :                     ;            EF1 is 1 when a keypad byte is available. It is read from INP 0. There is a shift switch.
      10/       0 :                     ;            I think this is set manually. (Implied). Horizontal resolution is set by a toggle switch.
      11/       0 :                     ;                                                        
      12/       0 :                     ;                     EF2 and EF3 are external tests. EF2 detects tape stop. EF4 In ? Error ?
      13/       0 :                     ;                                                        
      14/       0 :                     ;                           Port 1 is a device selector. 1 Keypad, 2 TV, 3 Tape Device
      15/       0 :                     ;                     Port 2 for keypad it is set to 0/1 for TV to 0/3, for Tape $20 is read.
      16/       0 :                     ;                   Port 3 is some flags bit 2 (4) is the audio/tape out and bit 0 (1) is run.
      17/       0 :                     ;                                    Port 4 is the external control register.
      18/       0 :                     ;                                    Port 6 is an extension port (in and out)
      19/       0 :                     ;                                                        
      20/       0 :                     ;      Clock Frequency can be derived from the tone code. In BJC notes 04 is 360us. This is 160 + 40 + 40 *4
      21/       0 :                     ;            cycles. Hence it is clocked at 1Mhz. All the products in the table (kc x us) come to 1000
      22/       0 :                     ;                                                        
      23/       0 :                     ;****************************************************************************************************************
      24/       0 :                     
      25/       0 :                                include felinclude.inc
(1)    1/       0 :                     ;****************************************************************************************************************
(1)    2/       0 :                     ;
(1)    3/       0 :                     ;													1802 Includes
(1)    4/       0 :                     ;
(1)    5/       0 :                     ;****************************************************************************************************************
(1)    6/       0 :                     
(1)    7/       0 :                     	cpu 1802
(1)    8/       0 :                     
(1)    9/       0 : =0H                 r0 = 0 															; register definitions
(1)   10/       0 : =1H                 r1 = 1
(1)   11/       0 : =2H                 r2 = 2
(1)   12/       0 : =3H                 r3 = 3
(1)   13/       0 : =4H                 r4 = 4
(1)   14/       0 : =5H                 r5 = 5
(1)   15/       0 : =6H                 r6 = 6
(1)   16/       0 : =7H                 r7 = 7
(1)   17/       0 : =8H                 r8 = 8
(1)   18/       0 : =9H                 r9 = 9
(1)   19/       0 : =AH                 ra = 10
(1)   20/       0 : =BH                 rb = 11
(1)   21/       0 : =CH                 rc = 12
(1)   22/       0 : =DH                 rd = 13
(1)   23/       0 : =EH                 re = 14
(1)   24/       0 : =FH                 rf = 15
(1)   25/       0 :                     
(1)   26/       0 :                     fel macro 	fw 													; compile FEL-1 instruction in Hi-Low order
(1)   27/       0 :                     	db 	(fw) / 256
(1)   28/       0 :                     	db 	(fw) & 255
(1)   29/       0 :                     	endm
(1)   30/       0 :                     
      26/       0 :                     
      27/       0 : 00                             idl                                                              
      28/       1 : F8 01                          ldi 1                                                            ; Set interrupt, stack
      29/       3 : B1                             phi r1                                                           
      30/       4 : B2                             phi r2                                                           
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 2 - 7/12/2016 22:32:07


      31/       5 : B4                             phi r4                                                           
      32/       6 : B8                             phi r8                                                           
      33/       7 : F8 19                          ldi l0119 & 255                                                  ; R1 = $119 Interrupt routine
      34/       9 : A1                             plo r1                                                           
      35/       A : F8 FF                          ldi 0ffh                                                         ; R2 = $1FF Stack top
      36/       C : A2                             plo r2                                                           
      37/       D : F8 3B                          ldi l013b & 255                                                  
      38/       F : A4                             plo r4                                                           ; R4 = $13B Execute next instruction
      39/      10 : F8 66                          ldi l0166 & 255                                                  
      40/      12 : A8                             plo r8                                                           ; R8 = $166 Call $1nn where nn is next byte
      41/      13 : 90                             ghi r0                                                           
      42/      14 : A5                             plo r5                                                           
      43/      15 : F8 84                          ldi l0084 & 255                                                  ; R5 = $0B4 "Macro PC"
      44/      17 : B5                             phi r5                                                           
      45/      18 : D4                             sep r4                                                           ; go to "Util" in R4
      46/      19 :                     
      47/      19 :                     ;****************************************************************************************************************
      48/      19 :                     ;                                                        
      49/      19 :                     ;                                                7xxx Instructions
      50/      19 :                     ;                                                        
      51/      19 :                     ;****************************************************************************************************************
      52/      19 :                     
      53/      19 : D8                  l0019:     sep r8                                                           ; Fetch A and B from memory
      54/      1A : 73                             db l0273 & 255                                                   
      55/      1B : E6                             sex r6                                                           ; X points to register X
      56/      1C : 45                             lda r5                                                           ; fetch low byte
      57/      1D : A3                             plo r3                                                           ; go there.
      58/      1E :                     ;   
      59/      1E :                     ;   7x1E M(A)->Vx
      60/      1E :                     ;   
      61/      1E : 4A                             lda ra                                                           ; read M(RA)
      62/      1F : 56                             str r6                                                           ; save in X
      63/      20 : D4                             sep r4                                                           
      64/      21 :                     ;   
      65/      21 :                     ;   7x21 M(B)->Vx
      66/      21 :                     ;   
      67/      21 : 4B                             lda rb                                                           ; read M(RB)
      68/      22 : 56                             str r6                                                           ; save in X
      69/      23 : D4                             sep r4                                                           
      70/      24 :                     ;   
      71/      24 :                     ;   7x24 Vx->M(A)
      72/      24 :                     ;   
      73/      24 : 46                             lda r6                                                           ; get Vx
      74/      25 : 5A                             str ra                                                           ; write to M(RA)
      75/      26 : D4                             sep r4                                                           
      76/      27 :                     ;   
      77/      27 :                     ;   7x27 Vx->M(B)
      78/      27 :                     ;   
      79/      27 : 46                             lda r6                                                           ; get Vx
      80/      28 : 5B                             str rb                                                           ; write to M(RB)
      81/      29 : D4                             sep r4                                                           
      82/      2A :                     ;   
      83/      2A :                     ;   7x2A Vx -> A.0
      84/      2A :                     ;   
      85/      2A : F8 11                          ldi 011h                                                         ; point R7 to RA.0
      86/      2C : A7                  l002c:     plo r7                                                           
      87/      2D : 46                             lda r6                                                           ; get Vx
      88/      2E : 57                             str r7                                                           ; write it there.
      89/      2F : D4                             sep r4                                                           
      90/      30 :                     ;   
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 3 - 7/12/2016 22:32:07


      91/      30 :                     ;   7x30 Vx -> A.1
      92/      30 :                     ;   
      93/      30 : F8 10                          ldi 010h                                                         ; RA.1 address
      94/      32 : 30 2C                          br  l002c                                                        
      95/      34 :                     ;   
      96/      34 :                     ;   7x30 Vx -> B.0
      97/      34 :                     ;   
      98/      34 : F8 13                          ldi 013h                                                         ; RB.0 address
      99/      36 : 30 2C                          br  l002c                                                        
     100/      38 :                     ;   
     101/      38 :                     ;   7x38 A.0 -> Vx
     102/      38 :                     ;   
     103/      38 : 8A                             glo ra                                                           ; RA.0 value
     104/      39 : 56                             str r6                                                           ; put in X
     105/      3A : D4                             sep r4                                                           
     106/      3B :                     ;   
     107/      3B :                     ;   7x3B A.1 -> Vx
     108/      3B :                     ;   
     109/      3B : 9A                             ghi ra                                                           ; RA.1 value
     110/      3C : 56                             str r6                                                           ; put in X
     111/      3D : D4                             sep r4                                                           
     112/      3E :                     ;   
     113/      3E :                     ;   7x3E Shift X left 4
     114/      3E :                     ;   
     115/      3E : D8                             sep r8                                                           ; Do Vx << 4
     116/      3F : 4D                             db  l024d & 255                                                  
     117/      40 : D4                             sep r4                                                           
     118/      41 :                     ;   
     119/      41 :                     ;   7x41 Shift X Right 4
     120/      41 :                     ;   
     121/      41 : F0                             ldx                                                              ; Read R(X)
     122/      42 : F6                             shr                                                              
     123/      43 : F6                             shr                                                              
     124/      44 : F6                             shr                                                              
     125/      45 : F6                             shr                                                              
     126/      46 : 56                             str r6                                                           ; write it back
     127/      47 : F6                             shr                                                              
     128/      48 :                     ;   
     129/      48 :                     ;   7x4B Vx Delay (Tape On, Speaker off)
     130/      48 :                     ;   
     131/      48 : E3                             sex r3                                                           ; X = P = R3
     132/      49 : 46                             lda r6                                                           ; read R(X)
     133/      4A : BF                             phi rf                                                           ; put in RF.0
     134/      4B : 63                  l004b:     out 3                                                            ; tape on, speaker on.
     135/      4C : 03                             db 03                                                            
     136/      4D : 2F                             dec rf                                                           ; dec counter
     137/      4E : 9F                             ghi rf                                                           ; timed out
     138/      4F : 3A 4B                          bnz l004b                                                        ; keep going.
     139/      51 : D4                             sep r4                                                           
     140/      52 :                     ;   
     141/      52 :                     ;   7x52 Convert Vx to 3 digit decimal at A,A+1,A+2
     142/      52 :                     ;   
     143/      52 : F0                             ldx                                                              ; get R(X)
     144/      53 : BF                             phi rf                                                           ; save in RF.1
     145/      54 : F8 14                          ldi 14h                                                          ; point R7 to the 100,10,1
     146/      56 : A7                             plo r7                                                           
     147/      57 : 2A                             dec ra                                                           ; predec RA
     148/      58 : 1A                  l0058:     inc ra                                                           ; A to next cell.
     149/      59 : 93                             ghi r3                                                           ; D = 0
     150/      5A : 5A                             str ra                                                           ; clear counter
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 4 - 7/12/2016 22:32:07


     151/      5B : 47                  l005b:     lda r7                                                           ; read divisor
     152/      5C : 27                             dec r7                                                           ; unpick it
     153/      5D : F5                             sd                                                               ; subtract from R(X)
     154/      5E : 3B 68                          bnf l0068                                                        ; if no borrow then division complete
     155/      60 : 56                             str r6                                                           ; write it back to R(X)
     156/      61 : 4A                             lda ra                                                           ; read counter of divisions
     157/      62 : 2A                             dec ra                                                           ; undo inc
     158/      63 : FC 01                          adi 01                                                           ; inc counter
     159/      65 : 5A                             str ra                                                           ; write back
     160/      66 : 30 5B                          br  l005b                                                        ; try to deduct it again.
     161/      68 : 47                  l0068:     lda r7                                                           ; get R7 - divider just done and inc R7 to next
     162/      69 : F6                             shr                                                              ; shift it right
     163/      6A : 3B 58                          bnf l0058                                                        ; until found the 1, i.e. have done 1
     164/      6C : 9F                             ghi rf                                                           ; fix up R6 back
     165/      6D : 56                             str r6                                                           
     166/      6E : D4                             sep r4                                                           
     167/      6F :                     ;   
     168/      6F :                     ;   7F6F INC A. Must use 7F6F so R6 points to VF, the byte before A
     169/      6F :                     ;   
     170/      6F : 1A                             inc ra                                                           ; increment RA
     171/      70 : 16                             inc r6                                                           ; R6 now points to RA
     172/      71 : 9A                             ghi ra                                                           ; write it back.
     173/      72 : 56                             str r6                                                           
     174/      73 : 16                             inc r6                                                           
     175/      74 : 8A                             glo ra                                                           
     176/      75 : 56                             str r6                                                           
     177/      76 : D4                             sep r4                                                           
     178/      77 : 00                             db 00                                                            
     179/      78 :                     
     180/      78 :                     ;****************************************************************************************************************
     181/      78 :                     ;                                                        
     182/      78 :                     ;                                              Clear Screen Routine
     183/      78 :                     ;                                                        
     184/      78 :                     ;****************************************************************************************************************
     185/      78 :                     
     186/      78 : 93                             ghi r3                                                           ; RA = $800 (R3.1 = 0)
     187/      79 : AA                             plo ra                                                           
     188/      7A : F8 08                          ldi 8                                                            
     189/      7C : BA                             phi ra                                                           
     190/      7D : 2A                  l007d:     dec ra                                                           ; dec RA
     191/      7E : 93                             ghi r3                                                           ; D = 0
     192/      7F : 5A                             str ra                                                           ; clear screen space
     193/      80 : 8A                             glo ra                                                           ; check RA.0
     194/      81 : 3A 7D                          bnz l007d                                                        ; go back if not finished
     195/      83 : D4                             sep r4                                                           ; next instruction.
     196/      84 :                     
     197/      84 :                     ;****************************************************************************************************************
     198/      84 :                     ;                                                        
     199/      84 :                     ;                                  This is the FEL-1 Boot Code / Micro monitor.
     200/      84 :                     ;                                                        
     201/      84 :                     ;****************************************************************************************************************
     202/      84 :                     
     203/      84 : (MACRO)             l0084:     fel  06000h                                                      ; stop tape
     203/      84 : 60                          db      (06000H) / 256
     203/      85 : 00                          db      (06000H) & 255
     204/      86 : (MACRO)                        fel  0022fh                                                      ; copy registers to stack space.
     204/      86 : 02                          db      (0022FH) / 256
     204/      87 : 2F                          db      (0022FH) & 255
     205/      88 :                     ;   
     206/      88 :                     ;   Read key 0 for Run, C for Write, A for Read Mem, B for Write Mem
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 5 - 7/12/2016 22:32:07


     207/      88 :                     ;   
     208/      88 : (MACRO)                        fel  0e17ah                                                      ; read Byte into V1
     208/      88 : E1                          db      (0E17AH) / 256
     208/      89 : 7A                          db      (0E17AH) & 255
     209/      8A : (MACRO)                        fel  03100h                                                      ; skip next instruction if not 00
     209/      8A : 31                          db      (03100H) / 256
     209/      8B : 00                          db      (03100H) & 255
     210/      8C : (MACRO)                        fel  0f400h                                                      ; if was 00, then run program from 400
     210/      8C : F4                          db      (0F400H) / 256
     210/      8D : 00                          db      (0F400H) & 255
     211/      8E : (MACRO)                        fel  0310ch                                                      ; if was 0C, then go to write code
     211/      8E : 31                          db      (0310CH) / 256
     211/      8F : 0C                          db      (0310CH) & 255
     212/      90 : (MACRO)                        fel  0f0cah                                                      
     212/      90 : F0                          db      (0F0CAH) / 256
     212/      91 : CA                          db      (0F0CAH) & 255
     213/      92 :                     ;   
     214/      92 :                     ;   Read three keystrokes into A
     215/      92 :                     ;   
     216/      92 : (MACRO)                        fel  0025ch                                                      ; turn television on.
     216/      92 : 02                          db      (0025CH) / 256
     216/      93 : 5C                          db      (0025CH) & 255
     217/      94 : (MACRO)                        fel  0007bh                                                      ; clear screen memory
     217/      94 : 00                          db      (0007BH) / 256
     217/      95 : 7B                          db      (0007BH) & 255
     218/      96 : (MACRO)                        fel  0e27ah                                                      ; read byte to V2 (high address nibble)
     218/      96 : E2                          db      (0E27AH) / 256
     218/      97 : 7A                          db      (0E27AH) & 255
     219/      98 : (MACRO)                        fel  07230h                                                      ; write to MSB of A
     219/      98 : 72                          db      (07230H) / 256
     219/      99 : 30                          db      (07230H) & 255
     220/      9A : (MACRO)                        fel  0e27ah                                                      ; read byte to V2 (middle address nibble)
     220/      9A : E2                          db      (0E27AH) / 256
     220/      9B : 7A                          db      (0E27AH) & 255
     221/      9C : (MACRO)                        fel  0e37ah                                                      ; read byte to V3 (low address nibble)
     221/      9C : E3                          db      (0E37AH) / 256
     221/      9D : 7A                          db      (0E37AH) & 255
     222/      9E : (MACRO)                        fel  010e2h                                                      ; call pack V2/V3 to V2
     222/      9E : 10                          db      (010E2H) / 256
     222/      9F : E2                          db      (010E2H) & 255
     223/      A0 : (MACRO)                        fel  0722ah                                                      ; write to LSB of A
     223/      A0 : 72                          db      (0722AH) / 256
     223/      A1 : 2A                          db      (0722AH) & 255
     224/      A2 : (MACRO)                        fel  02900h                                                      ; Clear V9
     224/      A2 : 29                          db      (02900H) / 256
     224/      A3 : 00                          db      (02900H) & 255
     225/      A4 :                     ;   
     226/      A4 :                     ;   Display Address
     227/      A4 :                     ;   
     228/      A4 : (MACRO)                        fel  0723bh                                                      ; MSB of A to V2
     228/      A4 : 72                          db      (0723BH) / 256
     228/      A5 : 3B                          db      (0723BH) & 255
     229/      A6 : (MACRO)                        fel  02409h                                                      ; Set V4 = (1,1)
     229/      A6 : 24                          db      (02409H) / 256
     229/      A7 : 09                          db      (02409H) & 255
     230/      A8 : (MACRO)                        fel  010e8h                                                      ; unpack and show V2
     230/      A8 : 10                          db      (010E8H) / 256
     230/      A9 : E8                          db      (010E8H) & 255
     231/      AA : (MACRO)                        fel  07238h                                                      ; LSB of A to V2
     231/      AA : 72                          db      (07238H) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 6 - 7/12/2016 22:32:07


     231/      AB : 38                          db      (07238H) & 255
     232/      AC : (MACRO)                        fel  0240bh                                                      ; Set V4 = (3,1)
     232/      AC : 24                          db      (0240BH) / 256
     232/      AD : 0B                          db      (0240BH) & 255
     233/      AE : (MACRO)                        fel  010e8h                                                      ; unpack and show V2
     233/      AE : 10                          db      (010E8H) / 256
     233/      AF : E8                          db      (010E8H) & 255
     234/      B0 :                     ;   
     235/      B0 :                     ;   Display Data
     236/      B0 :                     ;   
     237/      B0 : (MACRO)                        fel  0721eh                                                      ; read contents of Memory(A) to V2
     237/      B0 : 72                          db      (0721EH) / 256
     237/      B1 : 1E                          db      (0721EH) & 255
     238/      B2 : (MACRO)                        fel  02416h                                                      ; Set V4 = (6,2)
     238/      B2 : 24                          db      (02416H) / 256
     238/      B3 : 16                          db      (02416H) & 255
     239/      B4 : (MACRO)                        fel  010ebh                                                      ; unpack and show V2
     239/      B4 : 10                          db      (010EBH) / 256
     239/      B5 : EB                          db      (010EBH) & 255
     240/      B6 :                     ;   
     241/      B6 :                     ;   First time around, increment A to point to next cell, second time around go back to the display address code.
     242/      B6 :                     ;   
     243/      B6 : (MACRO)                        fel  03901h                                                      ; increment A if V9 != 0 (not first time)
     243/      B6 : 39                          db      (03901H) / 256
     243/      B7 : 01                          db      (03901H) & 255
     244/      B8 : (MACRO)                        fel  07f6fh                                                      
     244/      B8 : 7F                          db      (07F6FH) / 256
     244/      B9 : 6F                          db      (07F6FH) & 255
     245/      BA : (MACRO)                        fel  0e27ah                                                      ; get hex key (upper nibble)
     245/      BA : E2                          db      (0E27AH) / 256
     245/      BB : 7A                          db      (0E27AH) & 255
     246/      BC : (MACRO)                        fel  02901h                                                      ; set V9 = 1 so increments next time
     246/      BC : 29                          db      (02901H) / 256
     246/      BD : 01                          db      (02901H) & 255
     247/      BE : (MACRO)                        fel  0310ah                                                      ; been round twice ?
     247/      BE : 31                          db      (0310AH) / 256
     247/      BF : 0A                          db      (0310AH) & 255
     248/      C0 : (MACRO)                        fel  0f0a4h                                                      ; if command was A (read) do next w/o update
     248/      C0 : F0                          db      (0F0A4H) / 256
     248/      C1 : A4                          db      (0F0A4H) & 255
     249/      C2 : (MACRO)                        fel  0e37ah                                                      ; get the low nibble
     249/      C2 : E3                          db      (0E37AH) / 256
     249/      C3 : 7A                          db      (0E37AH) & 255
     250/      C4 : (MACRO)                        fel  010e2h                                                      ; call pack V2/V3 to V2
     250/      C4 : 10                          db      (010E2H) / 256
     250/      C5 : E2                          db      (010E2H) & 255
     251/      C6 : (MACRO)                        fel  07224h                                                      ; store V(2) at M->A (e.g. new address)
     251/      C6 : 72                          db      (07224H) / 256
     251/      C7 : 24                          db      (07224H) & 255
     252/      C8 : (MACRO)                        fel  0f0a4h                                                      ; redisplay address and data.
     252/      C8 : F0                          db      (0F0A4H) / 256
     252/      C9 : A4                          db      (0F0A4H) & 255
     253/      CA :                     ;   
     254/      CA :                     ;   Write code to tape
     255/      CA :                     ;   
     256/      CA : (MACRO)                        fel  00268h                                                      ; disable hex keyboard input
     256/      CA : 02                          db      (00268H) / 256
     256/      CB : 68                          db      (00268H) & 255
     257/      CC : (MACRO)                        fel  021ffh                                                      ; set V1 = $FF (5 sec approx)
     257/      CC : 21                          db      (021FFH) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 7 - 7/12/2016 22:32:07


     257/      CD : FF                          db      (021FFH) & 255
     258/      CE : (MACRO)                        fel  07148h                                                      ; delay of this length so stabilises
     258/      CE : 71                          db      (07148H) / 256
     258/      CF : 48                          db      (07148H) & 255
     259/      D0 : (MACRO)                        fel  02140h                                                      ; set V1 = $40 (1 sec approx)
     259/      D0 : 21                          db      (02140H) / 256
     259/      D1 : 40                          db      (02140H) & 255
     260/      D2 : (MACRO)                        fel  07148h                                                      ; more delay
     260/      D2 : 71                          db      (07148H) / 256
     260/      D3 : 48                          db      (07148H) & 255
     261/      D4 : (MACRO)                        fel  0d210h                                                      ; tone and delay
     261/      D4 : D2                          db      (0D210H) / 256
     261/      D5 : 10                          db      (0D210H) & 255
     262/      D6 : (MACRO)                        fel  07148h                                                      ; delay with that tone (start tone ?)
     262/      D6 : 71                          db      (07148H) / 256
     262/      D7 : 48                          db      (07148H) & 255
     263/      D8 : (MACRO)                        fel  0a000h                                                      ; A = 0
     263/      D8 : A0                          db      (0A000H) / 256
     263/      D9 : 00                          db      (0A000H) & 255
     264/      DA : (MACRO)                        fel  0f0dch                                                      ; (patched out)
     264/      DA : F0                          db      (0F0DCH) / 256
     264/      DB : DC                          db      (0F0DCH) & 255
     265/      DC : (MACRO)                        fel  0e3a0h                                                      ; write tape M(A) to end
     265/      DC : E3                          db      (0E3A0H) / 256
     265/      DD : A0                          db      (0E3A0H) & 255
     266/      DE : (MACRO)                        fel  0d210h                                                      ; tone and delay
     266/      DE : D2                          db      (0D210H) / 256
     266/      DF : 10                          db      (0D210H) & 255
     267/      E0 : (MACRO)                        fel  0f0e0h                                                      ; stop
     267/      E0 : F0                          db      (0F0E0H) / 256
     267/      E1 : E0                          db      (0F0E0H) & 255
     268/      E2 :                     ;   
     269/      E2 :                     ;   Pack V2/V3 nibbles into a single byte (subroutine)
     270/      E2 :                     ;   
     271/      E2 : (MACRO)                        fel  0723eh                                                      ; Shift V2 left 4 bits
     271/      E2 : 72                          db      (0723EH) / 256
     271/      E3 : 3E                          db      (0723EH) & 255
     272/      E4 : (MACRO)                        fel  08231h                                                      ; V2 = V2 or V3
     272/      E4 : 82                          db      (08231H) / 256
     272/      E5 : 31                          db      (08231H) & 255
     273/      E6 : (MACRO)                        fel  0026eh                                                      ; return
     273/      E6 : 02                          db      (0026EH) / 256
     273/      E7 : 6E                          db      (0026EH) & 255
     274/      E8 :                     ;   
     275/      E8 :                     ;   Unpack V2 into 2 digits and display at V4 (subroutine)
     276/      E8 :                     ;   
     277/      E8 : (MACRO)                        fel  0b300h                                                      ; point B to $300
     277/      E8 : B3                          db      (0B300H) / 256
     277/      E9 : 00                          db      (0B300H) & 255
     278/      EA : (MACRO)                        fel  0230fh                                                      ; V3 = 0Fh
     278/      EA : 23                          db      (0230FH) / 256
     278/      EB : 0F                          db      (0230FH) & 255
     279/      EC : (MACRO)                        fel  08322h                                                      ; And out lowest nibble into V3
     279/      EC : 83                          db      (08322H) / 256
     279/      ED : 22                          db      (08322H) & 255
     280/      EE : (MACRO)                        fel  07241h                                                      ; Shift V2 right 4, now has highest nibble
     280/      EE : 72                          db      (07241H) / 256
     280/      EF : 41                          db      (07241H) & 255
     281/      F0 : (MACRO)                        fel  07334h                                                      ; B = $03<low>
     281/      F0 : 73                          db      (07334H) / 256
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 8 - 7/12/2016 22:32:07


     281/      F1 : 34                          db      (07334H) & 255
     282/      F2 : (MACRO)                        fel  07321h                                                      ; Read Mem(B) -> V3, addr of gfx data
     282/      F2 : 73                          db      (07321H) / 256
     282/      F3 : 21                          db      (07321H) & 255
     283/      F4 : (MACRO)                        fel  09345h                                                      ; Draw V3 pattern at cell V4
     283/      F4 : 93                          db      (09345H) / 256
     283/      F5 : 45                          db      (09345H) & 255
     284/      F6 : (MACRO)                        fel  054ffh                                                      ; point to previous cell
     284/      F6 : 54                          db      (054FFH) / 256
     284/      F7 : FF                          db      (054FFH) & 255
     285/      F8 : (MACRO)                        fel  07234h                                                      ; B = $03<high>
     285/      F8 : 72                          db      (07234H) / 256
     285/      F9 : 34                          db      (07234H) & 255
     286/      FA : (MACRO)                        fel  07221h                                                      ; Read Mem(B) -> V2, addr of gfx data
     286/      FA : 72                          db      (07221H) / 256
     286/      FB : 21                          db      (07221H) & 255
     287/      FC : (MACRO)                        fel  09245h                                                      ; Draw V2 pattern at cell V4
     287/      FC : 92                          db      (09245H) / 256
     287/      FD : 45                          db      (09245H) & 255
     288/      FE : (MACRO)                        fel  0026eh                                                      ; return
     288/      FE : 02                          db      (0026EH) / 256
     288/      FF : 6E                          db      (0026EH) & 255
     289/     100 :                     
     290/     100 :                     ;****************************************************************************************************************
     291/     100 :                     ;                                                        
     292/     100 :                     ;                                       Register Area and Conversion table
     293/     100 :                     ;                                                        
     294/     100 :                     ;****************************************************************************************************************
     295/     100 :                     
     296/     100 : 00 00 00 00                    db 0,0,0,0                                                       ; V0-VF
     297/     104 : 00 00 00 00                    db 0,0,0,0                                                       
     298/     108 : 00 00 00 00                    db 0,0,0,0                                                       
     299/     10C : 00 00 00 00                    db 0,0,0,0                                                       
     300/     110 : 00 00                          db 0,0                                                           ; A
     301/     112 : 00 00                          db 0,0                                                           ; B
     302/     114 :                     
     303/     114 : 64                             db 100                                                           ; dividers.
     304/     115 : 0A                             db 10                                                            
     305/     116 : 01                             db 1                                                             
     306/     117 :                     
     307/     117 :                     ;****************************************************************************************************************
     308/     117 :                     ;                                                        
     309/     117 :                     ;                                               Interrupt Routine.
     310/     117 :                     ;                   Sets up R0 to point to display at $700 and decrements VD,VE,VF if non-zero.
     311/     117 :                     ;                                                        
     312/     117 :                     ;****************************************************************************************************************
     313/     117 :                     
     314/     117 : 42                  l0117:     lda r2                                                           ; pop D off the stack
     315/     118 : 70                             ret                                                              ; return re-enabling interrupts.
     316/     119 : 22                  l0119:     dec r2                                                           ; save T on Stack
     317/     11A : 78                             sav                                                              
     318/     11B : 22                             dec r2                                                           ; save D on Stack
     319/     11C : 52                             str r2                                                           ; Save on stack.
     320/     11D :                     
     321/     11D : F8 07                          ldi 7                                                            ; set R0 (display pointer) to $700
     322/     11F : B0                             phi r0                                                           
     323/     120 : F8 00                          ldi 0                                                            
     324/     122 : A0                             plo r0                                                           
     325/     123 :                     
     326/     123 : 19                             inc r9                                                           ; increment R9 (timer ?)
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 9 - 7/12/2016 22:32:07


     327/     124 :                     
     328/     124 : 86                             glo r6                                                           ; get R6
     329/     125 : BD                             phi rd                                                           ; save in RD.1
     330/     126 :                     
     331/     126 : F8 0D                          ldi 0dh                                                          
     332/     128 : A6                             plo r6                                                           
     333/     129 : 46                  l0129:     lda r6                                                           ; read R6 (VD Timer first time around)
     334/     12A : 26                             dec r6                                                           ; fix up R6
     335/     12B : 32 31                          bz  l0131                                                        
     336/     12D : AD                             plo rd                                                           ; save in RD.0
     337/     12E : 2D                             dec rd                                                           ; decrement it (so we don't change DF)
     338/     12F : 8D                             glo rd                                                           ; recover it
     339/     130 : 56                             str r6                                                           ; save timer now updated
     340/     131 : 16                  l0131:     inc r6                                                           ; point to next timer
     341/     132 : 86                             glo r6                                                           ; get low byte
     342/     133 : FB 10                          xri 10h                                                          ; done all timers
     343/     135 : 3A 29                          bnz l0129                                                        ; if not, go back round again.
     344/     137 : 9D                             ghi rd                                                           ; get RD.1, fix R6 back up again.
     345/     138 : A6                             plo r6                                                           
     346/     139 : 30 17                          br  l0117                                                        ; and go back to exit the routine.
     347/     13B :                     
     348/     13B :                     ;****************************************************************************************************************
     349/     13B :                     ;                                                        
     350/     13B :                     ;            Main execution loop, run in R4. Sets up R6 (X) R7 (Y) and calls code from table at 01C0h
     351/     13B :                     ;                                                        
     352/     13B :                     ;****************************************************************************************************************
     353/     13B :                     
     354/     13B : 94                  l013b:     ghi r4                                                           ; D = 1
     355/     13C : B6                             phi r6                                                           ; Set R6,R7,RC High to Page 1.
     356/     13D : B7                             phi r7                                                           
     357/     13E : BC                             phi rc                                                           
     358/     13F :                     
     359/     13F : 45                             lda r5                                                           ; Read R5 (instruction High)
     360/     140 : AC                             plo rc                                                           ; Save in RC.0
     361/     141 : FA 0F                          ani 0fh                                                          ; get the X register number
     362/     143 : A6                             plo r6                                                           ; R6 now points to Register X.
     363/     144 :                     
     364/     144 : 8C                             glo rc                                                           ; get the instruction High
     365/     145 : F6                             shr                                                              ; shift right four times.
     366/     146 : F6                             shr                                                              
     367/     147 : F6                             shr                                                              
     368/     148 : F6                             shr                                                              ; instruction code in D
     369/     149 : 32 60                          bz  l0160                                                        ; if zero, its a machine language
     370/     14B : F9 C0                          ori 0c0h                                                         ; OR with $C0
     371/     14D : AC                             plo rc                                                           ; Put in RC.0  now points to vector table
     372/     14E :                     
     373/     14E : 45                             lda r5                                                           ; Read low byte of instruction
     374/     14F : 25                             dec r5                                                           ; Point it back to R5
     375/     150 : F6                             shr                                                              ; shift right four times
     376/     151 : F6                             shr                                                              
     377/     152 : F6                             shr                                                              
     378/     153 : F6                             shr                                                              ; D now contains the Y register number
     379/     154 : A7                             plo r7                                                           ; R7 now points to Register Y.
     380/     155 :                     
     381/     155 : 4C                             lda rc                                                           ; Read High byte of program
     382/     156 : B3                             phi r3                                                           ; save in R3.1
     383/     157 : 8C                             glo rc                                                           ; get low byte of RC
     384/     158 : FC 0F                          adi 0fh                                                          ; point to low address (+1 already)
     385/     15A : AC                             plo rc                                                           ; write it back
     386/     15B : 4C                             lda rc                                                           ; get low byte of address
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 10 - 7/12/2016 22:32:07


     387/     15C : A3                  l015c:     plo r3                                                           ; save in R3.0, now has code address
     388/     15D : D3                             sep r3                                                           ; and call it
     389/     15E : 30 3B                          br  l013b                                                        ; make re-entrant
     390/     160 :                     
     391/     160 :                     ;****************************************************************************************************************
     392/     160 :                     ;                                                        
     393/     160 :                     ;                                       0aaa run machine code at aaa in P3.
     394/     160 :                     ;                                                        
     395/     160 :                     ;****************************************************************************************************************
     396/     160 :                     
     397/     160 : 96                  l0160:     ghi r6                                                           ; get R6.1 (1)
     398/     161 : B3                             phi r3                                                           ; put in R3.1
     399/     162 : 45                             lda r5                                                           ; read instruction second byte.
     400/     163 : 30 5C                          br l015c                                                         
     401/     165 :                     ;   
     402/     165 :                     ;   R8 points here. Calls the $02 <next byte> running in RC.
     403/     165 :                     ;   
     404/     165 : DC                  l0165:     sep rc                                                           ; return.
     405/     166 : 43                  l0166:     lda r3                                                           ; read next byte in code
     406/     167 : AC                             plo rc                                                           ; save in RC.0
     407/     168 : F8 02                          ldi 02                                                           ; put 2xx in RC
     408/     16A : BC                             phi rc                                                           
     409/     16B : 30 65               l016b:     br  l0165                                                        ; and call it, making it re-entrant
     410/     16D :                     ;   
     411/     16D :                     ;   R8 routines to return RF.1, RF.0.
     412/     16D :                     ;   
     413/     16D : DC                  l016d:     sep rc                                                           ; get RF.1
     414/     16E : 9F                  l016e:     ghi rf                                                           
     415/     16F : 30 6D                          br  l016d                                                        
     416/     171 :                     ;   
     417/     171 : DC                  l0171:     sep rc                                                           ; get RF.0
     418/     172 : 8F                  l0172:     glo rf                                                           
     419/     173 : 30 71                          br  l0171                                                        
     420/     175 :                     
     421/     175 :                     ;****************************************************************************************************************
     422/     175 :                     ;                                                        
     423/     175 :                     ;                                     Exaa - execute code at 01aa with X = 6
     424/     175 :                     ;                                                        
     425/     175 :                     ;****************************************************************************************************************
     426/     175 :                     
     427/     175 : D8                  l0175:     sep r8                                                           ; load A and B into RA and RB
     428/     176 : 73                             db  l0273 & 255                                                  
     429/     177 : E6                             sex r6                                                           ; index is Vx
     430/     178 : 45                             lda r5                                                           ; get the 2nd instruction byte
     431/     179 : A3                             plo r3                                                           ; and go there, jump indirect.
     432/     17A :                     ;   
     433/     17A :                     ;   Ex7A . Hex keypad on, wait for byte
     434/     17A :                     ;   
     435/     17A : D8                             sep r8                                                           ; call hex keypad on at $0246
     436/     17B : 46                             db l0246 & 255                                                   
     437/     17C : 3C 7C               l017c:     bn1 l017c                                                        ; wait for EF1 (byte ready)
     438/     17E : 68                  l017e:     db  68h                                                          ; read to M(X) (AS Cannot assemble INP0)
     439/     17F : D4                             sep r4                                                           
     440/     180 :                     ;   
     441/     180 :                     ;   Ex80 . Hex keypad on, byte ready input else skip
     442/     180 :                     ;   
     443/     180 : D8                             sep r8                                                           ; call hex keypad on at $0246
     444/     181 : 46                             db l0246 & 255                                                   
     445/     182 : 34 7E                          b1 l017e                                                         ; if byte ready get it.
     446/     184 : 15                  l0184:     inc r5                                                           ; skip instruction
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 11 - 7/12/2016 22:32:07


     447/     185 : 15                  l0185:     inc r5                                                           
     448/     186 : D4                             sep r4                                                           
     449/     187 :                     ;   
     450/     187 :                     ;   Ex87 - EF2 Skip
     451/     187 :                     ;   
     452/     187 : 35 84                          b2 l0184                                                         ; skip if  EF2
     453/     189 : D4                             sep r4                                                           
     454/     18A :                     ;   
     455/     18A :                     ;   Ex8A - EF3 Skip
     456/     18A :                     ;   
     457/     18A : 36 84                          b3 l0184                                                         ; skip if EF3
     458/     18C : D4                             sep r4                                                           
     459/     18D :                     ;   
     460/     18D :                     ;   Ex8D - Ext Bus to Vx
     461/     18D :                     ;   
     462/     18D : 6E                             inp 6                                                            ; read port 6 input.
     463/     18E : D4                             sep r4                                                           
     464/     18F :                     ;   
     465/     18F :                     ;   Ex8F - Vx to Ext Bus
     466/     18F :                     ;   
     467/     18F : 66                             out 6                                                            ; out to port 6
     468/     190 : D4                             sep r4                                                           
     469/     191 :                     ;   
     470/     191 :                     ;   Ex91 - Write Vx to External Control Register
     471/     191 :                     ;   
     472/     191 : 64                             out 4                                                            ; external control register
     473/     192 : D4                             sep r4                                                           
     474/     193 :                     ;   
     475/     193 :                     ;   E093 - Read tape -> M(A) concurrent using DMA Off. Need to turn TV off and Start tape before.
     476/     193 :                     ;   to check tape end read check EF2.
     477/     193 :                     ;   
     478/     193 : 9A                             ghi ra                                                           ; put RA in R0
     479/     194 : B0                             phi r0                                                           
     480/     195 : 8A                             glo ra                                                           
     481/     196 : A0                             plo r0                                                           
     482/     197 : E3                             sex r3                                                           ; X = P = 3
     483/     198 : 61                             out 1                                                            ; select tape
     484/     199 : 03                             db 03                                                            
     485/     19A : 62                             out 2                                                            ; tape read
     486/     19B : 20                             db 20h                                                           
     487/     19C : D4                             sep r4                                                           
     488/     19D :                     ;   
     489/     19D :                     ;   R1(0)  -> Vx
     490/     19D :                     ;   
     491/     19D : 90                             ghi r0                                                           
     492/     19E : 56                             str r6                                                           
     493/     19F : D4                             sep r4                                                           
     494/     1A0 :                     ;   
     495/     1A0 :                     ;   E3A0 - Write tape from M(A) to M(06FF). Need to turn TV off and start tape before.
     496/     1A0 :                     ;   
     497/     1A0 : 86                             glo r6                                                           ; read 3  (why E3A0)
     498/     1A1 : BE                             phi re                                                           
     499/     1A2 : 93                  l01a2:     ghi r3                                                           ; get R3.1 which is 1 (we are in R3)
     500/     1A3 : F6                             shr                                                              ; set DF = 1 D = 0. DF set for writing start
     501/     1A4 : AB                             plo rb                                                           ; save in RB.0 (parity)
     502/     1A5 : F8 08                          ldi 8                                                            ; bits to do.
     503/     1A7 : AE                             plo re                                                           ; save in RE.0
     504/     1A8 : 4A                             lda ra                                                           ; read next byte
     505/     1A9 : BB                             phi rb                                                           ; save in RB.0
     506/     1AA : D8                             sep r8                                                           ; write start bit
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 12 - 7/12/2016 22:32:07


     507/     1AB : 85                             db  l0285 & 255                                                  
     508/     1AC : 9B                  l01ac:     ghi rb                                                           ; get the byte value
     509/     1AD : F6                             shr                                                              ; put LSB in DF
     510/     1AE : BB                             phi rb                                                           ; write it back
     511/     1AF : DC                             sep rc                                                           ; write out DF 0/1.
     512/     1B0 : 2E                             dec re                                                           ; decrement bit counter
     513/     1B1 : 8E                             glo re                                                           ; if non zero go back and do next bit.
     514/     1B2 : 3A AC                          bnz l01ac                                                        
     515/     1B4 : 8B                             glo rb                                                           ; get the parity count
     516/     1B5 : F6                             shr                                                              ; shift into DF
     517/     1B6 : DC                             sep rc                                                           ; write that parity bit out
     518/     1B7 : 8A                             glo ra                                                           ; check done whole page
     519/     1B8 : 3A A2                          bnz l01a2                                                        ; if not keep going
     520/     1BA : 9A                             ghi ra                                                           ; done to $0700 ($06FF last)
     521/     1BB : FB 07                          xri 7                                                            ; (700 is video ram)
     522/     1BD : 3A A2                          bnz l01a2                                                        ; if not keep going
     523/     1BF : D4                             sep r4                                                           
     524/     1C0 :                     
     525/     1C0 :                     ;****************************************************************************************************************
     526/     1C0 :                     ;                                                        
     527/     1C0 :                     ;                                            Instruction vector tables
     528/     1C0 :                     ;                                                        
     529/     1C0 :                     ;****************************************************************************************************************
     530/     1C0 :                     
     531/     1C0 : 00                  l01c0:     db  0                                                            ; 0xxx not decoded here
     532/     1C1 : 02                             db  l020d / 256                                                  ; 1mmm Do program at mmm (subroutine call)
     533/     1C2 : 02                             db  l0281 / 256                                                  ; 2xkk Load kk into Vx
     534/     1C3 : 02                             db  l0223 / 256                                                  ; 3xkk Skip if Vx != kk
     535/     1C4 : 02                             db  l02ca / 256                                                  ; 4xkk Vx = Random Number & kk
     536/     1C5 : 02                             db  l021a / 256                                                  ; 5xkk Vx = Vx + kk,skip if vx = 0
     537/     1C6 : 02                             db  l0258 / 256                                                  ; 6xxx Assorted
     538/     1C7 : 00                             db  l0019 / 256                                                  ; 7xnn Assorted
     539/     1C8 : 02                             db  l0299 / 256                                                  ; 8xyf Arithmetic
     540/     1C9 : 02                             db  l02dd / 256                                                  ; 9xys Display pattern
     541/     1CA : 02                             db  l0200 / 256                                                  ; Ammm Load A immediate
     542/     1CB : 02                             db  l0209 / 256                                                  ; Bmmm Load B immediate
     543/     1CC : 02                             db  l022b / 256                                                  ; Cxy0 Skip if vx != vy
     544/     1CD : 02                             db  l02be / 256                                                  ; Dxy0 Vx Tone, Vy Delay (Tape on spk off)
     545/     1CE : 01                             db  l0175 / 256                                                  ; Exxx Assorted
     546/     1CF : 02                             db  l0215 / 256                                                  ; Fmmm Jump to mmm
     547/     1D0 :                     
     548/     1D0 : 00                             db  0                                                            ; 0aaa is not dispatched this way.
     549/     1D1 :                     
     550/     1D1 : 0D                             db  l020d & 255                                                  ; instruction tables (low address)
     551/     1D2 : 81                             db  l0281 & 255                                                  
     552/     1D3 : 23                             db  l0223 & 255                                                  
     553/     1D4 : CA                             db  l02ca & 255                                                  
     554/     1D5 : 1A                             db  l021a & 255                                                  
     555/     1D6 : 58                             db  l0258 & 255                                                  
     556/     1D7 : 19                             db  l0019 & 255                                                  
     557/     1D8 : 99                             db  l0299 & 255                                                  
     558/     1D9 : DD                             db  l02dd & 255                                                  
     559/     1DA : 00                             db  l0200 & 255                                                  
     560/     1DB : 09                             db  l0209 & 255                                                  
     561/     1DC : 2B                             db  l022b & 255                                                  
     562/     1DD : BE                             db  l02be & 255                                                  
     563/     1DE : 75                             db  l0175 & 255                                                  
     564/     1DF : 15                             db  l0215 & 255                                                  
     565/     1E0 :                     
     566/     1E0 : 00 00 00 00                    db  0,0,0,0                                                      ; stack space
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 13 - 7/12/2016 22:32:07


     567/     1E4 : 00 00 00 00                    db  0,0,0,0                                                      
     568/     1E8 : 00 00 00 00                    db  0,0,0,0                                                      
     569/     1EC : 00 00 00 00                    db  0,0,0,0                                                      
     570/     1F0 : 00 00 00 00                    db  0,0,0,0                                                      
     571/     1F4 : 00 00 00 00                    db  0,0,0,0                                                      
     572/     1F8 : 00 00 00 00                    db  0,0,0,0                                                      
     573/     1FC : 00 00 00 00                    db  0,0,0,0                                                      
     574/     200 :                     
     575/     200 :                     ;****************************************************************************************************************
     576/     200 :                     ;                                                        
     577/     200 :                     ;                                              Ammm  Load A with mmm
     578/     200 :                     ;                                                        
     579/     200 :                     ;****************************************************************************************************************
     580/     200 :                     
     581/     200 : F8 10               l0200:     ldi 10h                                                          ; point R7 to A
     582/     202 : A7                  l0202:     plo r7                                                           
     583/     203 : 86                             glo r6                                                           ; get X address $10X so its $0X
     584/     204 : 57                             str r7                                                           ; write to A high and point to low
     585/     205 : 17                             inc r7                                                           
     586/     206 : 45                             lda r5                                                           ; get second byte of instruction
     587/     207 : 57                             str r7                                                           ; write to low byte
     588/     208 : D4                             sep r4                                                           
     589/     209 :                     
     590/     209 :                     ;****************************************************************************************************************
     591/     209 :                     ;                                                        
     592/     209 :                     ;                                              Bmmm  Load B with mmm
     593/     209 :                     ;                                                        
     594/     209 :                     ;****************************************************************************************************************
     595/     209 :                     
     596/     209 : F8 12               l0209:     ldi 12h                                                          ; point R7 to B and reuse code above
     597/     20B : 30 02                          br  l0202                                                        
     598/     20D :                     
     599/     20D :                     ;****************************************************************************************************************
     600/     20D :                     ;                                                        
     601/     20D :                     ;                                      1mmm Do Program (Subroutine) at mmmm
     602/     20D :                     ;                                                        
     603/     20D :                     ;****************************************************************************************************************
     604/     20D :                     
     605/     20D : 15                  l020d:     inc r5                                                           ; r5 point sto next instruction
     606/     20E : 85                             glo r5                                                           ; get return address low
     607/     20F : 22                             dec r2                                                           ; push on stack
     608/     210 : 52                             str r2                                                           
     609/     211 : 95                             ghi r5                                                           ; get return address high
     610/     212 : 22                             dec r2                                                           ; push on stack
     611/     213 : 52                             str r2                                                           
     612/     214 : 25                             dec r5                                                           ; point R5 to low byte and fall through.
     613/     215 :                     
     614/     215 :                     ;****************************************************************************************************************
     615/     215 :                     ;                                                        
     616/     215 :                     ;                                           Fmmm Go to program at mmmm
     617/     215 :                     ;                                                        
     618/     215 :                     ;****************************************************************************************************************
     619/     215 :                     
     620/     215 : 45                  l0215:     lda r5                                                           ; get low byte
     621/     216 : A5                             plo r5                                                           ; put in FEL PC Low
     622/     217 : 86                             glo r6                                                           ; get X address $10X so this is $0X
     623/     218 : B5                             phi r5                                                           ; put in FEL PC hight
     624/     219 : D4                             sep r4                                                           
     625/     21A :                     
     626/     21A :                     ;****************************************************************************************************************
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 14 - 7/12/2016 22:32:07


     627/     21A :                     ;                                                        
     628/     21A :                     ;                                         5xkk add kk to vx, skip if zero
     629/     21A :                     ;                                                        
     630/     21A :                     ;****************************************************************************************************************
     631/     21A :                     
     632/     21A : E6                  l021a:     sex r6                                                           ; access VX
     633/     21B : 45                             lda r5                                                           ; read 2nd byte
     634/     21C : F4                             add                                                              ; add to VX
     635/     21D : 56                             str r6                                                           ; write back
     636/     21E : 32 28                          bz  l0228                                                        ; if zero skip
     637/     220 : D4                             sep r4                                                           
     638/     221 : 15                             inc r5                                                           ; unused
     639/     222 : D4                             sep r4                                                           ; unused
     640/     223 :                     
     641/     223 :                     ;****************************************************************************************************************
     642/     223 :                     ;                                                        
     643/     223 :                     ;                                       3xkk  Skip instruction if vx != kk
     644/     223 :                     ;                                                        
     645/     223 :                     ;****************************************************************************************************************
     646/     223 :                     
     647/     223 : 45                  l0223:     lda r5                                                           ; get kk value
     648/     224 : E6                  l0224:     sex r6                                                           ; R[X] points to Vx
     649/     225 : F3                             xor                                                              ; compare the values
     650/     226 : 32 2A                          bz l022a                                                         ; exit if same
     651/     228 : 15                  l0228:     inc r5                                                           ; skip
     652/     229 : 15                             inc r5                                                           
     653/     22A : D4                  l022a:     sep r4                                                           
     654/     22B :                     
     655/     22B :                     ;****************************************************************************************************************
     656/     22B :                     ;                                                        
     657/     22B :                     ;                                             Cxy0  Skip if vx != vy
     658/     22B :                     ;                                                        
     659/     22B :                     ;****************************************************************************************************************
     660/     22B :                     
     661/     22B : 15                  l022b:     inc r5                                                           ; ignore second byte
     662/     22C : 47                             lda r7                                                           ; read Vy
     663/     22D : 30 24                          br  l0224                                                        ; so now its same as 3xkk
     664/     22F :                     
     665/     22F :                     ;****************************************************************************************************************
     666/     22F :                     ;                                                        
     667/     22F :                     ;                                            Copy Registers onto Stack
     668/     22F :                     ;                                                        
     669/     22F :                     ;****************************************************************************************************************
     670/     22F :                     
     671/     22F : F8 00                          ldi 0                                                            ; point R6 to $100
     672/     231 : A6                             plo r6                                                           
     673/     232 : 96                             ghi r6                                                           ; set R7 to $1E0 stack space bottom.
     674/     233 : B7                             phi r7                                                           
     675/     234 : F8 E0                          ldi 0e0h                                                         
     676/     236 : A7                             plo r7                                                           
     677/     237 : 46                  l0237:     lda r6                                                           ; read variable data
     678/     238 : 57                             str r7                                                           ; copy it out.
     679/     239 : 17                             inc r7                                                           ; next byte
     680/     23A : 87                             glo r7                                                           
     681/     23B : FB F4                          xri 0f4h                                                         ; copied all 20 bytes of data ?
     682/     23D : 3A 37                          bnz l0237                                                        
     683/     23F : D4                             sep r4                                                           
     684/     240 :                     
     685/     240 :                     ;****************************************************************************************************************
     686/     240 :                     ;                                                        
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 15 - 7/12/2016 22:32:07


     687/     240 :                     ;                                            Turn the television off.
     688/     240 :                     ;                                                        
     689/     240 :                     ;****************************************************************************************************************
     690/     240 :                     
     691/     240 : E3                             sex r3                                                           ; X = 3 (same as P)
     692/     241 : 61                             out 1                                                            ; select TV device (2)
     693/     242 : 02                             db  2                                                            
     694/     243 : 62                             out 2                                                            ; turn it off
     695/     244 : 00                             db  0                                                            
     696/     245 : D4                             sep r4                                                           
     697/     246 :                     
     698/     246 :                     ;****************************************************************************************************************
     699/     246 :                     ;                                                        
     700/     246 :                     ;                                     Turn hex keypad on (probably run in RC)
     701/     246 :                     ;                                                        
     702/     246 :                     ;****************************************************************************************************************
     703/     246 :                     
     704/     246 : EC                  l0246:     sex rc                                                           ; X = C
     705/     247 : 61                             out 1                                                            ; select Keypad device (1)
     706/     248 : 01                             db 1                                                             
     707/     249 : 62                             out 2                                                            ; turn it on.
     708/     24A : 01                             db 1                                                             
     709/     24B : E6                             sex r6                                                           ; set X back and return.
     710/     24C : D3                             sep r3                                                           
     711/     24D :                     
     712/     24D :                     ;****************************************************************************************************************
     713/     24D :                     ;                                                        
     714/     24D :                     ;                                                 Shift Vx left 4
     715/     24D :                     ;                                                        
     716/     24D :                     ;****************************************************************************************************************
     717/     24D :                     
     718/     24D : E6                  l024d:     sex r6                                                           ; R(X) now points to Vx
     719/     24E : F0                             ldx                                                              ; get Vx
     720/     24F : F4                             add                                                              ; add it
     721/     250 : 56                             str r6                                                           ; write back << 1
     722/     251 : F4                             add                                                              ; add it
     723/     252 : 56                             str r6                                                           ; write back << 2
     724/     253 : F4                             add                                                              ; add it
     725/     254 : 56                             str r6                                                           ; write back << 3
     726/     255 : F4                             add                                                              ; add it, now << 4
     727/     256 : 56                             str r6                                                           ; write back to Vx
     728/     257 : D3                             sep r3                                                           
     729/     258 :                     ;   
     730/     258 :                     ;   Tape Controller - code to write in low part of instruction
     731/     258 :                     ;   
     732/     258 : E5                  l0258:     sex r5                                                           ; use R5 as X
     733/     259 : 63                             out 3                                                            ; write low byte of instruction to port 3
     734/     25A : D4                             sep r4                                                           ; return
     735/     25B : 00                             db 0                                                             ; unused
     736/     25C :                     
     737/     25C :                     ;****************************************************************************************************************
     738/     25C :                     ;                                                        
     739/     25C :                     ;                                             Turn the television on
     740/     25C :                     ;                                                        
     741/     25C :                     ;****************************************************************************************************************
     742/     25C :                     
     743/     25C : F8 00                          ldi 0                                                            ; set display address to $700
     744/     25E : A0                             plo r0                                                           
     745/     25F : F8 07                          ldi 7                                                            
     746/     261 : B0                             phi r0                                                           
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 16 - 7/12/2016 22:32:07


     747/     262 : E3                             sex r3                                                           ; X = 3 (same as P)
     748/     263 : 61                             out 1                                                            ; select TV device (2)
     749/     264 : 02                             db 2                                                             
     750/     265 : 62                             out 2                                                            ; turn TV on (why 3 ?)
     751/     266 : 03                             db 3                                                             
     752/     267 : D4                             sep r4                                                           
     753/     268 :                     
     754/     268 :                     ;****************************************************************************************************************
     755/     268 :                     ;                                                        
     756/     268 :                     ;                                               Turn hex keypad off
     757/     268 :                     ;                                                        
     758/     268 :                     ;****************************************************************************************************************
     759/     268 :                     
     760/     268 : E3                             sex r3                                                           ; X = 3 (Same as P)
     761/     269 : 61                             out 1                                                            ; select keypad device (1)
     762/     26A : 01                             db 1                                                             
     763/     26B : 62                             out 2                                                            ; and turn it off
     764/     26C : 00                             db 0                                                             
     765/     26D : D4                             sep r4                                                           
     766/     26E :                     
     767/     26E :                     ;****************************************************************************************************************
     768/     26E :                     ;                                                        
     769/     26E :                     ;                                             Return from subroutine
     770/     26E :                     ;                                                        
     771/     26E :                     ;****************************************************************************************************************
     772/     26E :                     
     773/     26E : 42                             lda r2                                                           ; pop high return
     774/     26F : B5                             phi r5                                                           ; into R5
     775/     270 : 42                             lda r2                                                           ; same with low
     776/     271 : A5                             plo r5                                                           
     777/     272 : D4                             sep r4                                                           ; return.
     778/     273 :                     ;   
     779/     273 :                     ;   Load A and B into RA and RB
     780/     273 :                     ;   
     781/     273 : 96                  l0273:     ghi r6                                                           ; RF = $110
     782/     274 : BF                             phi rf                                                           
     783/     275 : F8 10                          ldi 10h                                                          
     784/     277 : AF                             plo rf                                                           
     785/     278 : 4F                             lda rf                                                           ; load in A
     786/     279 : BA                             phi ra                                                           
     787/     27A : 4F                             lda rf                                                           
     788/     27B : AA                             plo ra                                                           
     789/     27C : 4F                             lda rf                                                           ; load in B
     790/     27D : BB                             phi rb                                                           
     791/     27E : 4F                             lda rf                                                           
     792/     27F : AB                             plo rb                                                           
     793/     280 : D3                             sep r3                                                           
     794/     281 :                     
     795/     281 :                     ;****************************************************************************************************************
     796/     281 :                     ;                                                        
     797/     281 :                     ;                                               2xkk write kk to vX
     798/     281 :                     ;                                                        
     799/     281 :                     ;****************************************************************************************************************
     800/     281 :                     
     801/     281 : 45                  l0281:     lda r5                                                           ; read 2nd instruction byte
     802/     282 : 56                             str r6                                                           ; save in Vx
     803/     283 : D4                             sep r4                                                           
     804/     284 :                     ;   
     805/     284 :                     ;   Write to tape - delay
     806/     284 :                     ;   
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 17 - 7/12/2016 22:32:07


     807/     284 : D3                  l0284:     sep r3                                                           
     808/     285 : F8 14               l0285:     ldi 14h                                                          ; set timer counter
     809/     287 : AF                             plo rf                                                           
     810/     288 : 2F                  l0288:     dec rf                                                           
     811/     289 : 8F                             glo rf                                                           
     812/     28A : 3A 88                          bnz l0288                                                        
     813/     28C : 30 B0                          br  l02b0                                                        ; next time, it will write 0/1
     814/     28E :                     
     815/     28E :                     ;   
     816/     28E :                     ;   Do tone Vx = Tone VY = Delay
     817/     28E :                     ;   
     818/     28E : 46                  l028e:     lda r6                                                           ; read X (tone)
     819/     28F : BE                             phi re                                                           ; store in tone register
     820/     290 : F8 6E                          ldi l016e & 255                                                  ; set to identify return.
     821/     292 : A6                             plo r6                                                           
     822/     293 : 47                             lda r7                                                           ; read delay time.
     823/     294 : BF                             phi rf                                                           ; set RF counter.
     824/     295 : D8                             sep r8                                                           ; call the tone routine.
     825/     296 : BA                             db l02ba & 255                                                   
     826/     297 : 15                             inc r5                                                           ; fetch the 2nd byte
     827/     298 : D4                             sep r4                                                           
     828/     299 :                     
     829/     299 :                     ;****************************************************************************************************************
     830/     299 :                     ;                                                        
     831/     299 :                     ;                    8xyn  x = x or y (1) x and y (2) x+y(4) x-y (5), V0 is carry / not borrow
     832/     299 :                     ;                                                        
     833/     299 :                     ;****************************************************************************************************************
     834/     299 :                     
     835/     299 : 22                  l0299:     dec r2                                                           ; push $D3 on the stack
     836/     29A : F8 D3                          ldi 0d3h                                                         ; (SEP R3)
     837/     29C : 52                             str r2                                                           
     838/     29D : 22                             dec r2                                                           
     839/     29E : 45                             lda r5                                                           ; get the low byte
     840/     29F : F9 F0                          ori 0f0h                                                         ; F1 F2 F4 F5 which are or and + -
     841/     2A1 : 52                             str r2                                                           ; save on stack
     842/     2A2 : E6                             sex r6                                                           ; RX points to the Rx value
     843/     2A3 : 47                             lda r7                                                           ; get the RY value
     844/     2A4 : D2                             sep r2                                                           ; call the code pushed on the stack
     845/     2A5 : 56                             str r6                                                           ; save at R6 (Vx)
     846/     2A6 : F8 00                          ldi 0                                                            ; set R6 to point to $100 V0
     847/     2A8 : A6                             plo r6                                                           
     848/     2A9 : 96                             ghi r6                                                           ; D = 1
     849/     2AA : 33 AD                          bdf l02ad                                                        ; if DF clear then
     850/     2AC : F6                             shr                                                              ; D = 0
     851/     2AD : 56                  l02ad:     str r6                                                           ; write DF out to V0
     852/     2AE : D4                             sep r4                                                           
     853/     2AF :                     
     854/     2AF :                     ;****************************************************************************************************************
     855/     2AF :                     ;                                                        
     856/     2AF :                     ;       Write DF to tape. Sets up R6 to return to tape code, and writes for 2 or 3 cycles depending on DF.
     857/     2AF :                     ;                                                        
     858/     2AF :                     ;****************************************************************************************************************
     859/     2AF :                     
     860/     2AF : D3                  l02af:     sep r3                                                           
     861/     2B0 : F8 72               l02b0:     ldi l0172 & 255                                                  
     862/     2B2 : A6                             plo r6                                                           
     863/     2B3 : 9C                             ghi rc                                                           ; D = 2 (write cycles)
     864/     2B4 : 3B B9                          bnf l02b9                                                        ; if bit to write zero, skip
     865/     2B6 : 1B                             inc rb                                                           ; inc parity value in RB.0
     866/     2B7 : FC 03                          adi 3                                                            ; D = 5
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 18 - 7/12/2016 22:32:07


     867/     2B9 : AF                  l02b9:     plo rf                                                           ; put write value in RF
     868/     2BA :                     
     869/     2BA :                     ;****************************************************************************************************************
     870/     2BA :                     ;                                                        
     871/     2BA :                     ;                        Tone Generate (P = C), RE.1 = Pitch, RF.0 = Cycles to do it for.
     872/     2BA :                     ;                   R6 is set to 72 for read tape and 6E for make tone, which is how it figures
     873/     2BA :                     ;                        out what to do afterwards,this is used for tape and cassette out.
     874/     2BA :                     ;                                                        
     875/     2BA :                     ;****************************************************************************************************************
     876/     2BA :                     
     877/     2BA : EC                  l02ba:     sex rc                                                           ; X = P = C
     878/     2BB : 63                             out 3                                                            ; set External Function Register -> Run
     879/     2BC : 05                             db 05                                                            ; speaker line
     880/     2BD : 9E                             ghi re                                                           ; value 3, set in write tape routine for tape
     881/     2BE : FF 01               l02be:     smi 1                                                            ; short delay loop
     882/     2C0 : 3A BE                          bnz l02be                                                        
     883/     2C2 : 63                             out 3                                                            ; reset speaker line.
     884/     2C3 : 01                             db  01                                                           
     885/     2C4 : 2F                             dec rf                                                           ; done it correct number of times
     886/     2C5 : D6                             sep r6                                                           ; call F0/F1 -> D, identify caller
     887/     2C6 : 3A BA                          bnz l02ba                                                        ; tone, go back to tone loop
     888/     2C8 : 30 84                          br  l0284                                                        ; tape, go back to tape loop
     889/     2CA :                     
     890/     2CA :                     ;****************************************************************************************************************
     891/     2CA :                     ;                                                        
     892/     2CA :                     ;                                             4xkk  Vx = kk & random
     893/     2CA :                     ;                                                        
     894/     2CA :                     ;****************************************************************************************************************
     895/     2CA :                     
     896/     2CA : 19                  l02ca:     inc r9                                                           ; bump and read random lower
     897/     2CB : 89                             glo r9                                                           
     898/     2CC : A7                             plo r7                                                           ; R7 = $01<R9.0>
     899/     2CD : E7                             sex r7                                                           ; X points there, use as randomish data
     900/     2CE : 99                             ghi r9                                                           ; random high
     901/     2CF : F4                             add                                                              ; R9.1 + Mem[$01<R9.0>]
     902/     2D0 : 22                             dec r2                                                           ; push on stack
     903/     2D1 : 52                             str r2                                                           
     904/     2D2 : F6                             shr                                                              ; add to self shifted right
     905/     2D3 : E2                             sex r2                                                           
     906/     2D4 : F4                             add                                                              
     907/     2D5 : B9                             phi r9                                                           ; update R9 high
     908/     2D6 : 56                             str r6                                                           ; save at Vx
     909/     2D7 : E6                             sex r6                                                           ; RX points to Vx
     910/     2D8 : 45                             lda r5                                                           ; read low byte (mask)
     911/     2D9 : F2                             and                                                              ; and with Vx
     912/     2DA : 56                             str r6                                                           ; update
     913/     2DB : 12                             inc r2                                                           ; fix up stack and exit.
     914/     2DC : D4                             sep r4                                                           
     915/     2DD :                     
     916/     2DD :                     ;****************************************************************************************************************
     917/     2DD :                     ;                                                        
     918/     2DD :                     ;               9xys  Draw sxs pattern (5 or 8) x = pattern address in page 3 y = tv cell address.
     919/     2DD :                     ;                                                        
     920/     2DD :                     ;****************************************************************************************************************
     921/     2DD : 45                  l02dd:     lda r5                                                           ; Get next byte
     922/     2DE : FA 0F                          ani 0fh                                                          ; look at lower 4 bits which are size
     923/     2E0 : AF                             plo rf                                                           ; RF.0 is the number of lines to do.
     924/     2E1 :                     
     925/     2E1 :                     ;****************************************************************************************************************
     926/     2E1 :                     ;                                                        
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 19 - 7/12/2016 22:32:07


     927/     2E1 :                     ;                                                   RF = #lines
     928/     2E1 :                     ;                                                        
     929/     2E1 :                     ;****************************************************************************************************************
     930/     2E1 :                     
     931/     2E1 : E6                  l02e1:     sex r6                                                           ; R(x) points to VX
     932/     2E2 : F0                             ldx                                                              ; read X
     933/     2E3 : AA                             plo ra                                                           ; save in RA.0
     934/     2E4 : F8 03                          ldi 3                                                            ; RA is $03[Vx]
     935/     2E6 : BA                             phi ra                                                           
     936/     2E7 :                     
     937/     2E7 :                     ;****************************************************************************************************************
     938/     2E7 :                     ;                                                        
     939/     2E7 :                     ;                  RF = #lines. RA = address of graphic data. Calc address from tv cell address.
     940/     2E7 :                     ;                       Bits 3,4 are the vertical cell position (0-3, 8 pixels high cell).
     941/     2E7 :                     ;                       Bits 0,1,2 are the horizontal position. (0-7, 8 pixels wide cell).
     942/     2E7 :                     ;                                                        
     943/     2E7 :                     ;****************************************************************************************************************
     944/     2E7 :                     
     945/     2E7 : 47                             lda r7                                                           ; read Y (Cell number)
     946/     2E8 : AB                             plo rb                                                           ; RB.0 = Y
     947/     2E9 : F6                             shr                                                              ; R6 = Y >> 1 << 4 (Y * 8)
     948/     2EA : 56                             str r6                                                           ; using shift left function, so bits
     949/     2EB : D8                             sep r8                                                           ; 3 and 4 are now in bits 6,7
     950/     2EC : 4D                             db  l024d & 255                                                  
     951/     2ED : 8B                             glo rb                                                           ; get original cell number for bits 0-2
     952/     2EE : F1                             or                                                               ; or with bits 6-7
     953/     2EF : FA C7                          ani 0c7h                                                         ; remove so only bits 0-2 and bits 6-7
     954/     2F1 : AB                             plo rb                                                           
     955/     2F2 : F8 07                          ldi 07                                                           ; set RB.1 = 07<addr>
     956/     2F4 : BB                             phi rb                                                           
     957/     2F5 :                     
     958/     2F5 : 4A                  l02f5:     lda ra                                                           ; read first byte of data
     959/     2F6 : 5B                             str rb                                                           ; write to the screen
     960/     2F7 : 8B                             glo rb                                                           ; get low byte of screen address
     961/     2F8 : FC 08                          adi 08                                                           ; go one row down
     962/     2FA : AB                             plo rb                                                           ; update screen address
     963/     2FB : 2F                             dec rf                                                           ; decrement line counter.
     964/     2FC : 8F                             glo rf                                                           ; check it
     965/     2FD : 3A F5                          bnz l02f5                                                        ; do next row.
     966/     2FF : D4                             sep r4                                                           
     967/     300 :                     
     968/     300 :                     ;****************************************************************************************************************
     969/     300 :                     ;                                                        
     970/     300 :                     ;                  0300 font data. First 16 bytes is offset for 0-9A-F required for the monitor.
     971/     300 :                     ;                                       Everything after that is optional.
     972/     300 :                     ;                                                        
     973/     300 :                     ;****************************************************************************************************************
     974/     300 :                     
     975/     300 : 48                             db l0348 & 255                                                   
     976/     301 : 10                             db l0310 & 255                                                   
     977/     302 : 2E                             db l032e & 255                                                   
     978/     303 : 2A                             db l032a & 255                                                   
     979/     304 : 19                             db l0319 & 255                                                   
     980/     305 : 32                             db l0332 & 255                                                   
     981/     306 : 44                             db l0344 & 255                                                   
     982/     307 : 14                             db l0314 & 255                                                   
     983/     308 : 4C                             db l034c & 255                                                   
     984/     309 : 1E                             db l031e & 255                                                   
     985/     30A : 50                             db l0350 & 255                                                   
     986/     30B : 22                             db l0322 & 255                                                   
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 20 - 7/12/2016 22:32:07


     987/     30C : 40                             db l0340 & 255                                                   
     988/     30D : 26                             db l0326 & 255                                                   
     989/     30E : 37                             db l0337 & 255                                                   
     990/     30F : 3B                             db l033b & 255                                                   
     991/     310 : 10                  l0310:     db 010h                                                          ; ...X....
     992/     311 : 30                             db 030h                                                          ; ..XX....
     993/     312 : 10                             db 010h                                                          ; ...X....
     994/     313 : 10                             db 010h                                                          ; ...X....
     995/     314 : 7C                  l0314:     db 07ch                                                          ; .XXXXX..
     996/     315 : 08                             db 008h                                                          ; ....X...
     997/     316 : 10                             db 010h                                                          ; ...X....
     998/     317 : 20                             db 020h                                                          ; ..X.....
     999/     318 : 40                             db 040h                                                          ; .X......
    1000/     319 : 08                  l0319:     db 008h                                                          ; ....X...
    1001/     31A : 18                             db 018h                                                          ; ...XX...
    1002/     31B : 28                             db 028h                                                          ; ..X.X...
    1003/     31C : 7C                             db 07ch                                                          ; .XXXXX..
    1004/     31D : 08                             db 008h                                                          ; ....X...
    1005/     31E : 38                  l031e:     db 038h                                                          ; ..XXX...
    1006/     31F : 44                             db 044h                                                          ; .X...X..
    1007/     320 : 3C                             db 03ch                                                          ; ..XXXX..
    1008/     321 : 04                             db 004h                                                          ; .....X..
    1009/     322 : 78                  l0322:     db 078h                                                          ; .XXXX...
    1010/     323 : 24                             db 024h                                                          ; ..X..X..
    1011/     324 : 38                             db 038h                                                          ; ..XXX...
    1012/     325 : 24                             db 024h                                                          ; ..X..X..
    1013/     326 : 78                  l0326:     db 078h                                                          ; .XXXX...
    1014/     327 : 44                             db 044h                                                          ; .X...X..
    1015/     328 : 44                             db 044h                                                          ; .X...X..
    1016/     329 : 44                             db 044h                                                          ; .X...X..
    1017/     32A : 78                  l032a:     db 078h                                                          ; .XXXX...
    1018/     32B : 04                             db 004h                                                          ; .....X..
    1019/     32C : 18                             db 018h                                                          ; ...XX...
    1020/     32D : 04                             db 004h                                                          ; .....X..
    1021/     32E : 78                  l032e:     db 078h                                                          ; .XXXX...
    1022/     32F : 04                             db 004h                                                          ; .....X..
    1023/     330 : 38                             db 038h                                                          ; ..XXX...
    1024/     331 : 40                             db 040h                                                          ; .X......
    1025/     332 : 7C                  l0332:     db 07ch                                                          ; .XXXXX..
    1026/     333 : 04                             db 004h                                                          ; .X..
    1027/     334 : 78                             db 078h                                                          ; .XXXX...
    1028/     335 : 04                             db 004h                                                          ; .....X..
    1029/     336 : 78                             db 078h                                                          ; .XXXX...
    1030/     337 : 7C                  l0337:     db 07ch                                                          ; .XXXXX..
    1031/     338 : 40                             db 040h                                                          ; .X......
    1032/     339 : 7C                             db 07ch                                                          ; .XXXXX..
    1033/     33A : 40                             db 040h                                                          ; .X......
    1034/     33B : 7C                  l033b:     db 07ch                                                          ; .XXXXX..
    1035/     33C : 40                             db 040h                                                          ; .X......
    1036/     33D : 7C                             db 07ch                                                          ; .XXXXX..
    1037/     33E : 40                             db 040h                                                          ; .X......
    1038/     33F : 40                             db 040h                                                          ; .X......
    1039/     340 : 3C                  l0340:     db 03ch                                                          ; ..XXXX..
    1040/     341 : 40                             db 040h                                                          ; .X......
    1041/     342 : 40                             db 040h                                                          ; .X......
    1042/     343 : 40                             db 040h                                                          ; .X......
    1043/     344 : 3C                  l0344:     db 03ch                                                          ; ..XXXX..
    1044/     345 : 40                             db 040h                                                          ; .X......
    1045/     346 : 78                             db 078h                                                          ; .XXXX...
    1046/     347 : 44                             db 044h                                                          ; .X...X..
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 21 - 7/12/2016 22:32:07


    1047/     348 : 38                  l0348:     db 038h                                                          ; ..XXX...
    1048/     349 : 44                             db 044h                                                          ; .X...X..
    1049/     34A : 44                             db 044h                                                          ; .X...X..
    1050/     34B : 44                             db 044h                                                          ; .X...X..
    1051/     34C : 38                  l034c:     db 038h                                                          ; ..XXX...
    1052/     34D : 44                             db 044h                                                          ; .X...X..
    1053/     34E : 38                             db 038h                                                          ; ..XXX...
    1054/     34F : 44                             db 044h                                                          ; .X...X..
    1055/     350 : 38                  l0350:     db 038h                                                          ; ..XXX...
    1056/     351 : 44                             db 044h                                                          ; .X...X..
    1057/     352 : 7C                             db 07ch                                                          ; .XXXXX..
    1058/     353 : 44                             db 044h                                                          ; .X...X..
    1059/     354 : 44                  l0354:     db 044h                                                          ; .X...X..
    1060/     355 : 7C                             db 07ch                                                          ; .XXXXX..
    1061/     356 : 44                  l0356:     db 044h                                                          ; .X...X..
    1062/     357 : 44                             db 044h                                                          ; .X...X..
    1063/     358 : 44                             db 044h                                                          ; .X...X..
    1064/     359 : 44                             db 044h                                                          ; .X...X..
    1065/     35A : 38                             db 038h                                                          ; ..XXX...
    1066/     35B : 44                  l035b:     db 044h                                                          ; .X...X..
    1067/     35C : 08                             db 008h                                                          ; ....X...
    1068/     35D : 10                  l035d:     db 010h                                                          ; ...X....
    1069/     35E : 10                             db 010h                                                          ; ...X....
    1070/     35F : 00                  l035f:     db 000h                                                          ; ........
    1071/     360 : 00                  l0360:     db 000h                                                          ; ........
    1072/     361 : 00                             db 000h                                                          ; ........
    1073/     362 : 00                  l0362:     db 000h                                                          ; ........
    1074/     363 : 00                             db 000h                                                          ; ........
    1075/     364 : 7C                             db 07ch                                                          ; .XXXXX..
    1076/     365 : 00                             db 000h                                                          ; ........
    1077/     366 : 00                  l0366:     db 000h                                                          ; ........
    1078/     367 : 7C                             db 07ch                                                          ; .XXXXX..
    1079/     368 : 00                             db 000h                                                          ; ........
    1080/     369 : 7C                             db 07ch                                                          ; .XXXXX..
    1081/     36A : 00                  l036a:     db 000h                                                          ; ........
    1082/     36B : 18                             db 018h                                                          ; ...XX...
    1083/     36C : 00                             db 000h                                                          ; ........
    1084/     36D : 18                             db 018h                                                          ; ...XX...
    1085/     36E : 00                             db 000h                                                          ; ........
    1086/     36F :                     
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 22 - 7/12/2016 22:32:07


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :  i386-unknown-win32 - | *BIGENDIAN :                      0 - |
*BRANCHEXT :                      0 - | *CASESENSITIVE :                  0 - |
*CONSTPI :        3.141592653589793 - | *DATE :                   7/12/2016 - |
*FALSE :                          0 - | *FULLPMMU :                       1 - |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
*INEXTMODE :                      0 - | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - |  L0019 :                         19 C |
 L002C :                         2C C |  L004B :                         4B C |
 L0058 :                         58 C |  L005B :                         5B C |
 L0068 :                         68 C |  L007D :                         7D C |
 L0084 :                         84 C |  L0117 :                        117 C |
 L0119 :                        119 C |  L0129 :                        129 C |
 L0131 :                        131 C |  L013B :                        13B C |
 L015C :                        15C C |  L0160 :                        160 C |
 L0165 :                        165 C |  L0166 :                        166 C |
*L016B :                        16B C |  L016D :                        16D C |
 L016E :                        16E C |  L0171 :                        171 C |
 L0172 :                        172 C |  L0175 :                        175 C |
 L017C :                        17C C |  L017E :                        17E C |
 L0184 :                        184 C | *L0185 :                        185 C |
 L01A2 :                        1A2 C |  L01AC :                        1AC C |
*L01C0 :                        1C0 C |  L0200 :                        200 C |
 L0202 :                        202 C |  L0209 :                        209 C |
 L020D :                        20D C |  L0215 :                        215 C |
 L021A :                        21A C |  L0223 :                        223 C |
 L0224 :                        224 C |  L0228 :                        228 C |
 L022A :                        22A C |  L022B :                        22B C |
 L0237 :                        237 C |  L0246 :                        246 C |
 L024D :                        24D C |  L0258 :                        258 C |
 L0273 :                        273 C |  L0281 :                        281 C |
 L0284 :                        284 C |  L0285 :                        285 C |
 L0288 :                        288 C | *L028E :                        28E C |
 L0299 :                        299 C |  L02AD :                        2AD C |
*L02AF :                        2AF C |  L02B0 :                        2B0 C |
 L02B9 :                        2B9 C |  L02BA :                        2BA C |
 L02BE :                        2BE C |  L02CA :                        2CA C |
 L02DD :                        2DD C | *L02E1 :                        2E1 C |
 L02F5 :                        2F5 C |  L0310 :                        310 C |
 L0314 :                        314 C |  L0319 :                        319 C |
 L031E :                        31E C |  L0322 :                        322 C |
 L0326 :                        326 C |  L032A :                        32A C |
 L032E :                        32E C |  L0332 :                        332 C |
 L0337 :                        337 C |  L033B :                        33B C |
 L0340 :                        340 C |  L0344 :                        344 C |
 L0348 :                        348 C |  L034C :                        34C C |
 L0350 :                        350 C | *L0354 :                        354 C |
*L0356 :                        356 C | *L035B :                        35B C |
*L035D :                        35D C | *L035F :                        35F C |
*L0360 :                        360 C | *L0362 :                        362 C |
*L0366 :                        366 C | *L036A :                        36A C |
*LISTON :                         1 - | *MACEXP :                         1 - |
*MOMCPU :                      1802 - | *MOMCPUNAME :                  1802 - |
*NESTMAX :                      100 - | *PACKING :                        0 - |
*PADDING :                        1 - |  R0 :                             0 - |
 R1 :                             1 - |  R2 :                             2 - |
 AS V1.42 Beta [Bld 102] - source file fel.asm - page 23 - 7/12/2016 22:32:07


 R3 :                             3 - |  R4 :                             4 - |
 R5 :                             5 - |  R6 :                             6 - |
 R7 :                             7 - |  R8 :                             8 - |
 R9 :                             9 - |  RA :                             A - |
 RB :                             B - |  RC :                             C - |
 RD :                             D - |  RE :                             E - |
*RELAXED :                        0 - |  RF :                             F - |
*TIME :                    22:32:07 - | *TRUE :                           1 - |
*VERSION :                     142F - |

    131 symbols
     43 unused symbols

 AS V1.42 Beta [Bld 102] - source file fel.asm - page 24 - 7/12/2016 22:32:07


  defined macros:
  ---------------

FEL                                   |

      1 macro

 AS V1.42 Beta [Bld 102] - source file fel.asm - page 25 - 7/12/2016 22:32:07


  codepages:
  ----------

STANDARD (0 changed characters)


0.02 seconds assembly time

   1116 lines source file
   1240 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
